{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PathComponent = void 0;\nvar PathComponent = /*#__PURE__*/_createClass(function PathComponent(args) {\n  var _this = this;\n  _classCallCheck(this, PathComponent);\n  this.getIndex = function () {\n    return _this.index;\n  };\n  this.isWildcard = function () {\n    return _this.wildcard;\n  };\n  this.isHardened = function () {\n    return _this.hardened;\n  };\n  this.index = args.index;\n  this.hardened = args.hardened;\n  if (this.index !== undefined) {\n    this.wildcard = false;\n  } else {\n    this.wildcard = true;\n  }\n  if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {\n    throw new Error(\"#[ur-registry][PathComponent][fn.constructor]: Invalid index \".concat(this.index, \" - most significant bit cannot be set\"));\n  }\n});\nexports.PathComponent = PathComponent;\nPathComponent.HARDENED_BIT = 0x80000000;","map":{"version":3,"mappings":";;;;;;;;IAAaA,aAAa,6BAOxB,uBAAYC,IAA2C;EAAA;EAAA;EAiBhD,aAAQ,GAAG;IAAA,OAAM,KAAI,CAACC,KAAK;EAAA;EAC3B,eAAU,GAAG;IAAA,OAAM,KAAI,CAACC,QAAQ;EAAA;EAChC,eAAU,GAAG;IAAA,OAAM,KAAI,CAACC,QAAQ;EAAA;EAlBrC,IAAI,CAACF,KAAK,GAAGD,IAAI,CAACC,KAAK;EACvB,IAAI,CAACE,QAAQ,GAAGH,IAAI,CAACG,QAAQ;EAE7B,IAAI,IAAI,CAACF,KAAK,KAAKG,SAAS,EAAE;IAC5B,IAAI,CAACF,QAAQ,GAAG,KAAK;GACtB,MAAM;IACL,IAAI,CAACA,QAAQ,GAAG,IAAI;;EAGtB,IAAI,IAAI,CAACD,KAAK,IAAI,CAAC,IAAI,CAACA,KAAK,GAAGF,aAAa,CAACM,YAAY,MAAM,CAAC,EAAE;IACjE,MAAM,IAAIC,KAAK,wEACmD,IAAI,CAACL,KAAK,2CAC3E;;AAEL,CAAC;AAtBHM;AACyBR,0BAAY,GAAG,UAAU","names":["PathComponent","args","index","wildcard","hardened","undefined","HARDENED_BIT","Error","exports"],"sources":["/Users/ivan/Metadata/node_modules/@keystonehq/bc-ur-registry/src/PathComponent.ts"],"sourcesContent":["export class PathComponent {\n  public static readonly HARDENED_BIT = 0x80000000;\n\n  private index?: number;\n  private wildcard: boolean;\n  private hardened: boolean;\n\n  constructor(args: { index?: number; hardened: boolean }) {\n    this.index = args.index;\n    this.hardened = args.hardened;\n\n    if (this.index !== undefined) {\n      this.wildcard = false;\n    } else {\n      this.wildcard = true;\n    }\n\n    if (this.index && (this.index & PathComponent.HARDENED_BIT) !== 0) {\n      throw new Error(\n        `#[ur-registry][PathComponent][fn.constructor]: Invalid index ${this.index} - most significant bit cannot be set`,\n      );\n    }\n  }\n\n  public getIndex = () => this.index;\n  public isWildcard = () => this.wildcard;\n  public isHardened = () => this.hardened;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}