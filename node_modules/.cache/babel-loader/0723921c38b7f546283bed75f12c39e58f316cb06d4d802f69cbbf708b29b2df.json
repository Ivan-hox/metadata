{"ast":null,"code":"export var encodeDecode = function encodeDecode(layout) {\n  var decode = layout.decode.bind(layout);\n  var encode = layout.encode.bind(layout);\n  return {\n    decode: decode,\n    encode: encode\n  };\n};","map":{"version":3,"mappings":"AAOA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAY,CAAOC,MAAiB,EAAqB;EAClE,IAAMC,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC;EACzC,IAAMG,MAAM,GAAGH,MAAM,CAACG,MAAM,CAACD,IAAI,CAACF,MAAM,CAAC;EACzC,OAAO;IAAEC,MAAM,EAANA,MAAM;IAAEE,MAAM,EAANA;EAAM,CAAE;AAC7B,CAAC","names":["encodeDecode","layout","decode","bind","encode"],"sources":["/Users/ivan/Metadata/node_modules/@solana/buffer-layout-utils/src/base.ts"],"sourcesContent":["import { Layout } from '@solana/buffer-layout';\n\nexport interface EncodeDecode<T> {\n    decode(buffer: Buffer, offset?: number): T;\n    encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nexport const encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}