{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.u256be = exports.u256 = exports.u192be = exports.u192 = exports.u128be = exports.u128 = exports.u64be = exports.u64 = exports.bigIntBE = exports.bigInt = void 0;\nvar buffer_layout_1 = require(\"@solana/buffer-layout\");\nvar bigint_buffer_1 = require(\"bigint-buffer\");\nvar base_1 = require(\"./base\");\nvar bigInt = function bigInt(length) {\n  return function (property) {\n    var layout = (0, buffer_layout_1.blob)(length, property);\n    var _ref = (0, base_1.encodeDecode)(layout),\n      encode = _ref.encode,\n      decode = _ref.decode;\n    var bigIntLayout = layout;\n    bigIntLayout.decode = function (buffer, offset) {\n      var src = decode(buffer, offset);\n      return (0, bigint_buffer_1.toBigIntLE)(Buffer.from(src));\n    };\n    bigIntLayout.encode = function (bigInt, buffer, offset) {\n      var src = (0, bigint_buffer_1.toBufferLE)(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n  };\n};\nexports.bigInt = bigInt;\nvar bigIntBE = function bigIntBE(length) {\n  return function (property) {\n    var layout = (0, buffer_layout_1.blob)(length, property);\n    var _ref2 = (0, base_1.encodeDecode)(layout),\n      encode = _ref2.encode,\n      decode = _ref2.decode;\n    var bigIntLayout = layout;\n    bigIntLayout.decode = function (buffer, offset) {\n      var src = decode(buffer, offset);\n      return (0, bigint_buffer_1.toBigIntBE)(Buffer.from(src));\n    };\n    bigIntLayout.encode = function (bigInt, buffer, offset) {\n      var src = (0, bigint_buffer_1.toBufferBE)(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n  };\n};\nexports.bigIntBE = bigIntBE;\nexports.u64 = (0, exports.bigInt)(8);\nexports.u64be = (0, exports.bigIntBE)(8);\nexports.u128 = (0, exports.bigInt)(16);\nexports.u128be = (0, exports.bigIntBE)(16);\nexports.u192 = (0, exports.bigInt)(24);\nexports.u192be = (0, exports.bigIntBE)(24);\nexports.u256 = (0, exports.bigInt)(32);\nexports.u256be = (0, exports.bigIntBE)(32);","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEO,IAAMA,MAAM,GACf,SADSA,MAAM,CACdC,MAAc;EAAA,OACf,UAACC,QAAiB,EAAoB;IAClC,IAAMC,MAAM,GAAG,wBAAI,EAACF,MAAM,EAAEC,QAAQ,CAAC;IACrC,WAA2B,uBAAY,EAACC,MAAM,CAAC;MAAvCC,MAAM,QAANA,MAAM;MAAEC,MAAM,QAANA,MAAM;IAEtB,IAAMC,YAAY,GAAGH,MAA2C;IAEhEG,YAAY,CAACD,MAAM,GAAG,UAACE,MAAc,EAAEC,MAAc,EAAI;MACrD,IAAMC,GAAG,GAAGJ,MAAM,CAACE,MAAM,EAAEC,MAAM,CAAC;MAClC,OAAO,8BAAU,EAACE,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAAC;IACvC,CAAC;IAEDH,YAAY,CAACF,MAAM,GAAG,UAACJ,MAAc,EAAEO,MAAc,EAAEC,MAAc,EAAI;MACrE,IAAMC,GAAG,GAAG,8BAAU,EAACT,MAAM,EAAEC,MAAM,CAAC;MACtC,OAAOG,MAAM,CAACK,GAAG,EAAEF,MAAM,EAAEC,MAAM,CAAC;IACtC,CAAC;IAED,OAAOF,YAAY;EACvB,CAAC;AAAA;AAnBQM,cAAM;AAqBZ,IAAMC,QAAQ,GACjB,SADSA,QAAQ,CAChBZ,MAAc;EAAA,OACf,UAACC,QAAiB,EAAoB;IAClC,IAAMC,MAAM,GAAG,wBAAI,EAACF,MAAM,EAAEC,QAAQ,CAAC;IACrC,YAA2B,uBAAY,EAACC,MAAM,CAAC;MAAvCC,MAAM,SAANA,MAAM;MAAEC,MAAM,SAANA,MAAM;IAEtB,IAAMC,YAAY,GAAGH,MAA2C;IAEhEG,YAAY,CAACD,MAAM,GAAG,UAACE,MAAc,EAAEC,MAAc,EAAI;MACrD,IAAMC,GAAG,GAAGJ,MAAM,CAACE,MAAM,EAAEC,MAAM,CAAC;MAClC,OAAO,8BAAU,EAACE,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAAC;IACvC,CAAC;IAEDH,YAAY,CAACF,MAAM,GAAG,UAACJ,MAAc,EAAEO,MAAc,EAAEC,MAAc,EAAI;MACrE,IAAMC,GAAG,GAAG,8BAAU,EAACT,MAAM,EAAEC,MAAM,CAAC;MACtC,OAAOG,MAAM,CAACK,GAAG,EAAEF,MAAM,EAAEC,MAAM,CAAC;IACtC,CAAC;IAED,OAAOF,YAAY;EACvB,CAAC;AAAA;AAnBQM,gBAAQ;AAqBRA,WAAG,GAAG,kBAAM,EAAC,CAAC,CAAC;AAEfA,aAAK,GAAG,oBAAQ,EAAC,CAAC,CAAC;AAEnBA,YAAI,GAAG,kBAAM,EAAC,EAAE,CAAC;AAEjBA,cAAM,GAAG,oBAAQ,EAAC,EAAE,CAAC;AAErBA,YAAI,GAAG,kBAAM,EAAC,EAAE,CAAC;AAEjBA,cAAM,GAAG,oBAAQ,EAAC,EAAE,CAAC;AAErBA,YAAI,GAAG,kBAAM,EAAC,EAAE,CAAC;AAEjBA,cAAM,GAAG,oBAAQ,EAAC,EAAE,CAAC","names":["bigInt","length","property","layout","encode","decode","bigIntLayout","buffer","offset","src","Buffer","from","exports","bigIntBE"],"sources":["/Users/ivan/Metadata/node_modules/@solana/buffer-layout-utils/src/bigint.ts"],"sourcesContent":["import { blob, Layout } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base';\n\nexport const bigInt =\n    (length: number) =>\n    (property?: string): Layout<bigint> => {\n        const layout = blob(length, property);\n        const { encode, decode } = encodeDecode(layout);\n\n        const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n        bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n            const src = decode(buffer, offset);\n            return toBigIntLE(Buffer.from(src));\n        };\n\n        bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n            const src = toBufferLE(bigInt, length);\n            return encode(src, buffer, offset);\n        };\n\n        return bigIntLayout;\n    };\n\nexport const bigIntBE =\n    (length: number) =>\n    (property?: string): Layout<bigint> => {\n        const layout = blob(length, property);\n        const { encode, decode } = encodeDecode(layout);\n\n        const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n        bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n            const src = decode(buffer, offset);\n            return toBigIntBE(Buffer.from(src));\n        };\n\n        bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n            const src = toBufferBE(bigInt, length);\n            return encode(src, buffer, offset);\n        };\n\n        return bigIntLayout;\n    };\n\nexport const u64 = bigInt(8);\n\nexport const u64be = bigIntBE(8);\n\nexport const u128 = bigInt(16);\n\nexport const u128be = bigIntBE(16);\n\nexport const u192 = bigInt(24);\n\nexport const u192be = bigIntBE(24);\n\nexport const u256 = bigInt(32);\n\nexport const u256be = bigIntBE(32);\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}