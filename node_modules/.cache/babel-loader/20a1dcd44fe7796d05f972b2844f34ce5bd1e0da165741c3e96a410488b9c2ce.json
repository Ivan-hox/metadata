{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errorCodeFromLogs = void 0;\nvar errorLineRx = /Custom program error: (0x[a-f0-9]+)/i;\n/**\n * Parses an error code included with solana logs\n *\n * @private\n */\nfunction errorCodeFromLogs(logs) {\n  var _iterator = _createForOfIteratorHelper(logs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var line = _step.value;\n      var match = line.match(errorLineRx);\n      if (match == null) continue;\n      var hexCode = match[1];\n      try {\n        return parseInt(hexCode);\n      } catch (_) {}\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nexports.errorCodeFromLogs = errorCodeFromLogs;","map":{"version":3,"mappings":";;;;;;;AAAA,IAAMA,WAAW,GAAG,sCAAsC;AAE1D;;;;;AAKA,SAAgBC,iBAAiB,CAACC,IAAc;EAAA,2CAC3BA,IAAI;IAAA;EAAA;IAAvB,oDAAyB;MAAA,IAAdC,IAAI;MACb,IAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;MACrC,IAAII,KAAK,IAAI,IAAI,EAAE;MACnB,IAAMC,OAAO,GAAGD,KAAK,CAAC,CAAC,CAAC;MACxB,IAAI;QACF,OAAOE,QAAQ,CAACD,OAAO,CAAC;OACzB,CAAC,OAAOE,CAAM,EAAE;;EAClB;IAAA;EAAA;IAAA;EAAA;EACD,OAAO,IAAI;AACb;AAVAC","names":["errorLineRx","errorCodeFromLogs","logs","line","match","hexCode","parseInt","_","exports"],"sources":["../../src/parse-error.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}