{"ast":null,"code":"import React,{useMemo}from\"react\";import{ConnectionProvider,WalletProvider}from\"@solana/wallet-adapter-react\";import{WalletAdapterNetwork}from\"@solana/wallet-adapter-base\";import{UnsafeBurnerWalletAdapter}from\"@solana/wallet-adapter-wallets\";import{WalletModalProvider,WalletDisconnectButton,WalletMultiButton}from\"@solana/wallet-adapter-react-ui\";import{LedgerWalletAdapter,PhantomWalletAdapter,SlopeWalletAdapter,SolflareWalletAdapter,SolletExtensionWalletAdapter,SolletWalletAdapter,TorusWalletAdapter}from\"@solana/wallet-adapter-wallets\";import{clusterApiUrl}from\"@solana/web3.js\";import Main from\"./components/Main\";import Container from\"react-bootstrap/Container\";import Row from\"react-bootstrap/Row\";import Col from\"react-bootstrap/Col\";import Stack from\"react-bootstrap/Stack\";// Default styles that can be overridden by your app\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";require(\"@solana/wallet-adapter-react-ui/styles.css\");export var Wallet=function Wallet(){// The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\nvar network=WalletAdapterNetwork.Mainnet;// You can also provide a custom RPC endpoint.\nvar endpoint=useMemo(function(){return clusterApiUrl(network);},[network]);var wallets=useMemo(function(){return[new PhantomWalletAdapter(),new SlopeWalletAdapter(),new SolflareWalletAdapter({network:network}),new TorusWalletAdapter(),new LedgerWalletAdapter(),new SolletWalletAdapter({network:network}),new SolletExtensionWalletAdapter({network:network})];},// eslint-disable-next-line react-hooks/exhaustive-deps\n[network]);return/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,autoConnect:true,children:/*#__PURE__*/_jsx(WalletModalProvider,{children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Stack,{gap:3,children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(WalletMultiButton,{})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Main,{})})]})})})})});};","map":{"version":3,"names":["React","useMemo","ConnectionProvider","WalletProvider","WalletAdapterNetwork","UnsafeBurnerWalletAdapter","WalletModalProvider","WalletDisconnectButton","WalletMultiButton","LedgerWalletAdapter","PhantomWalletAdapter","SlopeWalletAdapter","SolflareWalletAdapter","SolletExtensionWalletAdapter","SolletWalletAdapter","TorusWalletAdapter","clusterApiUrl","Main","Container","Row","Col","Stack","require","Wallet","network","Mainnet","endpoint","wallets"],"sources":["/Users/ivan/Metadata/src/WalletContext.js"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport { UnsafeBurnerWalletAdapter } from \"@solana/wallet-adapter-wallets\";\nimport {\n  WalletModalProvider,\n  WalletDisconnectButton,\n  WalletMultiButton,\n} from \"@solana/wallet-adapter-react-ui\";\nimport {\n  LedgerWalletAdapter,\n  PhantomWalletAdapter,\n  SlopeWalletAdapter,\n  SolflareWalletAdapter,\n  SolletExtensionWalletAdapter,\n  SolletWalletAdapter,\n  TorusWalletAdapter,\n} from \"@solana/wallet-adapter-wallets\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport Main from \"./components/Main\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Stack from \"react-bootstrap/Stack\";\n\n// Default styles that can be overridden by your app\nrequire(\"@solana/wallet-adapter-react-ui/styles.css\");\n\nexport const Wallet = () => {\n  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n  const network = WalletAdapterNetwork.Mainnet;\n\n  // You can also provide a custom RPC endpoint.\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n  const wallets = useMemo(\n    () => [\n      new PhantomWalletAdapter(),\n      new SlopeWalletAdapter(),\n      new SolflareWalletAdapter({ network }),\n      new TorusWalletAdapter(),\n      new LedgerWalletAdapter(),\n      new SolletWalletAdapter({ network }),\n      new SolletExtensionWalletAdapter({ network }),\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [network]\n  );\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletModalProvider>\n          <Container>\n            <Stack gap={3}>\n              <Row>\n                <WalletMultiButton />\n              </Row>\n              {/* <WalletDisconnectButton /> */}\n              <Row>\n                <Main />\n              </Row>\n            </Stack>\n          </Container>\n        </WalletModalProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,OAAO,KAAQ,OAAO,CACtC,OACEC,kBAAkB,CAClBC,cAAc,KACT,8BAA8B,CACrC,OAASC,oBAAoB,KAAQ,6BAA6B,CAClE,OAASC,yBAAyB,KAAQ,gCAAgC,CAC1E,OACEC,mBAAmB,CACnBC,sBAAsB,CACtBC,iBAAiB,KACZ,iCAAiC,CACxC,OACEC,mBAAmB,CACnBC,oBAAoB,CACpBC,kBAAkB,CAClBC,qBAAqB,CACrBC,4BAA4B,CAC5BC,mBAAmB,CACnBC,kBAAkB,KACb,gCAAgC,CACvC,OAASC,aAAa,KAAQ,iBAAiB,CAC/C,MAAOC,KAAI,KAAM,mBAAmB,CACpC,MAAOC,UAAS,KAAM,2BAA2B,CACjD,MAAOC,IAAG,KAAM,qBAAqB,CACrC,MAAOC,IAAG,KAAM,qBAAqB,CACrC,MAAOC,MAAK,KAAM,uBAAuB,CAEzC;AAAA,wFACAC,OAAO,CAAC,4CAA4C,CAAC,CAErD,MAAO,IAAMC,OAAM,CAAG,QAATA,OAAM,EAAS,CAC1B;AACA,GAAMC,QAAO,CAAGpB,oBAAoB,CAACqB,OAAO,CAE5C;AACA,GAAMC,SAAQ,CAAGzB,OAAO,CAAC,iBAAMe,cAAa,CAACQ,OAAO,CAAC,GAAE,CAACA,OAAO,CAAC,CAAC,CAEjE,GAAMG,QAAO,CAAG1B,OAAO,CACrB,iBAAM,CACJ,GAAIS,qBAAoB,EAAE,CAC1B,GAAIC,mBAAkB,EAAE,CACxB,GAAIC,sBAAqB,CAAC,CAAEY,OAAO,CAAPA,OAAQ,CAAC,CAAC,CACtC,GAAIT,mBAAkB,EAAE,CACxB,GAAIN,oBAAmB,EAAE,CACzB,GAAIK,oBAAmB,CAAC,CAAEU,OAAO,CAAPA,OAAQ,CAAC,CAAC,CACpC,GAAIX,6BAA4B,CAAC,CAAEW,OAAO,CAAPA,OAAQ,CAAC,CAAC,CAC9C,GACD;AACA,CAACA,OAAO,CAAC,CACV,CAED,mBACE,KAAC,kBAAkB,EAAC,QAAQ,CAAEE,QAAS,uBACrC,KAAC,cAAc,EAAC,OAAO,CAAEC,OAAQ,CAAC,WAAW,4BAC3C,KAAC,mBAAmB,wBAClB,KAAC,SAAS,wBACR,MAAC,KAAK,EAAC,GAAG,CAAE,CAAE,wBACZ,KAAC,GAAG,wBACF,KAAC,iBAAiB,IAAG,EACjB,cAEN,KAAC,GAAG,wBACF,KAAC,IAAI,IAAG,EACJ,GACA,EACE,EACQ,EACP,EACE,CAEzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}