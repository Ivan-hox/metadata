{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _slicedToArray = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FixableBeetArgsStruct = exports.isFixableBeetStruct = exports.FixableBeetStruct = void 0;\nvar beet_fixable_1 = require(\"./beet.fixable\");\nvar struct_1 = require(\"./struct\");\nvar types_1 = require(\"./types\");\nvar assert_1 = require(\"assert\");\nvar utils_1 = require(\"./utils\");\nvar ansicolors_1 = __importDefault(require(\"ansicolors\"));\nvar brightBlack = ansicolors_1.default.brightBlack;\n/**\n * Configures a class or any JavaScript object type for de/serialization aka\n * read/write. Not all fields of that class have to be of fixed size.\n * If none of the fields requires a {@link FixableBeet} use the {@link BeetStruct} instead.\n *\n * @template Class the type to produce when deserializing\n * @template Args contains all fields, is typically a subset of Class and is\n * used to construct an instance of it\n *\n * @category beet/struct\n */\nvar FixableBeetStruct = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of the {@link FixableBeetStruct}.\n   *\n   * @param fields fixed or fixable de/serializers for each field of the {@link Class}\n   * @param construct the function that creates an instance of {@link Class}\n   * from the args\n   * @param description identifies this struct for diagnostics/debugging\n   * purposes\n   */\n  function FixableBeetStruct(fields, construct) {\n    var description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FixableBeetStruct.description;\n    _classCallCheck(this, FixableBeetStruct);\n    this.fields = fields;\n    this.construct = construct;\n    this.description = description;\n    var minByteSize = 0;\n    if (utils_1.logDebug.enabled) {\n      var flds = fields.map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          val = _ref2[1];\n        if ((0, types_1.isFixedSizeBeet)(val)) {\n          minByteSize += val.byteSize;\n        }\n        return \"\".concat(key, \": \").concat(val.description, \" \").concat((0, utils_1.beetBytes)(val));\n      }).join('\\n  ');\n      var bytes = \"> \".concat(minByteSize, \" B\");\n      (0, utils_1.logDebug)(\"struct \".concat(description, \" {\\n  \").concat(flds, \"\\n} \").concat(brightBlack(bytes)));\n    }\n  }\n  /**\n   * Deserializes an instance of the Class from the provided buffer starting to\n   * read at the provided offset.\n   *\n   * @returns `[instance of Class, offset into buffer after deserialization completed]`\n   */\n  _createClass(FixableBeetStruct, [{\n    key: \"deserialize\",\n    value: function deserialize(buffer) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.toFixedFromData(buffer, offset).deserialize(buffer, offset);\n    }\n    /**\n     * Serializes the provided instance into a new {@link Buffer}\n     *\n     * **NOTE:** that the `instance` is traversed and each of its fields accessed\n     * twice, once to derive a _fixed size_ {@link BeetStruct} and then use it to\n     * serialize the `instance`.\n     * Therefore ensure that none of the properties that are part of the struct\n     * have side effects, i.e. via `Getter`s.\n     *\n     * @param instance of the struct to serialize\n     * @param byteSize allows to override the size fo the created Buffer and\n     * defaults to the size of the struct to serialize\n     */\n  }, {\n    key: \"serialize\",\n    value: function serialize(instance, byteSize) {\n      return this.toFixedFromValue(instance).serialize(instance, byteSize);\n    }\n  }, {\n    key: \"toFixedFromData\",\n    value: function toFixedFromData(buf, offset) {\n      var cursor = offset;\n      var fixedFields = new Array(this.fields.length);\n      for (var i = 0; i < this.fields.length; i++) {\n        var _this$fields$i = _slicedToArray(this.fields[i], 2),\n          key = _this$fields$i[0],\n          beet = _this$fields$i[1];\n        var fixedBeet = (0, beet_fixable_1.fixBeetFromData)(beet, buf, cursor);\n        fixedFields[i] = [key, fixedBeet];\n        cursor += fixedBeet.byteSize;\n      }\n      return this.description !== FixableBeetStruct.description ? new struct_1.BeetStruct(fixedFields, this.construct, this.description) : new struct_1.BeetStruct(fixedFields, this.construct);\n    }\n  }, {\n    key: \"toFixedFromValue\",\n    value: function toFixedFromValue(args) {\n      var argsKeys = Object.keys(args);\n      var fixedFields = new Array(this.fields.length);\n      for (var i = 0; i < this.fields.length; i++) {\n        var _this$fields$i2 = _slicedToArray(this.fields[i], 2),\n          key = _this$fields$i2[0],\n          beet = _this$fields$i2[1];\n        (0, assert_1.strict)(argsKeys.includes(key), \"Value with keys [ \".concat(argsKeys, \" ] should include struct key '\").concat(key, \"' but doesn't.\"));\n        var val = args[key];\n        var fixedBeet = (0, beet_fixable_1.fixBeetFromValue)(beet, val);\n        fixedFields[i] = [key, fixedBeet];\n      }\n      return this.description !== FixableBeetStruct.description ? new struct_1.BeetStruct(fixedFields, this.construct, this.description) : new struct_1.BeetStruct(fixedFields, this.construct);\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return FixableBeetStruct.TYPE;\n    }\n  }]);\n  return FixableBeetStruct;\n}();\nexports.FixableBeetStruct = FixableBeetStruct;\nFixableBeetStruct.description = 'FixableBeetStruct';\nFixableBeetStruct.TYPE = 'FixableBeetStruct';\nfunction isFixableBeetStruct(beet) {\n  return beet.type === FixableBeetStruct.TYPE;\n}\nexports.isFixableBeetStruct = isFixableBeetStruct;\n/**\n * Convenience wrapper around {@link FixableBeetStruct} which is used for plain JavasScript\n * objects, like are used for option args passed to functions.\n *\n * @category beet/struct\n */\nvar FixableBeetArgsStruct = /*#__PURE__*/function (_FixableBeetStruct) {\n  _inherits(FixableBeetArgsStruct, _FixableBeetStruct);\n  var _super = _createSuper(FixableBeetArgsStruct);\n  function FixableBeetArgsStruct(fields) {\n    var description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FixableBeetArgsStruct.description;\n    _classCallCheck(this, FixableBeetArgsStruct);\n    return _super.call(this, fields, function (args) {\n      return args;\n    }, description);\n  }\n  return _createClass(FixableBeetArgsStruct);\n}(FixableBeetStruct);\nexports.FixableBeetArgsStruct = FixableBeetArgsStruct;\nFixableBeetArgsStruct.description = 'FixableBeetArgsStruct';","map":{"version":3,"mappings":"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","names":["brightBlack","ansicolors_1","FixableBeetStruct","fields","construct","description","minByteSize","utils_1","enabled","flds","map","key","val","byteSize","join","bytes","buffer","offset","toFixedFromData","deserialize","instance","toFixedFromValue","serialize","buf","cursor","fixedFields","Array","length","i","beet","fixedBeet","struct_1","args","argsKeys","Object","keys","includes","TYPE","exports","isFixableBeetStruct","type","FixableBeetArgsStruct"],"sources":["../../../src/struct.fixable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}