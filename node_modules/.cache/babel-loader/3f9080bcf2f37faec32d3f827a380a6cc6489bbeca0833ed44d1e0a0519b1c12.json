{"ast":null,"code":"import _toConsumableArray from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _wrapNativeSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _defineProperty2 from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _get from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter, JRPCEngine, createAsyncMiddleware, mergeMiddleware, createScaffoldMiddleware } from '@toruslabs/openlogin-jrpc';\nimport { serializeError, ethErrors } from 'eth-rpc-errors';\nimport getCreateRandomId from 'json-rpc-random-id';\nimport { BigNumber } from 'bignumber.js';\nimport { fromSigned, bufferToInt, toUnsigned, stripHexPrefix, addHexPrefix, hashPersonalMessage, ecsign, intToBuffer } from 'ethereumjs-util';\nimport log from 'loglevel';\nimport { BroadcastChannel } from '@toruslabs/broadcast-channel';\nimport { get, post, patch, remove } from '@toruslabs/http-helpers';\nimport bowser from 'bowser';\nimport { cloneDeep, pickBy, omitBy } from 'lodash';\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n/**\n * Controller class that provides configuration, state management, and subscriptions\n */\nvar BaseController = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(BaseController, _SafeEventEmitter);\n  var _super = _createSuper(BaseController);\n  /**\n   * Default options used to configure this controller\n   */\n\n  /**\n   * Default state set on this controller\n   */\n\n  /**\n   * Determines if listeners are notified of state changes\n   */\n\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a BaseController instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  function BaseController(_ref) {\n    var _this;\n    _classCallCheck(this, BaseController);\n    var _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? {} : _ref$state;\n    _this = _super.call(this); // Use assign since generics can't be spread: https://git.io/vpRhY\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultConfig\", {});\n    _defineProperty(_assertThisInitialized(_this), \"defaultState\", {});\n    _defineProperty(_assertThisInitialized(_this), \"disabled\", false);\n    _defineProperty(_assertThisInitialized(_this), \"name\", \"BaseController\");\n    _defineProperty(_assertThisInitialized(_this), \"initialConfig\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"initialState\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"internalConfig\", _this.defaultConfig);\n    _defineProperty(_assertThisInitialized(_this), \"internalState\", _this.defaultState);\n    _this.initialState = state;\n    _this.initialConfig = config;\n    return _this;\n  }\n  /**\n   * Retrieves current controller configuration options\n   *\n   * @returns - Current configuration\n   */\n  _createClass(BaseController, [{\n    key: \"config\",\n    get: function get() {\n      return this.internalConfig;\n    }\n    /**\n     * Retrieves current controller state\n     *\n     * @returns - Current state\n     */\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.internalState;\n    }\n    /**\n     * Updates controller configuration\n     *\n     * @param config - New configuration options\n     * @param overwrite - Overwrite config instead of merging\n     * @param fullUpdate - Boolean that defines if the update is partial or not\n     */\n  }, {\n    key: \"configure\",\n    value: function configure(config) {\n      var overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var fullUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (fullUpdate) {\n        this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n        for (var key in this.internalConfig) {\n          if (typeof this.internalConfig[key] !== \"undefined\") {\n            this[key] = this.internalConfig[key];\n          }\n        }\n      } else {\n        for (var _key in config) {\n          /* istanbul ignore else */\n          if (typeof this.internalConfig[_key] !== \"undefined\") {\n            this.internalConfig[_key] = config[_key];\n            this[_key] = config[_key];\n          }\n        }\n      }\n    }\n    /**\n     * Updates controller state\n     *\n     * @param state - New state\n     * @param overwrite - Overwrite state instead of merging\n     */\n  }, {\n    key: \"update\",\n    value: function update(state) {\n      var overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.internalState = overwrite ? _objectSpread$3({}, state) : _objectSpread$3(_objectSpread$3({}, this.internalState), state);\n      this.emit(\"store\", this.internalState);\n    }\n    /**\n     * Enables the controller. This sets each config option as a member\n     * variable on this instance and triggers any defined setters. This\n     * also sets initial state and triggers any listeners.\n     *\n     * @returns - This controller instance\n     */\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.internalState = this.defaultState;\n      this.internalConfig = this.defaultConfig;\n      this.configure(this.initialConfig);\n      this.update(this.initialState);\n      return this;\n    }\n  }]);\n  return BaseController;\n}(SafeEventEmitter);\nvar sec = 1000;\nvar calculateSum = function calculateSum(accumulator, currentValue) {\n  return accumulator + currentValue;\n};\nvar blockTrackerEvents = [\"sync\", \"latest\"];\nvar BaseBlockTracker = /*#__PURE__*/function (_BaseController) {\n  _inherits(BaseBlockTracker, _BaseController);\n  var _super2 = _createSuper(BaseBlockTracker);\n  function BaseBlockTracker(_ref) {\n    var _this2;\n    _classCallCheck(this, BaseBlockTracker);\n    var _ref$config2 = _ref.config,\n      config = _ref$config2 === void 0 ? {} : _ref$config2,\n      _ref$state2 = _ref.state,\n      state = _ref$state2 === void 0 ? {} : _ref$state2;\n    _this2 = _super2.call(this, {\n      config: config,\n      state: state\n    }); // config\n\n    _defineProperty(_assertThisInitialized(_this2), \"name\", \"BaseBlockTracker\");\n    _defineProperty(_assertThisInitialized(_this2), \"_blockResetTimeout\", void 0);\n    _this2.defaultState = {\n      _currentBlock: {\n        idempotencyKey: \"\"\n      },\n      _isRunning: false\n    };\n    _this2.defaultConfig = {\n      blockResetDuration: 20 * sec\n    };\n    _this2.initialize(); // bind functions for internal use\n\n    _this2._onNewListener = _this2._onNewListener.bind(_assertThisInitialized(_this2));\n    _this2._onRemoveListener = _this2._onRemoveListener.bind(_assertThisInitialized(_this2));\n    _this2._resetCurrentBlock = _this2._resetCurrentBlock.bind(_assertThisInitialized(_this2)); // listen for handler changes\n\n    _this2._setupInternalEvents();\n    return _this2;\n  }\n  _createClass(BaseBlockTracker, [{\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this.state._isRunning;\n    }\n  }, {\n    key: \"getCurrentBlock\",\n    value: function getCurrentBlock() {\n      return this.state._currentBlock;\n    }\n  }, {\n    key: \"getLatestBlock\",\n    value: function () {\n      var _getLatestBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this3 = this;\n        var latestBlock;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.state._currentBlock) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\", this.state._currentBlock);\n              case 2:\n                _context.next = 4;\n                return new Promise(function (resolve) {\n                  return _this3.once(\"latest\", function (newState) {\n                    if (newState._currentBlock) {\n                      resolve(newState._currentBlock);\n                    }\n                  });\n                });\n              case 4:\n                latestBlock = _context.sent;\n                return _context.abrupt(\"return\", latestBlock);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getLatestBlock() {\n        return _getLatestBlock.apply(this, arguments);\n      }\n      return getLatestBlock;\n    }() // dont allow module consumer to remove our internal event listeners\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      if (eventName) {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this, eventName);\n      } else {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this);\n      } // re-add internal events\n\n      this._setupInternalEvents(); // trigger stop check just in case\n\n      this._onRemoveListener();\n      return this;\n    }\n    /**\n     * To be implemented in subclass.\n     */\n  }, {\n    key: \"_start\",\n    value: function _start() {// default behavior is noop\n    }\n    /**\n     * To be implemented in subclass.\n     */\n  }, {\n    key: \"_end\",\n    value: function _end() {// default behavior is noop\n    }\n  }, {\n    key: \"_newPotentialLatest\",\n    value: function _newPotentialLatest(newBlock) {\n      var currentBlock = this.state._currentBlock; // only update if blok number is higher\n\n      if (currentBlock && newBlock.idempotencyKey === currentBlock.idempotencyKey) {\n        return;\n      }\n      this._setCurrentBlock(newBlock);\n    }\n  }, {\n    key: \"_setupInternalEvents\",\n    value: function _setupInternalEvents() {\n      // first remove listeners for idempotency\n      this.removeListener(\"newListener\", this._onNewListener);\n      this.removeListener(\"removeListener\", this._onRemoveListener); // then add them\n\n      this.on(\"removeListener\", this._onRemoveListener);\n      this.on(\"newListener\", this._onNewListener);\n    }\n  }, {\n    key: \"_onNewListener\",\n    value: function _onNewListener() {\n      this._maybeStart();\n    }\n  }, {\n    key: \"_onRemoveListener\",\n    value: function _onRemoveListener() {\n      // `removeListener` is called *after* the listener is removed\n      if (this._getBlockTrackerEventCount() > 0) {\n        return;\n      }\n      this._maybeEnd();\n    }\n  }, {\n    key: \"_maybeStart\",\n    value: function _maybeStart() {\n      if (this.state._isRunning) {\n        return;\n      }\n      this.state._isRunning = true; // cancel setting latest block to stale\n\n      this._cancelBlockResetTimeout();\n      this._start();\n    }\n  }, {\n    key: \"_maybeEnd\",\n    value: function _maybeEnd() {\n      if (!this.state._isRunning) {\n        return;\n      }\n      this.state._isRunning = false;\n      this._setupBlockResetTimeout();\n      this._end();\n    }\n  }, {\n    key: \"_getBlockTrackerEventCount\",\n    value: function _getBlockTrackerEventCount() {\n      var _this4 = this;\n      return blockTrackerEvents.map(function (eventName) {\n        return _this4.listenerCount(eventName);\n      }).reduce(calculateSum);\n    }\n  }, {\n    key: \"_setCurrentBlock\",\n    value: function _setCurrentBlock(newBlock) {\n      var oldBlock = this.state._currentBlock;\n      this.update({\n        _currentBlock: newBlock\n      });\n      this.emit(\"latest\", newBlock);\n      this.emit(\"sync\", {\n        oldBlock: oldBlock,\n        newBlock: newBlock\n      });\n    }\n  }, {\n    key: \"_setupBlockResetTimeout\",\n    value: function _setupBlockResetTimeout() {\n      // clear any existing timeout\n      this._cancelBlockResetTimeout(); // clear latest block when stale\n\n      this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this.config.blockResetDuration); // nodejs - dont hold process open\n\n      if (this._blockResetTimeout.unref) {\n        this._blockResetTimeout.unref();\n      }\n    }\n  }, {\n    key: \"_cancelBlockResetTimeout\",\n    value: function _cancelBlockResetTimeout() {\n      if (this._blockResetTimeout) {\n        clearTimeout(this._blockResetTimeout);\n      }\n    }\n  }, {\n    key: \"_resetCurrentBlock\",\n    value: function _resetCurrentBlock() {\n      this.update({\n        _currentBlock: {\n          idempotencyKey: \"\"\n        }\n      });\n    }\n  }]);\n  return BaseBlockTracker;\n}(BaseController);\nvar filterNoop = function filterNoop() {\n  return true;\n};\nvar internalEvents = [\"newListener\", \"removeListener\"];\nvar externalEventFilter = function externalEventFilter(name) {\n  return !internalEvents.includes(name);\n};\nfunction getRawListeners(eventEmitter, name) {\n  // prefer native\n  return eventEmitter.rawListeners(name);\n}\nfunction createEventEmitterProxy(initialTarget, opts) {\n  // parse options\n  var finalOpts = opts || {};\n  var eventFilter = finalOpts.eventFilter || filterNoop;\n  if (typeof eventFilter === \"string\" && eventFilter === \"skipInternal\") eventFilter = externalEventFilter;\n  if (typeof eventFilter !== \"function\") throw new Error(\"createEventEmitterProxy - Invalid eventFilter\");\n  var target = initialTarget;\n  var setTarget = function setTarget(newTarget) {\n    var oldTarget = target;\n    target = newTarget;\n    oldTarget.eventNames().filter(eventFilter).forEach(function (name) {\n      getRawListeners(oldTarget, name).forEach(function (handler) {\n        return newTarget.on(name, handler);\n      });\n    }); // remove old listeners\n\n    oldTarget.removeAllListeners();\n  };\n  var proxy = new Proxy({}, {\n    get: function get(_, name) {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: function set(_, name, value) {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\nfunction createSwappableProxy(initialTarget) {\n  var target = initialTarget;\n  var setTarget = function setTarget(newTarget) {\n    target = newTarget;\n  };\n  var proxy = new Proxy({}, {\n    get: function get(_, name) {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: function set(_, name, value) {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\nvar POLLING_INTERVAL = 600000;\nvar BaseCurrencyController = /*#__PURE__*/function (_BaseController2) {\n  _inherits(BaseCurrencyController, _BaseController2);\n  var _super3 = _createSuper(BaseCurrencyController);\n  function BaseCurrencyController(_ref) {\n    var _this5;\n    _classCallCheck(this, BaseCurrencyController);\n    var _ref$config3 = _ref.config,\n      config = _ref$config3 === void 0 ? {} : _ref$config3,\n      state = _ref.state;\n    _this5 = _super3.call(this, {\n      config: config,\n      state: state\n    });\n    _this5.defaultState = {\n      currentCurrency: \"usd\",\n      conversionRate: 0,\n      conversionDate: \"N/A\",\n      nativeCurrency: \"ETH\"\n    };\n    _this5.defaultConfig = {\n      pollInterval: POLLING_INTERVAL\n    };\n    _this5.initialize();\n    return _this5;\n  } //\n  // PUBLIC METHODS\n  //\n  _createClass(BaseCurrencyController, [{\n    key: \"getNativeCurrency\",\n    value: function getNativeCurrency() {\n      return this.state.nativeCurrency;\n    }\n  }, {\n    key: \"setNativeCurrency\",\n    value: function setNativeCurrency(nativeCurrency) {\n      this.update({\n        nativeCurrency: nativeCurrency,\n        ticker: nativeCurrency\n      });\n    }\n  }, {\n    key: \"getCurrentCurrency\",\n    value: function getCurrentCurrency() {\n      return this.state.currentCurrency;\n    }\n  }, {\n    key: \"setCurrentCurrency\",\n    value: function setCurrentCurrency(currentCurrency) {\n      this.update({\n        currentCurrency: currentCurrency\n      });\n    }\n    /**\n     * A getter for the conversionRate property\n     *\n     * @returns The conversion rate from ETH to the selected currency.\n     *\n     */\n  }, {\n    key: \"getConversionRate\",\n    value: function getConversionRate() {\n      return this.state.conversionRate;\n    }\n  }, {\n    key: \"setConversionRate\",\n    value: function setConversionRate(conversionRate) {\n      this.update({\n        conversionRate: conversionRate\n      });\n    }\n    /**\n     * A getter for the conversionDate property\n     *\n     * @returns The date at which the conversion rate was set. Expressed in milliseconds since midnight of\n     * January 1, 1970\n     *\n     */\n  }, {\n    key: \"getConversionDate\",\n    value: function getConversionDate() {\n      return this.state.conversionDate;\n    }\n  }, {\n    key: \"setConversionDate\",\n    value: function setConversionDate(conversionDate) {\n      this.update({\n        conversionDate: conversionDate\n      });\n    }\n  }]);\n  return BaseCurrencyController;\n}(BaseController);\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar createRandomId = getCreateRandomId();\nfunction providerFromEngine(engine) {\n  var provider = new SafeEventEmitter(); // handle both rpc send methods\n\n  provider.sendAsync = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req) {\n      var res, _res$error, _res$error2, err;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return engine.handle(req);\n            case 2:\n              res = _context2.sent;\n              if (!res.error) {\n                _context2.next = 6;\n                break;\n              }\n              err = serializeError(res.error, {\n                fallbackError: {\n                  message: ((_res$error = res.error) === null || _res$error === void 0 ? void 0 : _res$error.message) || res.error.toString(),\n                  code: ((_res$error2 = res.error) === null || _res$error2 === void 0 ? void 0 : _res$error2.code) || -32603\n                }\n              });\n              throw ethErrors.rpc.internal(err);\n            case 6:\n              return _context2.abrupt(\"return\", res.result);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  provider.send = function (req, callback) {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  }; // forward notifications\n\n  if (engine.on) {\n    engine.on(\"notification\", function (message) {\n      provider.emit(\"data\", null, message);\n    });\n  }\n  provider.request = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(args) {\n      var req, res;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              req = _objectSpread$2(_objectSpread$2({}, args), {}, {\n                id: createRandomId(),\n                jsonrpc: \"2.0\"\n              });\n              _context3.next = 3;\n              return provider.sendAsync(req);\n            case 3:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res);\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return provider;\n}\nfunction providerFromMiddleware(middleware) {\n  var engine = new JRPCEngine();\n  engine.push(middleware);\n  var provider = providerFromEngine(engine);\n  return provider;\n}\nfunction providerAsMiddleware(provider) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res, _next, end) {\n      var providerRes;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return provider.sendAsync(req);\n            case 3:\n              providerRes = _context4.sent;\n              res.result = providerRes;\n              return _context4.abrupt(\"return\", end());\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", end(_context4.t0.message));\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n    return function (_x3, _x4, _x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}\nvar FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nvar FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nvar FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nvar FEATURES_CONFIRM_WINDOW = {\n  height: 700,\n  width: 450\n};\nvar POPUP_LOADED = \"popup_loaded\";\nvar POPUP_RESULT = \"popup_result\";\nvar SETUP_COMPLETE = \"setup_complete\";\nvar ACTIVITY_ACTION_ALL = \"walletActivity.allTransactions\";\nvar ACTIVITY_ACTION_SEND = \"walletActivity.send\";\nvar ACTIVITY_ACTION_BURN = \"walletActivity.burn\";\nvar ACTIVITY_ACTION_RECEIVE = \"walletActivity.receive\";\nvar ACTIVITY_ACTION_TOPUP = \"walletActivity.topup\";\nvar ACTIVITY_PERIOD_ALL = \"walletActivity.all\";\nvar ACTIVITY_PERIOD_WEEK_ONE = \"walletActivity.lastOneWeek\";\nvar ACTIVITY_PERIOD_MONTH_ONE = \"walletActivity.lastOneMonth\";\nvar ACTIVITY_PERIOD_MONTH_SIX = \"walletActivity.lastSixMonts\";\nvar ACTIVITY_STATUS_SUCCESSFUL = \"walletActivity.successful\";\nvar ACTIVITY_STATUS_UNSUCCESSFUL = \"walletActivity.unsuccessful\";\nvar ACTIVITY_STATUS_PENDING = \"walletActivity.pending\";\nvar ACTIVITY_STATUS_CANCELLED = \"walletActivity.cancelled\";\nvar ACTIVITY_STATUS_CANCELLING = \"walletActivity.cancelling\";\nvar COMMUNICATION_NOTIFICATIONS = {\n  IFRAME_STATUS: \"iframe_status\",\n  // Tell embed to create the window\n  CREATE_WINDOW: \"create_window\",\n  // Tell embed to close the window\n  CLOSE_WINDOW: \"close_window\",\n  USER_LOGGED_IN: \"user_logged_in\",\n  USER_LOGGED_OUT: \"user_logged_out\"\n};\nvar COMMUNICATION_JRPC_METHODS = {\n  LOGOUT: \"logout\",\n  WALLET_INSTANCE_ID: \"wallet_instance_id\",\n  USER_INFO: \"user_info\",\n  SET_PROVIDER: \"set_provider\",\n  TOPUP: \"topup\",\n  IFRAME_STATUS: \"iframe_status\",\n  // embed has opened the window as requested\n  OPENED_WINDOW: \"opened_window\",\n  // user has closed the window from embed's side\n  CLOSED_WINDOW: \"closed_window\",\n  GET_PROVIDER_STATE: \"get_provider_state\",\n  LOGIN_WITH_PRIVATE_KEY: \"login_with_private_key\"\n};\nvar PROVIDER_JRPC_METHODS = {\n  GET_PROVIDER_STATE: \"wallet_get_provider_state\"\n};\nvar PROVIDER_NOTIFICATIONS = {\n  ACCOUNTS_CHANGED: \"wallet_accounts_changed\",\n  CHAIN_CHANGED: \"wallet_chain_changed\",\n  UNLOCK_STATE_CHANGED: \"wallet_unlock_state_changed\"\n};\nvar BROADCAST_CHANNELS = {\n  REDIRECT_CHANNEL: \"redirect_channel\",\n  PROVIDER_CHANGE_CHANNEL: \"torus_provider_change_channel\",\n  TRANSACTION_CHANNEL: \"torus_channel\",\n  MESSAGE_CHANNEL: \"torus_message_channel\",\n  WALLET_LOGOUT_CHANNEL: \"wallet_logout_channel\",\n  WALLET_SELECTED_ADDRESS_CHANNEL: \"wallet_selected_address_channel\",\n  WALLET_NETWORK_CHANGE_CHANNEL: \"wallet_network_change_channel\",\n  WALLET_ACCOUNT_IMPORT_CHANNEL: \"wallet_account_import_channel\",\n  THEME_CHANGE: \"theme_change_channel\"\n};\nvar BROADCAST_CHANNELS_MSGS = {\n  LOGOUT: \"logout\",\n  ACCOUNT_IMPORTED: \"account_imported\",\n  SELECTED_ADDRESS_CHANGE: \"selected_address_change\",\n  NETWORK_CHANGE: \"network_change\",\n  SET_THEME: \"set_theme\"\n};\nfunction createChangeProviderMiddlewareMiddleware(_ref) {\n  var changeProvider = _ref.changeProvider;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request, response, next) {\n      var method;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              method = request.method;\n              if (!(method !== COMMUNICATION_JRPC_METHODS.SET_PROVIDER)) {\n                _context5.next = 3;\n                break;\n              }\n              return _context5.abrupt(\"return\", next());\n            case 3:\n              if (changeProvider) {\n                _context5.next = 5;\n                break;\n              }\n              throw new Error(\"CommunicationMiddleware - opts.changeProvider not provided\");\n            case 5:\n              _context5.next = 7;\n              return changeProvider(request);\n            case 7:\n              response.result = _context5.sent;\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return function (_x7, _x8, _x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}\nfunction createTopupMiddleware(_ref2) {\n  var topup = _ref2.topup;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request, response, next) {\n      var method;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              method = request.method;\n              if (!(method !== COMMUNICATION_JRPC_METHODS.TOPUP)) {\n                _context6.next = 3;\n                break;\n              }\n              return _context6.abrupt(\"return\", next());\n            case 3:\n              if (topup) {\n                _context6.next = 5;\n                break;\n              }\n              throw new Error(\"CommunicationMiddleware - opts.topup not provided\");\n            case 5:\n              _context6.next = 7;\n              return topup(request);\n            case 7:\n              response.result = _context6.sent;\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return function (_x10, _x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(request, response, next) {\n      var method, result;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              method = request.method;\n              if (!(method !== targetMethod)) {\n                _context7.next = 3;\n                break;\n              }\n              return _context7.abrupt(\"return\", next());\n            case 3:\n              if (handler) {\n                _context7.next = 5;\n                break;\n              }\n              throw new Error(\"CommunicationMiddleware - \".concat(targetMethod, \" not provided\"));\n            case 5:\n              _context7.next = 7;\n              return handler(request);\n            case 7:\n              result = _context7.sent;\n              if (result) {\n                _context7.next = 10;\n                break;\n              }\n              return _context7.abrupt(\"return\", next());\n            case 10:\n              response.result = result;\n              return _context7.abrupt(\"return\", undefined);\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return function (_x13, _x14, _x15) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n}\nfunction createCommunicationMiddleware(providerHandlers) {\n  var _createScaffoldMiddle;\n  var getUserInfo = providerHandlers.getUserInfo,\n    getWalletInstanceId = providerHandlers.getWalletInstanceId,\n    topup = providerHandlers.topup,\n    logout = providerHandlers.logout,\n    changeProvider = providerHandlers.changeProvider,\n    setIFrameStatus = providerHandlers.setIFrameStatus,\n    handleWindowRpc = providerHandlers.handleWindowRpc,\n    getProviderState = providerHandlers.getProviderState,\n    loginWithPrivateKey = providerHandlers.loginWithPrivateKey;\n  return mergeMiddleware([createChangeProviderMiddlewareMiddleware({\n    changeProvider: changeProvider\n  }), createTopupMiddleware({\n    topup: topup\n  }), createScaffoldMiddleware((_createScaffoldMiddle = {}, _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.LOGOUT, logout), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID, getWalletInstanceId), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.USER_INFO, getUserInfo), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.IFRAME_STATUS, setIFrameStatus), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.OPENED_WINDOW, handleWindowRpc), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW, handleWindowRpc), _defineProperty2(_createScaffoldMiddle, COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE, getProviderState), _createScaffoldMiddle)), createGenericJRPCMiddleware(COMMUNICATION_JRPC_METHODS.LOGIN_WITH_PRIVATE_KEY, loginWithPrivateKey)]);\n}\nvar BaseEmbedController = /*#__PURE__*/function (_BaseController3) {\n  _inherits(BaseEmbedController, _BaseController3);\n  var _super4 = _createSuper(BaseEmbedController);\n  function BaseEmbedController(_ref) {\n    var _this6;\n    _classCallCheck(this, BaseEmbedController);\n    var _ref$config4 = _ref.config,\n      config = _ref$config4 === void 0 ? {} : _ref$config4,\n      state = _ref.state;\n    _this6 = _super4.call(this, {\n      config: config,\n      state: state\n    });\n    _defineProperty(_assertThisInitialized(_this6), \"_communicationProviderProxy\", void 0);\n    _this6.defaultState = {\n      buttonPosition: \"bottom-right\",\n      isIFrameFullScreen: true,\n      apiKey: \"torus-default\",\n      oauthModalVisibility: false,\n      loginInProgress: false,\n      dappMetadata: {\n        name: \"\",\n        icon: \"\"\n      }\n    };\n    _this6.initialize();\n    return _this6;\n  }\n  /**\n   * Called by orchestrator once while initializing the class\n   * @param handlers - JRPC handlers for provider\n   * @returns - provider - Returns the providerProxy\n   */\n  _createClass(BaseEmbedController, [{\n    key: \"initializeProvider\",\n    value: function initializeProvider(handlers) {\n      var engine = new JRPCEngine();\n      var communicationMiddleware = createCommunicationMiddleware(handlers);\n      engine.push(communicationMiddleware);\n      var communicationProvider = providerFromEngine(engine);\n      this.setCommunicationProvider(communicationProvider);\n    }\n  }, {\n    key: \"setCommunicationProvider\",\n    value: function setCommunicationProvider(communicationProvider) {\n      if (this._communicationProviderProxy) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this._communicationProviderProxy.setTarget(communicationProvider);\n      } else {\n        this._communicationProviderProxy = createSwappableProxy(communicationProvider);\n      }\n    }\n  }]);\n  return BaseEmbedController;\n}(BaseController);\nvar CommunicationWindowManager = /*#__PURE__*/function (_SafeEventEmitter2) {\n  _inherits(CommunicationWindowManager, _SafeEventEmitter2);\n  var _super5 = _createSuper(CommunicationWindowManager);\n  function CommunicationWindowManager() {\n    var _this7;\n    _classCallCheck(this, CommunicationWindowManager);\n    _this7 = _super5.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this7), \"handleWindowRpc\", function (request, response, next, end) {\n      var method = request.method,\n        params = request.params;\n      if (method === COMMUNICATION_JRPC_METHODS.OPENED_WINDOW) {\n        var windowId = params.windowId; // I've been informed that a window has been opened\n\n        _this7.emit(\"\".concat(windowId, \":opened\"));\n        response.result = true;\n        end();\n      } else if (method === COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW) {\n        var _windowId = params.windowId; // I've been informed that a window has been closed\n\n        _this7.emit(\"\".concat(_windowId, \":closed\"));\n        response.result = true;\n        end();\n      } else {\n        next();\n      }\n    });\n    return _this7;\n  }\n  return _createClass(CommunicationWindowManager);\n}(SafeEventEmitter);\nvar LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\nvar PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nvar getTxStatusText = function getTxStatusText(txStatus) {\n  switch (txStatus) {\n    case \"rejected\":\n    case \"unapproved\":\n    case \"failed\":\n      return ACTIVITY_STATUS_UNSUCCESSFUL;\n    case \"confirmed\":\n      return ACTIVITY_STATUS_SUCCESSFUL;\n    case \"submitted\":\n      return ACTIVITY_STATUS_PENDING;\n    case \"cancelled\":\n      return ACTIVITY_STATUS_CANCELLED;\n    default:\n      return \"\";\n  }\n};\n\n/**\n * General utility functions\n */\n\nfunction intToHex(i) {\n  var hex = i.toString(16);\n  return \"0x\".concat(hex);\n}\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\n\nvar randomId = function randomId() {\n  return Math.random().toString(36).slice(2);\n};\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\n\nfunction padWithZeroes(hexString, targetLength) {\n  if (hexString !== \"\" && !/^[0-9a-f]+$/i.test(hexString)) {\n    throw new Error(\"Expected an unprefixed hex string. Received: \".concat(hexString));\n  }\n  if (targetLength < 0) {\n    throw new Error(\"Expected a non-negative integer target length. Received: \".concat(targetLength));\n  }\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\n\nfunction concatSig(v, r, s) {\n  var rSig = fromSigned(r);\n  var sSig = fromSigned(s);\n  var vSig = bufferToInt(v);\n  var rStr = padWithZeroes(toUnsigned(rSig).toString(\"hex\"), 64);\n  var sStr = padWithZeroes(toUnsigned(sSig).toString(\"hex\"), 64);\n  var vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\nfunction timeout$1(duration) {\n  return new Promise(function (resolve) {\n    var timeoutRef = window.setTimeout(function () {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\nvar getHeaders = function getHeaders(jwt) {\n  return {\n    headers: {\n      Authorization: \"Bearer \".concat(jwt),\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    }\n  };\n};\n/**\n * Text/number formatting utilities\n */\n\nvar formatSmallNumbers = function formatSmallNumbers(number) {\n  var currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"usd\";\n  var noTilde = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  var value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  var tilde = value > 0 ? \"~ \" : \"\";\n  return \"\".concat(currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde).concat(Number(value), \" \").concat(currency.toUpperCase());\n};\nvar addressSlicer = function addressSlicer(address) {\n  var sliceLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  if (address.length < 11) {\n    return address;\n  }\n  if (typeof address !== \"string\") return \"\";\n  return \"\".concat(address.slice(0, sliceLength), \"...\").concat(address.slice(-sliceLength));\n};\nvar significantDigits = function significantDigits(number) {\n  var perc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var length_ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n  var depth;\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n  var shift = new BigNumber(10).pow(new BigNumber(depth));\n  var roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\nvar formatDate = function formatDate(inputDate) {\n  var monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var date = new Date(inputDate);\n  var day = date.getDate();\n  var month = monthList[date.getMonth()];\n  var year = date.getFullYear();\n  return \"\".concat(day, \" \").concat(month, \" \").concat(year);\n};\nvar formatTime = function formatTime(time) {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n/**\n * Network utilities\n */\n\nvar transactionMatchesNetwork = function transactionMatchesNetwork(transaction, chainId) {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n  return false;\n};\n/**\n * Signing utils\n */\n\nvar hashMessage = function hashMessage(message) {\n  var bufferedMessage = Buffer.from(message, \"utf8\");\n  var el = hashPersonalMessage(bufferedMessage);\n  return el;\n};\nvar signMessage = function signMessage(privateKey, data) {\n  var privKey = Buffer.from(privateKey, \"hex\");\n  var message = stripHexPrefix(data);\n  var msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  var rawMsgSig = concatSig(intToBuffer(msgSig.v), msgSig.r, msgSig.s);\n  return rawMsgSig;\n};\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  var w = _ref.width,\n    h = _ref.height;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  var systemZoom = 1; // No reliable estimate\n\n  var left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  var top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  var features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nvar broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\n\nfunction getCustomDeviceInfo() {\n  var _navigator;\n  if ((_navigator = navigator) !== null && _navigator !== void 0 && _navigator.brave) {\n    return {\n      browser: \"Brave\"\n    };\n  }\n}\nvar UserError = /*#__PURE__*/function (_Error) {\n  _inherits(UserError, _Error);\n  var _super6 = _createSuper(UserError);\n  function UserError() {\n    _classCallCheck(this, UserError);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(UserError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar handleRedirectParameters = function handleRedirectParameters(hash, queryParameters) {\n  var hashParameters = {};\n  var hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash.slice(1)));\n  hashUrl.searchParams.forEach(function (value, key) {\n    hashParameters[key] = value;\n  });\n  var instanceParameters = {};\n  var error = \"\";\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n  return {\n    error: error,\n    instanceParameters: instanceParameters,\n    hashParameters: hashParameters\n  };\n};\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\nvar BaseKeyringController = /*#__PURE__*/function (_BaseController4) {\n  _inherits(BaseKeyringController, _BaseController4);\n  var _super7 = _createSuper(BaseKeyringController);\n  function BaseKeyringController(_ref) {\n    var _this8;\n    _classCallCheck(this, BaseKeyringController);\n    var _state$wallets;\n    var _ref$config5 = _ref.config,\n      config = _ref$config5 === void 0 ? {} : _ref$config5,\n      state = _ref.state;\n    _this8 = _super7.call(this, {\n      config: config,\n      state: state\n    });\n    _this8.defaultState = {\n      wallets: (_state$wallets = state.wallets) !== null && _state$wallets !== void 0 ? _state$wallets : []\n    };\n    _this8.initialize();\n    return _this8;\n  } // for signing auth message\n  _createClass(BaseKeyringController, [{\n    key: \"signAuthMessage\",\n    value: function signAuthMessage(address, message) {\n      var keyring = this.state.wallets.find(function (x) {\n        return x.address === address;\n      });\n      if (!keyring) {\n        throw new Error(\"key does not exist\");\n      }\n      var hashedMessage = hashMessage(message).toString(\"hex\");\n      var rawMessageSig = signMessage(keyring.privateKey, hashedMessage);\n      return rawMessageSig;\n    }\n  }]);\n  return BaseKeyringController;\n}(BaseController);\nvar RETRIABLE_ERRORS = [\n// ignore server overload errors\n\"Gateway timeout\", \"ETIMEDOUT\",\n// ignore server sent html error pages\n// or truncated json responses\n\"failed to parse response body\",\n// ignore errors where http req failed to establish\n\"Failed to fetch\"];\nfunction checkForHttpErrors(fetchRes) {\n  // check for errors\n  switch (fetchRes.status) {\n    case 405:\n      throw ethErrors.rpc.methodNotFound();\n    case 418:\n      throw ethErrors.rpc.internal({\n        message: \"Request is being rate limited.\"\n      });\n    case 503:\n    case 504:\n      throw ethErrors.rpc.internal({\n        message: \"Gateway timeout. The request took too long to process.\" + \"This can happen when querying over too wide a block range.\"\n      });\n  }\n}\nfunction timeout(duration) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, duration);\n  });\n}\nfunction parseResponse(fetchRes, body) {\n  // check for error code\n  if (fetchRes.status !== 200) {\n    throw ethErrors.rpc.internal({\n      message: \"Non-200 status code: '\".concat(fetchRes.status, \"'\"),\n      data: body\n    });\n  } // check for rpc error\n\n  if (body.error) {\n    throw ethErrors.rpc.internal({\n      data: body.error\n    });\n  } // return successful result\n\n  return body.result;\n}\nfunction createFetchConfigFromReq(_ref) {\n  var req = _ref.req,\n    rpcTarget = _ref.rpcTarget,\n    originHttpHeaderKey = _ref.originHttpHeaderKey;\n  var parsedUrl = new URL(rpcTarget); // prepare payload\n  // copy only canonical json rpc properties\n\n  var payload = {\n    id: req.id,\n    jsonrpc: req.jsonrpc,\n    method: req.method,\n    params: req.params\n  }; // extract 'origin' parameter from request\n\n  var originDomain = req.origin; // serialize request body\n\n  var serializedPayload = JSON.stringify(payload); // configure fetch params\n\n  var fetchParams = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: serializedPayload\n  }; // optional: add request origin as header\n\n  if (originHttpHeaderKey && originDomain) {\n    fetchParams.headers[originHttpHeaderKey] = originDomain;\n  }\n  return {\n    fetchUrl: parsedUrl.href,\n    fetchParams: fetchParams\n  };\n}\nfunction createFetchMiddleware(_ref2) {\n  var rpcTarget = _ref2.rpcTarget,\n    originHttpHeaderKey = _ref2.originHttpHeaderKey;\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res, _next) {\n      var _createFetchConfigFro, fetchUrl, fetchParams, maxAttempts, retryInterval, attempt, fetchRes, fetchBody, result;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _createFetchConfigFro = createFetchConfigFromReq({\n                req: req,\n                rpcTarget: rpcTarget,\n                originHttpHeaderKey: originHttpHeaderKey\n              }), fetchUrl = _createFetchConfigFro.fetchUrl, fetchParams = _createFetchConfigFro.fetchParams; // attempt request multiple times\n              maxAttempts = 5;\n              retryInterval = 1000;\n              attempt = 0;\n            case 4:\n              if (!(attempt < maxAttempts)) {\n                _context8.next = 26;\n                break;\n              }\n              _context8.prev = 5;\n              _context8.next = 8;\n              return fetch(fetchUrl, fetchParams);\n            case 8:\n              fetchRes = _context8.sent;\n              // check for http errrors\n\n              checkForHttpErrors(fetchRes); // parse response body\n              _context8.next = 12;\n              return fetchRes.json();\n            case 12:\n              fetchBody = _context8.sent;\n              result = parseResponse(fetchRes, fetchBody); // set result and exit retry loop\n              res.result = result;\n              return _context8.abrupt(\"return\");\n            case 18:\n              _context8.prev = 18;\n              _context8.t0 = _context8[\"catch\"](5);\n              (function () {\n                var errMsg = _context8.t0.toString();\n                var isRetriable = RETRIABLE_ERRORS.some(function (phrase) {\n                  return errMsg.includes(phrase);\n                }); // re-throw error if not retriable\n\n                if (!isRetriable) {\n                  throw _context8.t0;\n                }\n              })();\n            case 21:\n              _context8.next = 23;\n              return timeout(retryInterval);\n            case 23:\n              attempt++;\n              _context8.next = 4;\n              break;\n            case 26:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[5, 18]]);\n    }));\n    return function (_x16, _x17, _x18) {\n      return _ref9.apply(this, arguments);\n    };\n  }());\n}\nfunction createLoggerMiddleware(options) {\n  return function loggerMiddleware(request, response, next) {\n    next(function (callback) {\n      if (response.error) {\n        log.warn(\"Error in RPC response:\\n\", response);\n      }\n      if (request.isTorusInternal) return;\n      log.info(\"RPC (\".concat(options.origin, \"):\"), request, \"->\", response);\n      callback();\n    });\n  };\n}\nfunction createOriginMiddleware(options) {\n  return function originMiddleware(request, _, next) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    request.origin = options.origin;\n    next();\n  };\n}\nvar BroadcastChannelHandler = /*#__PURE__*/function () {\n  function BroadcastChannelHandler(channelPrefix) {\n    _classCallCheck(this, BroadcastChannelHandler);\n    _defineProperty(this, \"bc\", void 0);\n    _defineProperty(this, \"channel\", void 0);\n    var queryParameters = new URLSearchParams(window.location.search);\n    var instanceId = queryParameters.get(\"instanceId\");\n    this.channel = \"\".concat(channelPrefix, \"_\").concat(instanceId);\n    this.bc = new BroadcastChannel(this.channel, broadcastChannelOptions);\n  }\n  _createClass(BroadcastChannelHandler, [{\n    key: \"getMessageFromChannel\",\n    value: function getMessageFromChannel() {\n      var _this9 = this;\n      return new Promise(function (resolve, reject) {\n        _this9.bc.addEventListener(\"message\", /*#__PURE__*/function () {\n          var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(ev) {\n            return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _this9.bc.close();\n                    if (ev.error) {\n                      reject(ev.error);\n                    } else {\n                      resolve(ev.data);\n                    }\n                  case 2:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9);\n          }));\n          return function (_x19) {\n            return _ref10.apply(this, arguments);\n          };\n        }());\n        _this9.bc.postMessage({\n          data: {\n            type: POPUP_LOADED\n          }\n        });\n      });\n    }\n  }]);\n  return BroadcastChannelHandler;\n}();\nvar StreamWindow = /*#__PURE__*/function (_BaseController5) {\n  _inherits(StreamWindow, _BaseController5);\n  var _super8 = _createSuper(StreamWindow);\n  // if window has been closed by users\n  function StreamWindow(_ref) {\n    var _this10;\n    _classCallCheck(this, StreamWindow);\n    var config = _ref.config,\n      _ref$state3 = _ref.state,\n      state = _ref$state3 === void 0 ? {} : _ref$state3;\n    _this10 = _super8.call(this, {\n      config: config,\n      state: state\n    });\n    _defineProperty(_assertThisInitialized(_this10), \"closed\", false);\n    _this10.initialize();\n    return _this10;\n  }\n  _createClass(StreamWindow, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var _this11 = this;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                return _context13.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var _this11$config = _this11.config,\n                    communicationEngine = _this11$config.communicationEngine,\n                    communicationWindowManager = _this11$config.communicationWindowManager;\n                  var popupSuccess = false;\n                  communicationWindowManager.once(\"\".concat(_this11.state.windowId, \":closed\"), function () {\n                    _this11.closed = true;\n                  }); // Window is not open yet\n\n                  if (!_this11.state.windowId) {\n                    _this11.update({\n                      windowId: randomId()\n                    });\n                    communicationWindowManager.once(\"\".concat(_this11.state.windowId, \":opened\"), function () {\n                      resolve(_this11);\n                    }); // Tell the other party to create a window by prompting the user to click on something\n\n                    communicationEngine.emit(\"notification\", {\n                      method: COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW,\n                      params: {\n                        windowId: _this11.state.windowId,\n                        url: _this11.state.url.href\n                      }\n                    });\n                  } else {\n                    // Send this window with `windowId` the url to open via bc\n                    var bc = new BroadcastChannel(_this11.state.windowId, broadcastChannelOptions);\n                    bc.addEventListener(\"message\", /*#__PURE__*/function () {\n                      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(ev) {\n                        var error, message;\n                        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                          while (1) {\n                            switch (_context10.prev = _context10.next) {\n                              case 0:\n                                _context10.prev = 0;\n                                log.info(ev, \"receiving data on channel: \".concat(bc.name));\n                                error = ev.error;\n                                if (!error) {\n                                  _context10.next = 6;\n                                  break;\n                                }\n                                // Popup says some error. so, we say it's not really opened\n                                reject(new Error(error));\n                                return _context10.abrupt(\"return\");\n                              case 6:\n                                message = ev.data.message;\n                                if (!(message === POPUP_LOADED)) {\n                                  _context10.next = 13;\n                                  break;\n                                }\n                                popupSuccess = true;\n                                _context10.next = 11;\n                                return bc.postMessage({\n                                  data: {\n                                    url: _this11.state.url.href,\n                                    message: \"\" // No need of a msg\n                                  }\n                                });\n                              case 11:\n                                resolve(_this11);\n                                bc.close();\n                              case 13:\n                                _context10.next = 20;\n                                break;\n                              case 15:\n                                _context10.prev = 15;\n                                _context10.t0 = _context10[\"catch\"](0);\n                                reject(_context10.t0);\n                                bc.close(); // Something went wrong. so, we close that window\n\n                                _this11.close();\n                              case 20:\n                              case \"end\":\n                                return _context10.stop();\n                            }\n                          }\n                        }, _callee10, null, [[0, 15]]);\n                      }));\n                      return function (_x20) {\n                        return _ref11.apply(this, arguments);\n                      };\n                    }()); // We don't know if the other end is ready to receive this msg. So, we keep writing until it receives and sends back something\n                    // we need backoff strategy\n                    // we need to wait for first attempt to succeed/fail until the second attempt\n                    // If we get 429, we need to wait for a while and then try again\n\n                    var postMsg = /*#__PURE__*/function () {\n                      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n                        var localResponse;\n                        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                          while (1) {\n                            switch (_context11.prev = _context11.next) {\n                              case 0:\n                                _context11.next = 2;\n                                return bc.postMessage({\n                                  data: {\n                                    message: SETUP_COMPLETE\n                                  }\n                                });\n                              case 2:\n                                localResponse = _context11.sent;\n                                return _context11.abrupt(\"return\", localResponse);\n                              case 4:\n                              case \"end\":\n                                return _context11.stop();\n                            }\n                          }\n                        }, _callee11);\n                      }));\n                      return function postMsg() {\n                        return _ref12.apply(this, arguments);\n                      };\n                    }();\n                    var currentDelay = bc.type === \"server\" ? 1000 : 200;\n                    var recursiveFn = /*#__PURE__*/function () {\n                      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n                        var localResponse, serverResponse;\n                        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n                          while (1) {\n                            switch (_context12.prev = _context12.next) {\n                              case 0:\n                                if (!(!popupSuccess && !_this11.closed)) {\n                                  _context12.next = 9;\n                                  break;\n                                }\n                                _context12.next = 3;\n                                return postMsg();\n                              case 3:\n                                localResponse = _context12.sent;\n                                if (bc.type === \"server\") {\n                                  serverResponse = localResponse;\n                                  if (serverResponse.status >= 400) {\n                                    // We need to wait for a while and then try again\n                                    currentDelay = Math.round(currentDelay * 1.5);\n                                  }\n                                }\n                                _context12.next = 7;\n                                return sleep(currentDelay);\n                              case 7:\n                                _context12.next = 9;\n                                return recursiveFn();\n                              case 9:\n                              case \"end\":\n                                return _context12.stop();\n                            }\n                          }\n                        }, _callee12);\n                      }));\n                      return function recursiveFn() {\n                        return _ref13.apply(this, arguments);\n                      };\n                    }();\n                    recursiveFn();\n                  }\n                }));\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n      function open() {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      var communicationEngine = this.config.communicationEngine;\n      communicationEngine.emit(\"notification\", {\n        method: COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW,\n        params: {\n          windowId: this.state.windowId\n        }\n      });\n    }\n  }]);\n  return StreamWindow;\n}(BaseController);\n/*\nScenarios:\n1. Open a normal popup window and no communication with it - Use PopupHandler\n2. Open a popup window and communicate with it - Use PopupWithBcHandler (can initiate communication by waiting for window to open or not)\n\n3. If window is already opened, pass in windowId to the popup handler.\n   This will establish communication with the popup window and sends it a new url to redirect to\n\n\nIf you're trying to open a window and it gets blocked (happens if you're in iframe or delay b/w click and opening window),\nStreamWindow is invoked and it writes in a channel to display a message to the user\n\nOnce user clicks on that modal/dialog, we pre-open the window and pass in the windowId (goes to 3)\n*/\n/**\n * Handles popup window management.\n * For broadcast channel communication, use url with `instanceId` coded into state parameter.\n * This state parameter will be passed across redirects according to OAuth spec.\n */\nvar PopupHandler = /*#__PURE__*/function (_BaseController6) {\n  _inherits(PopupHandler, _BaseController6);\n  var _super9 = _createSuper(PopupHandler);\n  function PopupHandler(_ref) {\n    var _this12;\n    _classCallCheck(this, PopupHandler);\n    var config = _ref.config,\n      state = _ref.state;\n    _this12 = _super9.call(this, {\n      config: config,\n      state: state\n    }); // this.id = randomId()\n    // Add in dapp storage key to all popups as a hash parameter\n\n    _this12.defaultConfig = {\n      dappStorageKey: \"\",\n      features: getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW),\n      target: \"_blank\",\n      communicationEngine: null,\n      communicationWindowManager: null\n    };\n    _this12.defaultState = {\n      windowTimer: null,\n      window: null,\n      iClosedWindow: false,\n      windowId: \"\",\n      url: state.url\n    };\n    _this12.initialize();\n    _this12._setupTimer();\n    return _this12;\n  }\n  _createClass(PopupHandler, [{\n    key: \"open\",\n    value: function () {\n      var _open2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var _this$config, target, features, dappStorageKey, communicationEngine, communicationWindowManager, _this$state, windowId, url, urlHashParams, _localWindow, localWindow;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                // if window is already open\n                _this$config = this.config, target = _this$config.target, features = _this$config.features, dappStorageKey = _this$config.dappStorageKey, communicationEngine = _this$config.communicationEngine, communicationWindowManager = _this$config.communicationWindowManager;\n                _this$state = this.state, windowId = _this$state.windowId, url = _this$state.url;\n                if (dappStorageKey) {\n                  urlHashParams = new URLSearchParams(url.hash.slice(1));\n                  urlHashParams.append(\"dappStorageKey\", dappStorageKey);\n                  url.hash = urlHashParams.toString();\n                  this.update({\n                    url: url\n                  });\n                } // No window has been pre-opened\n                if (windowId) {\n                  _context14.next = 8;\n                  break;\n                }\n                // try to open a window first\n                _localWindow = window.open(url.href, target, features);\n                if (!_localWindow) {\n                  // if it's blocked, open StreamWindow\n                  _localWindow = new StreamWindow({\n                    config: {\n                      communicationEngine: communicationEngine,\n                      communicationWindowManager: communicationWindowManager\n                    },\n                    state: {\n                      url: url\n                    }\n                  });\n                  _localWindow.open();\n                }\n                this.update({\n                  window: _localWindow\n                });\n                return _context14.abrupt(\"return\");\n              case 8:\n                // A window has been pre-opened with a query parameter `windowId`\n                localWindow = new StreamWindow({\n                  config: {\n                    communicationEngine: communicationEngine,\n                    communicationWindowManager: communicationWindowManager\n                  },\n                  state: {\n                    url: url,\n                    windowId: windowId\n                  }\n                });\n                this.update({\n                  window: localWindow\n                });\n                _context14.next = 12;\n                return localWindow.open();\n              case 12:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n      function open() {\n        return _open2.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.update({\n        iClosedWindow: true\n      });\n      var window = this.state.window;\n      if (window) window.close();\n    }\n  }, {\n    key: \"_setupTimer\",\n    value: function _setupTimer() {\n      var _this13 = this;\n      var timer = window.setInterval(function () {\n        var _this13$state = _this13.state,\n          window = _this13$state.window,\n          windowTimer = _this13$state.windowTimer,\n          iClosedWindow = _this13$state.iClosedWindow;\n        if (window && window.closed) {\n          if (windowTimer) clearInterval(windowTimer);\n          if (!iClosedWindow) {\n            _this13.emit(\"close\");\n          }\n          _this13.update({\n            iClosedWindow: false,\n            window: null\n          });\n        }\n        if (window === null && windowTimer) clearInterval(windowTimer);\n      }, 500);\n      this.update({\n        windowTimer: timer\n      });\n    }\n  }]);\n  return PopupHandler;\n}(BaseController);\nvar PopupStoreChannel = /*#__PURE__*/function () {\n  function PopupStoreChannel(_ref) {\n    _classCallCheck(this, PopupStoreChannel);\n    var instanceId = _ref.instanceId,\n      handleLogout = _ref.handleLogout,\n      handleAccountImport = _ref.handleAccountImport,\n      handleNetworkChange = _ref.handleNetworkChange,\n      handleSelectedAddressChange = _ref.handleSelectedAddressChange,\n      handleThemeChange = _ref.handleThemeChange;\n    _defineProperty(this, \"handleLogout\", void 0);\n    _defineProperty(this, \"handleAccountImport\", void 0);\n    _defineProperty(this, \"handleNetworkChange\", void 0);\n    _defineProperty(this, \"handleThemeChange\", void 0);\n    _defineProperty(this, \"handleSelectedAddressChange\", void 0);\n    _defineProperty(this, \"instanceId\", void 0);\n    this.instanceId = instanceId;\n    this.handleLogout = handleLogout;\n    this.handleAccountImport = handleAccountImport;\n    this.handleNetworkChange = handleNetworkChange;\n    this.handleSelectedAddressChange = handleSelectedAddressChange;\n    this.handleThemeChange = handleThemeChange;\n  }\n  _createClass(PopupStoreChannel, [{\n    key: \"setupStoreChannels\",\n    value: function setupStoreChannels() {\n      this.logoutChannel();\n      this.importAccountChannel();\n      this.networkChangeChannel();\n      this.selectedAddressChangeChannel();\n      this.themeChangedChannel();\n    }\n  }, {\n    key: \"logoutChannel\",\n    value: function logoutChannel() {\n      var _this14 = this;\n      var logoutChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_LOGOUT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      logoutChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data;\n        log.info(\"received logout message\", ev);\n        if (!ev.error && ((_ev$data = ev.data) === null || _ev$data === void 0 ? void 0 : _ev$data.type) === BROADCAST_CHANNELS_MSGS.LOGOUT) {\n          log.info(\"Logging Out\");\n          _this14.handleLogout();\n        }\n      });\n    }\n  }, {\n    key: \"importAccountChannel\",\n    value: function importAccountChannel() {\n      var _this15 = this;\n      var walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_ACCOUNT_IMPORT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      walletAccountImportChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data2;\n        if (!ev.error && ((_ev$data2 = ev.data) === null || _ev$data2 === void 0 ? void 0 : _ev$data2.type) === BROADCAST_CHANNELS_MSGS.ACCOUNT_IMPORTED) {\n          var _ev$data3;\n          _this15.handleAccountImport((_ev$data3 = ev.data) === null || _ev$data3 === void 0 ? void 0 : _ev$data3.privKey);\n        }\n      });\n    }\n  }, {\n    key: \"networkChangeChannel\",\n    value: function networkChangeChannel() {\n      var _this16 = this;\n      var walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_NETWORK_CHANGE_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      walletAccountImportChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data4;\n        if (!ev.error && ((_ev$data4 = ev.data) === null || _ev$data4 === void 0 ? void 0 : _ev$data4.type) === BROADCAST_CHANNELS_MSGS.NETWORK_CHANGE) {\n          var _ev$data5;\n          _this16.handleNetworkChange((_ev$data5 = ev.data) === null || _ev$data5 === void 0 ? void 0 : _ev$data5.network);\n        }\n      });\n    }\n  }, {\n    key: \"themeChangedChannel\",\n    value: function themeChangedChannel() {\n      var _this17 = this;\n      var walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.THEME_CHANGE, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      walletAccountImportChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data6;\n        log.info({\n          ev: ev\n        });\n        if (!ev.error && ((_ev$data6 = ev.data) === null || _ev$data6 === void 0 ? void 0 : _ev$data6.type) === BROADCAST_CHANNELS_MSGS.SET_THEME) {\n          var _ev$data7;\n          _this17.handleThemeChange((_ev$data7 = ev.data) === null || _ev$data7 === void 0 ? void 0 : _ev$data7.theme);\n        }\n      });\n    }\n  }, {\n    key: \"selectedAddressChangeChannel\",\n    value: function selectedAddressChangeChannel() {\n      var _this18 = this;\n      var walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_SELECTED_ADDRESS_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n      walletAccountImportChannel.addEventListener(\"message\", function (ev) {\n        var _ev$data8;\n        if (!ev.error && ((_ev$data8 = ev.data) === null || _ev$data8 === void 0 ? void 0 : _ev$data8.type) === BROADCAST_CHANNELS_MSGS.SELECTED_ADDRESS_CHANGE) {\n          var _ev$data9;\n          _this18.handleSelectedAddressChange((_ev$data9 = ev.data) === null || _ev$data9 === void 0 ? void 0 : _ev$data9.selectedAddress);\n        }\n      });\n    }\n  }]);\n  return PopupStoreChannel;\n}();\n/**\n * PopupWithBcHandler is a PopupHandler which uses broadcast channel to communicate with the popup window.\n */\nvar PopupWithBcHandler = /*#__PURE__*/function (_PopupHandler) {\n  _inherits(PopupWithBcHandler, _PopupHandler);\n  var _super10 = _createSuper(PopupWithBcHandler);\n  function PopupWithBcHandler(_ref) {\n    var _this19;\n    _classCallCheck(this, PopupWithBcHandler);\n    var config = _ref.config,\n      state = _ref.state,\n      instanceId = _ref.instanceId;\n    _this19 = _super10.call(this, {\n      config: config,\n      state: state\n    });\n    _defineProperty(_assertThisInitialized(_this19), \"bc\", void 0);\n    _this19.bc = new BroadcastChannel(instanceId, broadcastChannelOptions);\n    return _this19;\n  }\n  /**\n   * Receives the data from popup window and closes the window\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n  _createClass(PopupWithBcHandler, [{\n    key: \"handle\",\n    value: function handle(successExtraFn) {\n      var _this20 = this;\n      return new Promise(function (resolve, reject) {\n        var closeListener = function closeListener() {\n          _this20.bc.close();\n          reject(new UserError(\"user closed popup\"));\n          _this20.removeListener(\"close\", closeListener);\n        };\n        _this20.on(\"close\", closeListener);\n        _this20.bc.addEventListener(\"message\", /*#__PURE__*/function () {\n          var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(ev) {\n            var error, data;\n            return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n              while (1) {\n                switch (_context15.prev = _context15.next) {\n                  case 0:\n                    log.info(ev, \"receiving data on channel: \".concat(_this20.bc.name));\n                    _context15.prev = 1;\n                    error = ev.error, data = ev.data;\n                    if (!error) {\n                      _context15.next = 6;\n                      break;\n                    }\n                    reject(new Error(error));\n                    return _context15.abrupt(\"return\");\n                  case 6:\n                    if (!successExtraFn) {\n                      _context15.next = 9;\n                      break;\n                    }\n                    _context15.next = 9;\n                    return successExtraFn.call(_this20, data);\n                  case 9:\n                    resolve(data);\n                    _context15.next = 15;\n                    break;\n                  case 12:\n                    _context15.prev = 12;\n                    _context15.t0 = _context15[\"catch\"](1);\n                    reject(_context15.t0);\n                  case 15:\n                    _context15.prev = 15;\n                    _this20.bc.close();\n                    _this20.close();\n                    return _context15.finish(15);\n                  case 19:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }\n            }, _callee15, null, [[1, 12, 15, 19]]);\n          }));\n          return function (_x21) {\n            return _ref14.apply(this, arguments);\n          };\n        }());\n        _this20.open().then(function () {\n          log.info(\"opened window \".concat(_this20.bc.name)); // Opened window. yay.  let the bc events do their job\n\n          return undefined;\n        }).catch(function (err) {\n          log.error(err, \"something went wrong while opening window\");\n          reject(err);\n        });\n      });\n    }\n    /**\n     * Use this if we have to send large payloads which don't fit in query/hash params.\n     * Waits for ack that popup window is ready to receive data.\n     * Receives the data from popup window and closes the window\n     * @param payload - The data to be sent to the popup window once we have ack that window is ready to receive data\n     * @param successExtraFn - Extra function to be called after the data is received\n     * @returns The data to be received\n     */\n  }, {\n    key: \"handleWithHandshake\",\n    value: function handleWithHandshake(payload, successExtraFn) {\n      var _this21 = this;\n      return new Promise(function (resolve, reject) {\n        var closeListener = function closeListener() {\n          _this21.bc.close();\n          reject(new UserError(\"user closed popup\"));\n          _this21.removeListener(\"close\", closeListener);\n        };\n        _this21.on(\"close\", closeListener);\n        _this21.bc.addEventListener(\"message\", /*#__PURE__*/function () {\n          var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(ev) {\n            var error, data, _data$type, type;\n            return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n              while (1) {\n                switch (_context16.prev = _context16.next) {\n                  case 0:\n                    _context16.prev = 0;\n                    log.info(ev, \"receiving data on channel: \".concat(_this21.bc.name));\n                    error = ev.error, data = ev.data;\n                    if (!error) {\n                      _context16.next = 6;\n                      break;\n                    }\n                    reject(new Error(error));\n                    return _context16.abrupt(\"return\");\n                  case 6:\n                    // Do handshake\n                    _data$type = data.type, type = _data$type === void 0 ? \"\" : _data$type;\n                    if (!(type === POPUP_LOADED)) {\n                      _context16.next = 12;\n                      break;\n                    }\n                    _context16.next = 10;\n                    return _this21.bc.postMessage({\n                      data: payload\n                    });\n                  case 10:\n                    _context16.next = 19;\n                    break;\n                  case 12:\n                    if (!(type === POPUP_RESULT)) {\n                      _context16.next = 19;\n                      break;\n                    }\n                    if (!successExtraFn) {\n                      _context16.next = 16;\n                      break;\n                    }\n                    _context16.next = 16;\n                    return successExtraFn.call(_this21, data);\n                  case 16:\n                    resolve(data); // Must only close the bc after result is done\n\n                    _this21.bc.close();\n                    _this21.close();\n                  case 19:\n                    _context16.next = 26;\n                    break;\n                  case 21:\n                    _context16.prev = 21;\n                    _context16.t0 = _context16[\"catch\"](0);\n                    reject(_context16.t0);\n                    _this21.bc.close();\n                    _this21.close();\n                  case 26:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }\n            }, _callee16, null, [[0, 21]]);\n          }));\n          return function (_x22) {\n            return _ref15.apply(this, arguments);\n          };\n        }());\n        _this21.open().then(function () {\n          log.info(\"opened window \".concat(_this21.bc.name)); // Opened window. yay.  let the bc events do their job\n\n          return undefined;\n        }).catch(function (err) {\n          log.error(err, \"something went wrong while opening window\");\n          reject(err);\n        });\n      });\n    }\n  }]);\n  return PopupWithBcHandler;\n}(PopupHandler);\nvar RedirectHandler = /*#__PURE__*/function () {\n  function RedirectHandler() {\n    var _this22 = this;\n    _classCallCheck(this, RedirectHandler);\n    _defineProperty(this, \"error\", void 0);\n    _defineProperty(this, \"finalQueryParams\", {});\n    _defineProperty(this, \"instanceParameters\", void 0);\n    _defineProperty(this, \"hashParameters\", void 0);\n    var hash = window.location.hash;\n    var queryParameters = new URLSearchParams(window.location.search);\n    queryParameters.forEach(function (value, key) {\n      _this22.finalQueryParams[key] = value;\n    });\n    var _handleRedirectParame = handleRedirectParameters(hash, this.finalQueryParams),\n      error = _handleRedirectParame.error,\n      instanceParameters = _handleRedirectParame.instanceParameters,\n      hashParameters = _handleRedirectParame.hashParameters;\n    this.error = error;\n    this.instanceParameters = instanceParameters;\n    this.hashParameters = hashParameters;\n  }\n  _createClass(RedirectHandler, [{\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        var _this23 = this;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                return _context19.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var finalQueryParams = _this23.finalQueryParams,\n                    instanceParameters = _this23.instanceParameters,\n                    hashParameters = _this23.hashParameters,\n                    error = _this23.error;\n                  var bc;\n                  try {\n                    if (!finalQueryParams.windowId) {\n                      bc = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.REDIRECT_CHANNEL, \"_\").concat(instanceParameters.instanceId), broadcastChannelOptions);\n                      bc.addEventListener(\"message\", /*#__PURE__*/function () {\n                        var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(ev) {\n                          return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                            while (1) {\n                              switch (_context17.prev = _context17.next) {\n                                case 0:\n                                  if (ev.error) {\n                                    reject(ev.error);\n                                    window.close();\n                                  } else {\n                                    resolve();\n                                    bc.close();\n                                    log.info(\"posted\", {\n                                      finalQueryParams: finalQueryParams,\n                                      hashParameters: hashParameters,\n                                      instanceParameters: instanceParameters\n                                    });\n                                  }\n                                case 1:\n                                case \"end\":\n                                  return _context17.stop();\n                              }\n                            }\n                          }, _callee17);\n                        }));\n                        return function (_x23) {\n                          return _ref16.apply(this, arguments);\n                        };\n                      }());\n                      bc.postMessage({\n                        data: {\n                          instanceParams: instanceParameters,\n                          hashParams: hashParameters,\n                          queryParams: finalQueryParams\n                        },\n                        error: error\n                      });\n                      setTimeout(function () {\n                        resolve();\n                        window.location.href = window.location.origin + window.location.search + window.location.hash;\n                      }, 5000);\n                    } else {\n                      bc = new BroadcastChannel(\"\".concat(finalQueryParams.windowId), broadcastChannelOptions);\n                      bc.addEventListener(\"message\", /*#__PURE__*/function () {\n                        var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(ev) {\n                          var _ev$data10, url, message;\n                          return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n                            while (1) {\n                              switch (_context18.prev = _context18.next) {\n                                case 0:\n                                  _ev$data10 = ev.data, url = _ev$data10.url, message = _ev$data10.message;\n                                  if (!url) {\n                                    _context18.next = 6;\n                                    break;\n                                  }\n                                  resolve();\n                                  window.location.href = url;\n                                  _context18.next = 9;\n                                  break;\n                                case 6:\n                                  if (!(message === SETUP_COMPLETE)) {\n                                    _context18.next = 9;\n                                    break;\n                                  }\n                                  _context18.next = 9;\n                                  return bc.postMessage({\n                                    data: {\n                                      windowId: finalQueryParams.windowId,\n                                      message: POPUP_LOADED\n                                    }\n                                  });\n                                case 9:\n                                  if (ev.error && ev.error !== \"\") {\n                                    log.error(ev.error);\n                                    resolve();\n                                    bc.close();\n                                  }\n                                case 10:\n                                case \"end\":\n                                  return _context18.stop();\n                              }\n                            }\n                          }, _callee18);\n                        }));\n                        return function (_x24) {\n                          return _ref17.apply(this, arguments);\n                        };\n                      }());\n                    }\n                  } catch (err) {\n                    log.info(err, \"something went wrong\");\n                    reject(err);\n                    if (bc) bc.close();\n                    window.close();\n                  }\n                }));\n              case 1:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n      function handle() {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }]);\n  return RedirectHandler;\n}();\nvar ACTIVITY_ACTION = {\n  ACTIVITY_ACTION_ALL: \"walletActivity.allTransactions\",\n  ACTIVITY_ACTION_SEND: \"walletActivity.send\",\n  ACTIVITY_ACTION_RECEIVE: \"walletActivity.receive\",\n  ACTIVITY_ACTION_TOPUP: \"walletActivity.topup\"\n};\nvar ACCOUNT_CATEGORY = {\n  NORMAL: \"normal\",\n  THRESHOLD: \"threshold\",\n  IMPORTED: \"imported\"\n};\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar DEFAULT_INTERVAL = 180 * 1000;\nvar DEFAULT_PREFERENCES = {\n  selectedCurrency: \"USD\",\n  theme: \"dark\",\n  locale: \"en-US\",\n  accountType: ACCOUNT_CATEGORY.NORMAL,\n  contacts: [],\n  jwtToken: \"\",\n  fetchedPastTx: [],\n  pastTransactions: [],\n  paymentTx: [],\n  defaultPublicAddress: \"\",\n  customTokens: [],\n  customNfts: [],\n  crashReport: true,\n  userInfo: {\n    aggregateVerifier: \"\",\n    email: \"\",\n    name: \"\",\n    profileImage: \"\",\n    typeOfLogin: LOGIN_PROVIDER.GOOGLE,\n    verifier: \"\",\n    verifierId: \"\"\n  }\n};\n/**\n * Controller that stores shared settings and exposes convenience methods\n */\nvar BasePreferencesController = /*#__PURE__*/function (_BaseController7) {\n  _inherits(BasePreferencesController, _BaseController7);\n  var _super11 = _createSuper(BasePreferencesController);\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a PreferencesController instance\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  function BasePreferencesController(_ref) {\n    var _this24;\n    _classCallCheck(this, BasePreferencesController);\n    var config = _ref.config,\n      state = _ref.state,\n      defaultPreferences = _ref.defaultPreferences,\n      signAuthMessage = _ref.signAuthMessage;\n    _this24 = _super11.call(this, {\n      config: config,\n      state: state\n    });\n    _defineProperty(_assertThisInitialized(_this24), \"name\", \"PreferencesController\");\n    _defineProperty(_assertThisInitialized(_this24), \"iframeOrigin\", void 0);\n    _defineProperty(_assertThisInitialized(_this24), \"signAuthMessage\", void 0);\n    _defineProperty(_assertThisInitialized(_this24), \"defaultPreferences\", void 0);\n    if (!config.api) {\n      throw new Error(\"PreferencesController - no api specified in config.\");\n    }\n    _this24.defaultState = {\n      identities: {},\n      selectedAddress: \"\",\n      lastErrorMessage: \"\",\n      lastSuccessMessage: \"\"\n    };\n    _this24.defaultConfig = {\n      api: config.api,\n      pollInterval: DEFAULT_INTERVAL\n    };\n    _this24.initialize();\n    _this24.defaultPreferences = _objectSpread$1(_objectSpread$1({}, DEFAULT_PREFERENCES), defaultPreferences);\n    _this24.signAuthMessage = signAuthMessage;\n    return _this24;\n  }\n  _createClass(BasePreferencesController, [{\n    key: \"setIframeOrigin\",\n    value: function setIframeOrigin(origin) {\n      this.iframeOrigin = origin;\n    }\n  }, {\n    key: \"getAddressState\",\n    value: function getAddressState(address) {\n      var selectedAddress = address || this.state.selectedAddress;\n      return this.state.identities[selectedAddress];\n    }\n    /**\n     * Sets selected address\n     *\n     * @param selectedAddress - casper account hash\n     */\n  }, {\n    key: \"setSelectedAddress\",\n    value: function setSelectedAddress(selectedAddress) {\n      this.update({\n        selectedAddress: selectedAddress\n      });\n    }\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(address) {\n        var user;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return get(\"\".concat(this.config.api, \"/user?fetchTx=false\"), this.headers(address), {\n                  useAPIKey: true\n                });\n              case 2:\n                user = _context20.sent;\n                return _context20.abrupt(\"return\", user.data);\n              case 4:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n      function getUser(_x25) {\n        return _getUser.apply(this, arguments);\n      }\n      return getUser;\n    }()\n  }, {\n    key: \"createUser\",\n    value: function () {\n      var _createUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(params) {\n        var selectedCurrency, theme, verifier, verifierId, locale, address, idToken, userPayload;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                selectedCurrency = params.selectedCurrency, theme = params.theme, verifier = params.verifier, verifierId = params.verifierId, locale = params.locale, address = params.address, idToken = params.idToken;\n                userPayload = {\n                  default_currency: selectedCurrency,\n                  theme: theme,\n                  verifier: verifier,\n                  verifier_id: verifierId,\n                  locale: locale,\n                  idToken: idToken\n                };\n                _context21.next = 4;\n                return post(\"\".concat(this.config.api, \"/user\"), userPayload, this.headers(address), {\n                  useAPIKey: true\n                });\n              case 4:\n                this.updateState({\n                  theme: theme,\n                  defaultPublicAddress: address,\n                  selectedCurrency: selectedCurrency,\n                  locale: locale\n                }, address);\n              case 5:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n      function createUser(_x26) {\n        return _createUser.apply(this, arguments);\n      }\n      return createUser;\n    }()\n  }, {\n    key: \"storeUserLogin\",\n    value: function () {\n      var _storeUserLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(params) {\n        var verifierId, verifier, options, address, idToken, browser, specialBrowser, recordLoginPayload;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                verifierId = params.verifierId, verifier = params.verifier, options = params.options, address = params.address, idToken = params.idToken;\n                if (options.rehydrate) {\n                  _context22.next = 7;\n                  break;\n                }\n                browser = bowser.getParser(window.navigator.userAgent);\n                specialBrowser = getCustomDeviceInfo();\n                recordLoginPayload = {\n                  os: browser.getOSName(),\n                  os_version: browser.getOSVersion() || \"unidentified\",\n                  browser: (specialBrowser === null || specialBrowser === void 0 ? void 0 : specialBrowser.browser) || browser.getBrowserName() || \"unidentified\",\n                  browser_version: browser.getBrowserVersion() || \"unidentified\",\n                  platform: browser.getPlatform().type || \"desktop\",\n                  hostname: this.iframeOrigin,\n                  verifier: verifier,\n                  verifier_id: verifierId,\n                  idToken: idToken\n                };\n                _context22.next = 7;\n                return post(\"\".concat(this.config.api, \"/user/recordLogin\"), recordLoginPayload, this.headers(address), {\n                  useAPIKey: true\n                });\n              case 7:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n      function storeUserLogin(_x27) {\n        return _storeUserLogin.apply(this, arguments);\n      }\n      return storeUserLogin;\n    }()\n  }, {\n    key: \"setCrashReport\",\n    value: function () {\n      var _setCrashReport = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(isEnabled) {\n        var _this$getAddressState;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                if (!(isEnabled === ((_this$getAddressState = this.getAddressState()) === null || _this$getAddressState === void 0 ? void 0 : _this$getAddressState.crashReport))) {\n                  _context23.next = 2;\n                  break;\n                }\n                return _context23.abrupt(\"return\", true);\n              case 2:\n                _context23.prev = 2;\n                _context23.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  enable_crash_reporter: isEnabled\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n              case 5:\n                this.updateState({\n                  crashReport: isEnabled\n                });\n                return _context23.abrupt(\"return\", true);\n              case 9:\n                _context23.prev = 9;\n                _context23.t0 = _context23[\"catch\"](2);\n                log.error(_context23.t0);\n                return _context23.abrupt(\"return\", false);\n              case 13:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this, [[2, 9]]);\n      }));\n      function setCrashReport(_x28) {\n        return _setCrashReport.apply(this, arguments);\n      }\n      return setCrashReport;\n    }()\n  }, {\n    key: \"setUserTheme\",\n    value: function () {\n      var _setUserTheme = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(theme) {\n        var _this$getAddressState2;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                if (!(theme === ((_this$getAddressState2 = this.getAddressState()) === null || _this$getAddressState2 === void 0 ? void 0 : _this$getAddressState2.theme))) {\n                  _context24.next = 2;\n                  break;\n                }\n                return _context24.abrupt(\"return\", true);\n              case 2:\n                _context24.prev = 2;\n                _context24.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  theme: theme\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n              case 5:\n                this.updateState({\n                  theme: theme\n                });\n                return _context24.abrupt(\"return\", true);\n              case 9:\n                _context24.prev = 9;\n                _context24.t0 = _context24[\"catch\"](2);\n                log.error(_context24.t0);\n                return _context24.abrupt(\"return\", false);\n              case 13:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this, [[2, 9]]);\n      }));\n      function setUserTheme(_x29) {\n        return _setUserTheme.apply(this, arguments);\n      }\n      return setUserTheme;\n    }()\n  }, {\n    key: \"setUserLocale\",\n    value: function () {\n      var _setUserLocale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(locale) {\n        var _this$getAddressState3;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                if (!(locale === ((_this$getAddressState3 = this.getAddressState()) === null || _this$getAddressState3 === void 0 ? void 0 : _this$getAddressState3.locale))) {\n                  _context25.next = 2;\n                  break;\n                }\n                return _context25.abrupt(\"return\");\n              case 2:\n                _context25.prev = 2;\n                _context25.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  locale: locale\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n              case 5:\n                this.updateState({\n                  locale: locale\n                });\n                return _context25.abrupt(\"return\", true);\n              case 9:\n                _context25.prev = 9;\n                _context25.t0 = _context25[\"catch\"](2);\n                log.error(\"unable to set locale\", _context25.t0);\n                return _context25.abrupt(\"return\", false);\n              case 13:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this, [[2, 9]]);\n      }));\n      function setUserLocale(_x30) {\n        return _setUserLocale.apply(this, arguments);\n      }\n      return setUserLocale;\n    }()\n  }, {\n    key: \"setSelectedCurrency\",\n    value: function () {\n      var _setSelectedCurrency = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(payload) {\n        var _this$getAddressState4;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                if (!(payload.selectedCurrency === ((_this$getAddressState4 = this.getAddressState()) === null || _this$getAddressState4 === void 0 ? void 0 : _this$getAddressState4.selectedCurrency))) {\n                  _context26.next = 2;\n                  break;\n                }\n                return _context26.abrupt(\"return\", true);\n              case 2:\n                _context26.prev = 2;\n                _context26.next = 5;\n                return patch(\"\".concat(this.config.api, \"/user\"), {\n                  default_currency: payload.selectedCurrency\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n              case 5:\n                this.updateState({\n                  selectedCurrency: payload.selectedCurrency\n                });\n                return _context26.abrupt(\"return\", true);\n              case 9:\n                _context26.prev = 9;\n                _context26.t0 = _context26[\"catch\"](2);\n                log.error(_context26.t0);\n                return _context26.abrupt(\"return\", false);\n              case 13:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this, [[2, 9]]);\n      }));\n      function setSelectedCurrency(_x31) {\n        return _setSelectedCurrency.apply(this, arguments);\n      }\n      return setSelectedCurrency;\n    }()\n  }, {\n    key: \"addContact\",\n    value: function () {\n      var _addContact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(contact) {\n        var _this$getAddressState5, response;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.prev = 0;\n                _context27.next = 3;\n                return post(\"\".concat(this.config.api, \"/contact\"), contact, this.headers(), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context27.sent;\n                this.updateState({\n                  contacts: [].concat(_toConsumableArray(((_this$getAddressState5 = this.getAddressState()) === null || _this$getAddressState5 === void 0 ? void 0 : _this$getAddressState5.contacts) || []), [response.data])\n                });\n                return _context27.abrupt(\"return\", true);\n              case 8:\n                _context27.prev = 8;\n                _context27.t0 = _context27[\"catch\"](0);\n                log.error(\"unable to add contact\", _context27.t0);\n                return _context27.abrupt(\"return\", false);\n              case 12:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this, [[0, 8]]);\n      }));\n      function addContact(_x32) {\n        return _addContact.apply(this, arguments);\n      }\n      return addContact;\n    }()\n  }, {\n    key: \"deleteContact\",\n    value: function () {\n      var _deleteContact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(contactId) {\n        var _this$getAddressState6, response, finalContacts;\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                _context28.prev = 0;\n                _context28.next = 3;\n                return remove(\"\".concat(this.config.api, \"/contact/\").concat(contactId), {}, this.headers(), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context28.sent;\n                finalContacts = (_this$getAddressState6 = this.getAddressState()) === null || _this$getAddressState6 === void 0 ? void 0 : _this$getAddressState6.contacts.filter(function (contact) {\n                  return contact.id !== response.data.id;\n                });\n                if (finalContacts) this.updateState({\n                  contacts: _toConsumableArray(finalContacts)\n                });\n                return _context28.abrupt(\"return\", true);\n              case 9:\n                _context28.prev = 9;\n                _context28.t0 = _context28[\"catch\"](0);\n                log.error(\"unable to delete contact\", _context28.t0);\n                return _context28.abrupt(\"return\", false);\n              case 13:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this, [[0, 9]]);\n      }));\n      function deleteContact(_x33) {\n        return _deleteContact.apply(this, arguments);\n      }\n      return deleteContact;\n    }()\n  }, {\n    key: \"revokeDiscord\",\n    value: function () {\n      var _revokeDiscord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(idToken) {\n        var resp;\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                _context29.prev = 0;\n                _context29.next = 3;\n                return post(\"\".concat(this.config.api, \"/revoke/discord\"), {\n                  token: idToken\n                }, this.headers(), {\n                  useAPIKey: true\n                });\n              case 3:\n                resp = _context29.sent;\n                log.info(resp);\n                _context29.next = 10;\n                break;\n              case 7:\n                _context29.prev = 7;\n                _context29.t0 = _context29[\"catch\"](0);\n                log.error(_context29.t0);\n              case 10:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this, [[0, 7]]);\n      }));\n      function revokeDiscord(_x34) {\n        return _revokeDiscord.apply(this, arguments);\n      }\n      return revokeDiscord;\n    }()\n  }, {\n    key: \"patchPastTx\",\n    value: function () {\n      var _patchPastTx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(body, address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                _context30.prev = 0;\n                _context30.next = 3;\n                return patch(\"\".concat(this.config.api, \"/transaction\"), body, this.headers(address), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context30.sent;\n                log.info(\"successfully patched\", response);\n                _context30.next = 10;\n                break;\n              case 7:\n                _context30.prev = 7;\n                _context30.t0 = _context30[\"catch\"](0);\n                log.error(\"unable to patch tx\", _context30.t0);\n              case 10:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this, [[0, 7]]);\n      }));\n      function patchPastTx(_x35, _x36) {\n        return _patchPastTx.apply(this, arguments);\n      }\n      return patchPastTx;\n    }()\n  }, {\n    key: \"postPastTx\",\n    value: function () {\n      var _postPastTx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(tx, address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                _context31.prev = 0;\n                _context31.next = 3;\n                return post(\"\".concat(this.config.api, \"/transaction\"), tx, this.headers(address), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context31.sent;\n                log.info(\"successfully posted tx\", response);\n                return _context31.abrupt(\"return\", response);\n              case 8:\n                _context31.prev = 8;\n                _context31.t0 = _context31[\"catch\"](0);\n                log.error(_context31.t0, \"unable to insert transaction\");\n              case 11:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this, [[0, 8]]);\n      }));\n      function postPastTx(_x37, _x38) {\n        return _postPastTx.apply(this, arguments);\n      }\n      return postPastTx;\n    }()\n  }, {\n    key: \"getWalletOrders\",\n    value: function () {\n      var _getWalletOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                _context32.prev = 0;\n                _context32.next = 3;\n                return get(\"\".concat(this.config.api, \"/transaction\"), this.headers(address), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context32.sent;\n                return _context32.abrupt(\"return\", response.success ? response.data ? response.data : [] : []);\n              case 7:\n                _context32.prev = 7;\n                _context32.t0 = _context32[\"catch\"](0);\n                log.error(\"unable to get wallet orders tx\", _context32.t0);\n                return _context32.abrupt(\"return\", []);\n              case 11:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this, [[0, 7]]);\n      }));\n      function getWalletOrders(_x39) {\n        return _getWalletOrders.apply(this, arguments);\n      }\n      return getWalletOrders;\n    }()\n  }, {\n    key: \"getTopUpOrders\",\n    value: function () {\n      var _getTopUpOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(address) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                _context33.prev = 0;\n                _context33.next = 3;\n                return get(\"\".concat(this.config.commonApiHost, \"/transaction\"), this.headers(address), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context33.sent;\n                return _context33.abrupt(\"return\", response.data || []);\n              case 7:\n                _context33.prev = 7;\n                _context33.t0 = _context33[\"catch\"](0);\n                log.error(\"unable to fetch past Top up orders\", _context33.t0);\n              case 10:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this, [[0, 7]]);\n      }));\n      function getTopUpOrders(_x40) {\n        return _getTopUpOrders.apply(this, arguments);\n      }\n      return getTopUpOrders;\n    }()\n  }, {\n    key: \"getBillBoardData\",\n    value: function () {\n      var _getBillBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                _context34.prev = 0;\n                _context34.next = 3;\n                return get(\"\".concat(this.config.api, \"/billboard\"), this.headers(), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context34.sent;\n                return _context34.abrupt(\"return\", response.success ? response.data : []);\n              case 7:\n                _context34.prev = 7;\n                _context34.t0 = _context34[\"catch\"](0);\n                log.error(\"unable to get billboard data\", _context34.t0);\n                return _context34.abrupt(\"return\", []);\n              case 11:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this, [[0, 7]]);\n      }));\n      function getBillBoardData() {\n        return _getBillBoardData.apply(this, arguments);\n      }\n      return getBillBoardData;\n    }()\n  }, {\n    key: \"getMessageForSigning\",\n    value: function () {\n      var _getMessageForSigning = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(publicAddress) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                _context35.next = 2;\n                return post(\"\".concat(this.config.api, \"/auth/message\"), {\n                  public_address: publicAddress\n                }, {}, {\n                  useAPIKey: true\n                });\n              case 2:\n                response = _context35.sent;\n                return _context35.abrupt(\"return\", response.message);\n              case 4:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n      function getMessageForSigning(_x41) {\n        return _getMessageForSigning.apply(this, arguments);\n      }\n      return getMessageForSigning;\n    }()\n  }, {\n    key: \"getTwitterId\",\n    value: function () {\n      var _getTwitterId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(payload) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                _context36.next = 2;\n                return get(\"\".concat(this.config.api, \"/twitter?screen_name=\").concat(payload.nick), this.headers(), {\n                  useAPIKey: true\n                });\n              case 2:\n                res = _context36.sent;\n                return _context36.abrupt(\"return\", \"\".concat(payload.typeOfLogin.toLowerCase(), \"|\").concat(res.data.toString()));\n              case 4:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n      function getTwitterId(_x42) {\n        return _getTwitterId.apply(this, arguments);\n      }\n      return getTwitterId;\n    }()\n  }, {\n    key: \"sendEmail\",\n    value: function () {\n      var _sendEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(payload) {\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                return _context37.abrupt(\"return\", post(\"\".concat(this.config.api, \"/transaction/sendemail\"), payload.emailObject, this.headers(), {\n                  useAPIKey: true\n                }));\n              case 1:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n      function sendEmail(_x43) {\n        return _sendEmail.apply(this, arguments);\n      }\n      return sendEmail;\n    }()\n  }, {\n    key: \"refreshJwt\",\n    value: function () {\n      var _refreshJwt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {\n        var address, messageToSign, signedMessage, response;\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                address = this.state.selectedAddress;\n                _context38.next = 3;\n                return this.getMessageForSigning(address);\n              case 3:\n                messageToSign = _context38.sent;\n                if (messageToSign.startsWith(this.config.signInPrefix)) {\n                  _context38.next = 6;\n                  break;\n                }\n                throw new Error(\"Cannot sign on invalid message\");\n              case 6:\n                signedMessage = this.signAuthMessage(address, messageToSign);\n                _context38.next = 9;\n                return post(\"\".concat(this.config.api, \"/auth/verify\"), {\n                  public_address: address,\n                  signed_message: signedMessage\n                }, {}, {\n                  useAPIKey: true\n                });\n              case 9:\n                response = _context38.sent;\n                this.updateState({\n                  jwtToken: response.token\n                }, address);\n              case 11:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n      function refreshJwt() {\n        return _refreshJwt.apply(this, arguments);\n      }\n      return refreshJwt;\n    }()\n  }, {\n    key: \"getDappList\",\n    value: function () {\n      var _getDappList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                _context39.prev = 0;\n                _context39.next = 3;\n                return get(\"\".concat(this.config.api, \"/dapps\"), this.headers(), {\n                  useAPIKey: true\n                });\n              case 3:\n                response = _context39.sent;\n                return _context39.abrupt(\"return\", response.success ? response.data : []);\n              case 7:\n                _context39.prev = 7;\n                _context39.t0 = _context39[\"catch\"](0);\n                log.error(\"unable to get billboard data\", _context39.t0);\n                return _context39.abrupt(\"return\", []);\n              case 11:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39, this, [[0, 7]]);\n      }));\n      function getDappList() {\n        return _getDappList.apply(this, arguments);\n      }\n      return getDappList;\n    }()\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(address, userInfo, jwtToken) {\n        var response, messageToSign, signedMessage;\n        return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                response = {\n                  token: jwtToken\n                };\n                if (!this.getAddressState(address)) {\n                  _context40.next = 3;\n                  break;\n                }\n                return _context40.abrupt(\"return\");\n              case 3:\n                if (jwtToken) {\n                  _context40.next = 13;\n                  break;\n                }\n                _context40.next = 6;\n                return this.getMessageForSigning(address);\n              case 6:\n                messageToSign = _context40.sent;\n                if (messageToSign.startsWith(this.config.signInPrefix)) {\n                  _context40.next = 9;\n                  break;\n                }\n                throw new Error(\"Cannot sign on invalid message\");\n              case 9:\n                signedMessage = this.signAuthMessage(address, messageToSign);\n                _context40.next = 12;\n                return post(\"\".concat(this.config.api, \"/auth/verify\"), {\n                  public_address: address,\n                  signed_message: signedMessage\n                }, {}, {\n                  useAPIKey: true\n                });\n              case 12:\n                response = _context40.sent;\n              case 13:\n                this.updateState({\n                  jwtToken: response.token,\n                  userInfo: userInfo\n                }, address);\n              case 14:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this);\n      }));\n      function init(_x44, _x45, _x46) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"updateState\",\n    value: function updateState(preferences, address) {\n      var selectedAddress = address || this.state.selectedAddress;\n      var currentState = this.getAddressState(selectedAddress) || cloneDeep(this.defaultPreferences);\n      var mergedState = _objectSpread$1(_objectSpread$1({}, currentState), preferences);\n      this.update({\n        identities: _objectSpread$1(_objectSpread$1({}, this.state.identities), {}, _defineProperty2({}, selectedAddress, mergedState))\n      });\n      return mergedState;\n    }\n  }, {\n    key: \"headers\",\n    value: function headers(address) {\n      var _this$getAddressState7;\n      var selectedAddress = address || this.state.selectedAddress;\n      return getHeaders(((_this$getAddressState7 = this.getAddressState(selectedAddress)) === null || _this$getAddressState7 === void 0 ? void 0 : _this$getAddressState7.jwtToken) || \"\");\n    }\n  }]);\n  return BasePreferencesController;\n}(BaseController);\n/**\n * The status of the transaction. Each status represents the state of the transaction internally\n * in the wallet. Some of these correspond with the state of the transaction on the network, but\n * some are wallet-specific.\n */\nvar TransactionStatus;\n(function (TransactionStatus) {\n  TransactionStatus[\"approved\"] = \"approved\";\n  TransactionStatus[\"cancelled\"] = \"cancelled\";\n  TransactionStatus[\"confirmed\"] = \"confirmed\";\n  TransactionStatus[\"failed\"] = \"failed\";\n  TransactionStatus[\"finalized\"] = \"finalized\";\n  TransactionStatus[\"processed\"] = \"processed\";\n  TransactionStatus[\"rejected\"] = \"rejected\";\n  TransactionStatus[\"signed\"] = \"signed\";\n  TransactionStatus[\"submitted\"] = \"submitted\";\n  TransactionStatus[\"unapproved\"] = \"unapproved\";\n  TransactionStatus[\"dropped\"] = \"dropped\";\n  TransactionStatus[\"expired\"] = \"expired\";\n})(TransactionStatus || (TransactionStatus = {}));\nvar TRANSACTION_TYPES = {\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  WASM_BASED_DEPLOY: \"wasmBasedDeploy\",\n  STANDARD_TRANSACTION: \"transaction\",\n  STANDARD_PAYMENT_TRANSACTION: \"payment_transaction\" // specific to chains like solana and casper\n};\n\nvar TX_EVENTS = {\n  TX_WARNING: \"tx:warning\",\n  TX_ERROR: \"tx:error\",\n  TX_FAILED: \"tx:failed\",\n  TX_CONFIRMED: \"tx:confirmed\",\n  TX_DROPPED: \"tx:dropped\",\n  TX_EXPIRED: \"tx:expired\",\n  TX_STATUS_UPDATE: \"tx:status_update\",\n  TX_UNAPPROVED: \"tx:unapproved\"\n};\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar BaseTransactionStateManager = /*#__PURE__*/function (_BaseController8) {\n  _inherits(BaseTransactionStateManager, _BaseController8);\n  var _super12 = _createSuper(BaseTransactionStateManager);\n  function BaseTransactionStateManager(_ref) {\n    var _this25;\n    _classCallCheck(this, BaseTransactionStateManager);\n    var config = _ref.config,\n      state = _ref.state,\n      getCurrentChainId = _ref.getCurrentChainId;\n    _this25 = _super12.call(this, {\n      config: config,\n      state: state\n    });\n    _defineProperty(_assertThisInitialized(_this25), \"getCurrentChainId\", void 0);\n    _this25.defaultConfig = {\n      txHistoryLimit: 40\n    };\n    _this25.defaultState = {\n      transactions: {},\n      unapprovedTxs: {},\n      currentNetworkTxsList: []\n    };\n    _this25.initialize();\n    _this25.getCurrentChainId = getCurrentChainId;\n    return _this25;\n  }\n  _createClass(BaseTransactionStateManager, [{\n    key: \"getUnapprovedTxList\",\n    value: function getUnapprovedTxList() {\n      var chainId = this.getCurrentChainId();\n      return pickBy(this.state.transactions, function (transaction) {\n        return transaction.status === TransactionStatus.unapproved && transactionMatchesNetwork(transaction, chainId);\n      });\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txId) {\n      var transactions = this.state.transactions;\n      return transactions[txId];\n    }\n  }, {\n    key: \"updateTransaction\",\n    value: function updateTransaction(txMeta) {\n      // commit txMeta to state\n      var txId = txMeta.id;\n      txMeta.updated_at = new Date().toISOString();\n      this.update({\n        transactions: _objectSpread(_objectSpread({}, this.state.transactions), {}, _defineProperty2({}, txId, txMeta))\n      });\n    }\n  }, {\n    key: \"setTxStatusRejected\",\n    value: function setTxStatusRejected(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.rejected);\n      this._deleteTransaction(txId);\n    }\n    /**\n     * The implementing controller can override this functionality and add custom logic + call super.()\n     */\n  }, {\n    key: \"setTxStatusUnapproved\",\n    value: function setTxStatusUnapproved(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.unapproved);\n    }\n  }, {\n    key: \"setTxStatusApproved\",\n    value: function setTxStatusApproved(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.approved);\n    }\n  }, {\n    key: \"setTxStatusSigned\",\n    value: function setTxStatusSigned(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.signed);\n    }\n  }, {\n    key: \"setTxStatusSubmitted\",\n    value: function setTxStatusSubmitted(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.submitted);\n    }\n  }, {\n    key: \"setTxStatusDropped\",\n    value: function setTxStatusDropped(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.dropped);\n    }\n  }, {\n    key: \"setTxStatusExpired\",\n    value: function setTxStatusExpired(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.expired);\n    }\n  }, {\n    key: \"setTxStatusConfirmed\",\n    value: function setTxStatusConfirmed(txId) {\n      this._setTransactionStatus(txId, TransactionStatus.confirmed);\n    }\n  }, {\n    key: \"setTxStatusFailed\",\n    value: function setTxStatusFailed(txId, error_) {\n      var error = !error_ ? new Error(\"Internal torus failure\") : error_;\n      var txMeta = this.getTransaction(txId);\n      txMeta.error = error;\n      this.updateTransaction(txMeta);\n      this._setTransactionStatus(txId, TransactionStatus.failed);\n    }\n    /**\n     * Method to determine if the transaction is in a final state\n     * @param status - Transaction status\n     * @returns boolean if the transaction is in a final state\n     */\n  }, {\n    key: \"isFinalState\",\n    value: function isFinalState(status) {\n      return status === TransactionStatus.rejected || status === TransactionStatus.submitted || status === TransactionStatus.confirmed || status === TransactionStatus.failed || status === TransactionStatus.cancelled || status === TransactionStatus.expired;\n    }\n    /**\n     * Filters out the unapproved transactions from state\n     */\n  }, {\n    key: \"clearUnapprovedTxs\",\n    value: function clearUnapprovedTxs() {\n      this.update({\n        transactions: omitBy(this.state.transactions, function (transaction) {\n          return transaction.status === TransactionStatus.unapproved;\n        })\n      });\n    }\n    /**\n     * will append new transactions to old txns.\n     */\n  }, {\n    key: \"_addTransactionsToState\",\n    value: function _addTransactionsToState(transactions) {\n      this.update({\n        transactions: transactions.reduce(function (result, newTx) {\n          result[newTx.id] = newTx;\n          return result;\n        }, this.state.transactions)\n      });\n    }\n    /**\n     * will set new txns, override existing if any in state.\n     */\n  }, {\n    key: \"_setTransactionsToState\",\n    value: function _setTransactionsToState(transactions) {\n      this.update({\n        transactions: transactions.reduce(function (result, newTx) {\n          result[newTx.id] = newTx;\n          return result;\n        }, {})\n      });\n    }\n  }, {\n    key: \"_deleteTransaction\",\n    value: function _deleteTransaction(targetTransactionId) {\n      var transactions = this.state.transactions;\n      delete transactions[targetTransactionId];\n      this.update({\n        transactions: transactions\n      });\n    }\n  }, {\n    key: \"_deleteTransactions\",\n    value: function _deleteTransactions(targetTransactionIds) {\n      var transactions = this.state.transactions;\n      targetTransactionIds.forEach(function (transactionId) {\n        delete transactions[transactionId];\n      });\n      this.update({\n        transactions: transactions\n      });\n    }\n  }, {\n    key: \"_setTransactionStatus\",\n    value: function _setTransactionStatus(txId, status) {\n      var txMeta = this.getTransaction(txId);\n      if (!txMeta) {\n        return;\n      }\n      txMeta.status = status; // only updating status so no validation required on txn.\n\n      this.updateTransaction(txMeta);\n      this.emit(TX_EVENTS.TX_STATUS_UPDATE, {\n        txId: txId,\n        status: status\n      });\n      if (this.isFinalState(status)) {\n        this.emit(\"\".concat(txMeta.id, \":finished\"), txMeta);\n      } else {\n        this.emit(\"\".concat(txMeta.id, \":\").concat(status), txId);\n      }\n    }\n  }]);\n  return BaseTransactionStateManager;\n}(BaseController);\nexport { ACCOUNT_CATEGORY, ACTIVITY_ACTION, ACTIVITY_ACTION_ALL, ACTIVITY_ACTION_BURN, ACTIVITY_ACTION_RECEIVE, ACTIVITY_ACTION_SEND, ACTIVITY_ACTION_TOPUP, ACTIVITY_PERIOD_ALL, ACTIVITY_PERIOD_MONTH_ONE, ACTIVITY_PERIOD_MONTH_SIX, ACTIVITY_PERIOD_WEEK_ONE, ACTIVITY_STATUS_CANCELLED, ACTIVITY_STATUS_CANCELLING, ACTIVITY_STATUS_PENDING, ACTIVITY_STATUS_SUCCESSFUL, ACTIVITY_STATUS_UNSUCCESSFUL, BROADCAST_CHANNELS, BROADCAST_CHANNELS_MSGS, BaseBlockTracker, BaseController, BaseCurrencyController, BaseEmbedController, BaseKeyringController, BasePreferencesController, BaseTransactionStateManager, BroadcastChannelHandler, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWindowManager, DEFAULT_PREFERENCES, FEATURES_CONFIRM_WINDOW, FEATURES_DEFAULT_POPUP_WINDOW, FEATURES_DEFAULT_WALLET_WINDOW, FEATURES_PROVIDER_CHANGE_WINDOW, LOGIN_PROVIDER, PAYMENT_PROVIDER, POPUP_LOADED, POPUP_RESULT, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS, PopupHandler, PopupStoreChannel, PopupWithBcHandler, RedirectHandler, SETUP_COMPLETE, StreamWindow, TRANSACTION_TYPES, TX_EVENTS, TransactionStatus, UserError, addressSlicer, broadcastChannelOptions, concatSig, createChangeProviderMiddlewareMiddleware, createCommunicationMiddleware, createEventEmitterProxy, createFetchConfigFromReq, createFetchMiddleware, createGenericJRPCMiddleware, createLoggerMiddleware, createOriginMiddleware, createRandomId, createSwappableProxy, createTopupMiddleware, formatDate, formatSmallNumbers, formatTime, getCustomDeviceInfo, getHeaders, getPopupFeatures, getTxStatusText, handleRedirectParameters, hashMessage, intToHex, padWithZeroes, providerAsMiddleware, providerFromEngine, providerFromMiddleware, randomId, signMessage, significantDigits, sleep, timeout$1 as timeout, transactionMatchesNetwork };","map":{"version":3,"mappings":"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","names":["BaseController","constructor","_ref","config","state","_defineProperty","defaultConfig","defaultState","initialState","initialConfig","internalConfig","internalState","configure","overwrite","fullUpdate","Object","assign","key","update","emit","initialize","SafeEventEmitter","sec","calculateSum","accumulator","currentValue","blockTrackerEvents","BaseBlockTracker","_currentBlock","idempotencyKey","_isRunning","blockResetDuration","_onNewListener","bind","_onRemoveListener","_resetCurrentBlock","_setupInternalEvents","isRunning","getCurrentBlock","Promise","resolve","once","newState","latestBlock","removeAllListeners","eventName","_start","_end","_newPotentialLatest","newBlock","currentBlock","_setCurrentBlock","removeListener","on","_maybeStart","_getBlockTrackerEventCount","_maybeEnd","_cancelBlockResetTimeout","_setupBlockResetTimeout","map","listenerCount","reduce","oldBlock","_blockResetTimeout","setTimeout","unref","clearTimeout","filterNoop","internalEvents","externalEventFilter","name","includes","getRawListeners","eventEmitter","rawListeners","createEventEmitterProxy","initialTarget","opts","finalOpts","eventFilter","Error","target","setTarget","newTarget","oldTarget","eventNames","filter","forEach","handler","proxy","Proxy","get","_","set","value","POLLING_INTERVAL","BaseCurrencyController","currentCurrency","conversionRate","conversionDate","nativeCurrency","pollInterval","getNativeCurrency","setNativeCurrency","ticker","getCurrentCurrency","setCurrentCurrency","getConversionRate","setConversionRate","getConversionDate","setConversionDate","createRandomId","getCreateRandomId","providerFromEngine","engine","provider","sendAsync","req","handle","res","error","err","serializeError","fallbackError","message","toString","code","ethErrors","rpc","internal","result","send","callback","request","args","id","jsonrpc","providerFromMiddleware","middleware","JRPCEngine","push","providerAsMiddleware","_next","end","providerRes","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","POPUP_LOADED","POPUP_RESULT","SETUP_COMPLETE","ACTIVITY_ACTION_ALL","ACTIVITY_ACTION_SEND","ACTIVITY_ACTION_BURN","ACTIVITY_ACTION_RECEIVE","ACTIVITY_ACTION_TOPUP","ACTIVITY_PERIOD_ALL","ACTIVITY_PERIOD_WEEK_ONE","ACTIVITY_PERIOD_MONTH_ONE","ACTIVITY_PERIOD_MONTH_SIX","ACTIVITY_STATUS_SUCCESSFUL","ACTIVITY_STATUS_UNSUCCESSFUL","ACTIVITY_STATUS_PENDING","ACTIVITY_STATUS_CANCELLED","ACTIVITY_STATUS_CANCELLING","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","CREATE_WINDOW","CLOSE_WINDOW","USER_LOGGED_IN","USER_LOGGED_OUT","COMMUNICATION_JRPC_METHODS","LOGOUT","WALLET_INSTANCE_ID","USER_INFO","SET_PROVIDER","TOPUP","OPENED_WINDOW","CLOSED_WINDOW","GET_PROVIDER_STATE","LOGIN_WITH_PRIVATE_KEY","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","CHAIN_CHANGED","UNLOCK_STATE_CHANGED","BROADCAST_CHANNELS","REDIRECT_CHANNEL","PROVIDER_CHANGE_CHANNEL","TRANSACTION_CHANNEL","MESSAGE_CHANNEL","WALLET_LOGOUT_CHANNEL","WALLET_SELECTED_ADDRESS_CHANNEL","WALLET_NETWORK_CHANGE_CHANNEL","WALLET_ACCOUNT_IMPORT_CHANNEL","THEME_CHANGE","BROADCAST_CHANNELS_MSGS","ACCOUNT_IMPORTED","SELECTED_ADDRESS_CHANGE","NETWORK_CHANGE","SET_THEME","changeProvider","createAsyncMiddleware","response","next","method","_ref2","topup","targetMethod","undefined","createCommunicationMiddleware","providerHandlers","getUserInfo","getWalletInstanceId","logout","setIFrameStatus","handleWindowRpc","getProviderState","loginWithPrivateKey","mergeMiddleware","createChangeProviderMiddlewareMiddleware","createTopupMiddleware","createScaffoldMiddleware","createGenericJRPCMiddleware","BaseEmbedController","buttonPosition","isIFrameFullScreen","apiKey","oauthModalVisibility","loginInProgress","dappMetadata","icon","initializeProvider","handlers","communicationMiddleware","communicationProvider","setCommunicationProvider","_communicationProviderProxy","createSwappableProxy","CommunicationWindowManager","params","windowId","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","getTxStatusText","txStatus","intToHex","i","hex","randomId","Math","random","slice","hexString","targetLength","test","String","prototype","padStart","call","concatSig","v","r","s","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","padWithZeroes","toUnsigned","sStr","vStr","stripHexPrefix","addHexPrefix","concat","timeout","duration","timeoutRef","window","getHeaders","jwt","headers","Authorization","formatSmallNumbers","number","currency","noTilde","finalNumber","BigNumber","isBigNumber","toNumber","Number","isFinite","toLowerCase","parseFloat","toFixed","tilde","toUpperCase","addressSlicer","address","sliceLength","length","significantDigits","perc","length_","input","isZero","times","depth","gte","ceil","log10","div","shift","pow","roundedNumber","round","formatDate","inputDate","monthList","date","Date","day","getDate","month","getMonth","year","getFullYear","formatTime","time","toTimeString","transactionMatchesNetwork","transaction","chainId","hashMessage","bufferedMessage","Buffer","from","el","hashPersonalMessage","signMessage","privateKey","data","privKey","msgSig","ecsign","rawMsgSig","intToBuffer","getPopupFeatures","w","h","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","broadcastChannelOptions","webWorkerSupport","getCustomDeviceInfo","navigator","_navigator","brave","browser","UserError","handleRedirectParameters","hash","queryParameters","hashParameters","hashUrl","URL","location","origin","searchParams","instanceParameters","keys","JSON","parse","atob","decodeURIComponent","error_description","sleep","ms","BaseKeyringController","wallets","signAuthMessage","keyring","find","x","hashedMessage","rawMessageSig","RETRIABLE_ERRORS","checkForHttpErrors","fetchRes","status","methodNotFound","parseResponse","body","createFetchConfigFromReq","rpcTarget","originHttpHeaderKey","parsedUrl","payload","originDomain","serializedPayload","stringify","fetchParams","Accept","fetchUrl","href","createFetchMiddleware","maxAttempts","retryInterval","attempt","fetch","json","fetchBody","errMsg","isRetriable","some","phrase","createLoggerMiddleware","options","loggerMiddleware","log","warn","isTorusInternal","info","createOriginMiddleware","originMiddleware","BroadcastChannelHandler","channelPrefix","URLSearchParams","search","instanceId","channel","bc","BroadcastChannel","getMessageFromChannel","reject","addEventListener","ev","close","postMessage","type","StreamWindow","communicationEngine","communicationWindowManager","popupSuccess","closed","url","postMsg","localResponse","currentDelay","recursiveFn","serverResponse","PopupHandler","dappStorageKey","windowTimer","iClosedWindow","_setupTimer","urlHashParams","append","localWindow","open","timer","setInterval","clearInterval","PopupStoreChannel","handleLogout","handleAccountImport","handleNetworkChange","handleSelectedAddressChange","handleThemeChange","setupStoreChannels","logoutChannel","importAccountChannel","networkChangeChannel","selectedAddressChangeChannel","themeChangedChannel","walletAccountImportChannel","_ev$data3","_ev$data5","network","_ev$data7","theme","_ev$data9","selectedAddress","PopupWithBcHandler","successExtraFn","closeListener","then","catch","handleWithHandshake","RedirectHandler","finalQueryParams","instanceParams","hashParams","queryParams","ACTIVITY_ACTION","ACCOUNT_CATEGORY","NORMAL","THRESHOLD","IMPORTED","DEFAULT_INTERVAL","DEFAULT_PREFERENCES","selectedCurrency","locale","accountType","contacts","jwtToken","fetchedPastTx","pastTransactions","paymentTx","defaultPublicAddress","customTokens","customNfts","crashReport","userInfo","aggregateVerifier","email","profileImage","typeOfLogin","verifier","verifierId","BasePreferencesController","defaultPreferences","api","identities","lastErrorMessage","lastSuccessMessage","setIframeOrigin","iframeOrigin","getAddressState","setSelectedAddress","useAPIKey","user","idToken","userPayload","default_currency","verifier_id","post","updateState","rehydrate","bowser","getParser","userAgent","specialBrowser","recordLoginPayload","os","getOSName","os_version","getOSVersion","getBrowserName","browser_version","getBrowserVersion","platform","getPlatform","hostname","isEnabled","patch","enable_crash_reporter","_this$getAddressState4","contact","contactId","remove","finalContacts","token","resp","tx","success","commonApiHost","publicAddress","public_address","nick","emailObject","getMessageForSigning","messageToSign","startsWith","signInPrefix","signedMessage","signed_message","preferences","currentState","cloneDeep","mergedState","_objectSpread","TransactionStatus","TRANSACTION_TYPES","CONTRACT_INTERACTION","DEPLOY_CONTRACT","WASM_BASED_DEPLOY","STANDARD_TRANSACTION","STANDARD_PAYMENT_TRANSACTION","TX_EVENTS","TX_WARNING","TX_ERROR","TX_FAILED","TX_CONFIRMED","TX_DROPPED","TX_EXPIRED","TX_STATUS_UPDATE","TX_UNAPPROVED","BaseTransactionStateManager","getCurrentChainId","txHistoryLimit","transactions","unapprovedTxs","currentNetworkTxsList","getUnapprovedTxList","pickBy","unapproved","getTransaction","txId","updateTransaction","txMeta","updated_at","toISOString","setTxStatusRejected","_setTransactionStatus","rejected","_deleteTransaction","setTxStatusUnapproved","setTxStatusApproved","approved","setTxStatusSigned","signed","setTxStatusSubmitted","submitted","setTxStatusDropped","dropped","setTxStatusExpired","expired","setTxStatusConfirmed","confirmed","setTxStatusFailed","error_","failed","isFinalState","cancelled","clearUnapprovedTxs","omitBy","_addTransactionsToState","newTx","_setTransactionsToState","targetTransactionId","_deleteTransactions","targetTransactionIds","transactionId"],"sources":["/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/BaseController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Block/BaseBlockTracker.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/createEventEmitterProxy.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/createSwappableProxy.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Currency/BaseCurrencyController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Network/INetworkController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/enums.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Embed/CommunicationMethodMiddleware.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Embed/BaseEmbedController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Embed/CommunicationWindowManager.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/interfaces.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/utils/txUtils.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/utils/utils.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Keyring/BaseKeyringController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Network/createFetchMiddleware.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Network/createLoggerMiddleware.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Network/createOriginMiddleware.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Popup/BroadcastChannelHandler.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Popup/StreamWindow.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Popup/PopupHandler.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Popup/PopupStoreChannel.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Popup/PopupWithBcHandler.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Popup/RedirectHandler.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Preferences/IPreferencesController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Preferences/BasePreferencesController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Transaction/ITransactionController.ts","/Users/ivan/Metadata/node_modules/@toruslabs/base-controllers/src/Transaction/BaseTransactionStateController.ts"],"sourcesContent":["import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { BaseConfig, BaseState, IController } from \"./interfaces\";\n\n/**\n * Controller class that provides configuration, state management, and subscriptions\n */\nclass BaseController<C extends BaseConfig, S extends BaseState> extends SafeEventEmitter implements IController<C, S> {\n  /**\n   * Default options used to configure this controller\n   */\n  defaultConfig: C = {} as C;\n\n  /**\n   * Default state set on this controller\n   */\n  defaultState: S = {} as S;\n\n  /**\n   * Determines if listeners are notified of state changes\n   */\n  disabled = false;\n\n  /**\n   * Name of this controller used during composition\n   */\n  name = \"BaseController\";\n\n  private readonly initialConfig: C;\n\n  private readonly initialState: S;\n\n  private internalConfig: C = this.defaultConfig;\n\n  private internalState: S = this.defaultState;\n\n  /**\n   * Creates a BaseController instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor({ config = {} as C, state = {} as S }: { config?: Partial<C>; state?: Partial<S> }) {\n    super();\n    // Use assign since generics can't be spread: https://git.io/vpRhY\n    this.initialState = state as S;\n    this.initialConfig = config as C;\n  }\n\n  /**\n   * Retrieves current controller configuration options\n   *\n   * @returns - Current configuration\n   */\n  get config(): C {\n    return this.internalConfig;\n  }\n\n  /**\n   * Retrieves current controller state\n   *\n   * @returns - Current state\n   */\n  get state(): S {\n    return this.internalState;\n  }\n\n  /**\n   * Updates controller configuration\n   *\n   * @param config - New configuration options\n   * @param overwrite - Overwrite config instead of merging\n   * @param fullUpdate - Boolean that defines if the update is partial or not\n   */\n  configure(config: Partial<C>, overwrite = false, fullUpdate = true): void {\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? (config as C) : Object.assign(this.internalConfig, config);\n\n      for (const key in this.internalConfig) {\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this[key as string] = this.internalConfig[key];\n        }\n      }\n    } else {\n      for (const key in config) {\n        /* istanbul ignore else */\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this.internalConfig[key] = config[key];\n          this[key as string] = config[key];\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates controller state\n   *\n   * @param state - New state\n   * @param overwrite - Overwrite state instead of merging\n   */\n  update(state: Partial<S>, overwrite = false): void {\n    this.internalState = overwrite ? { ...(state as S) } : { ...this.internalState, ...state };\n    this.emit(\"store\", this.internalState);\n  }\n\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns - This controller instance\n   */\n  protected initialize(): this {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n}\n\nexport default BaseController;\n","import BaseController from \"../BaseController\";\nimport { BaseBlockTrackerConfig, BaseBlockTrackerState } from \"./IBlockTrackerController\";\n\nconst sec = 1000;\n\nconst calculateSum = (accumulator: number, currentValue: number) => accumulator + currentValue;\nconst blockTrackerEvents: string[] = [\"sync\", \"latest\"];\n\nexport class BaseBlockTracker<\n  T extends { idempotencyKey: string },\n  C extends BaseBlockTrackerConfig,\n  S extends BaseBlockTrackerState<T>\n> extends BaseController<C, S> {\n  name = \"BaseBlockTracker\";\n\n  private _blockResetTimeout?: ReturnType<typeof setTimeout>;\n\n  constructor({ config = {}, state = {} }: { config: Partial<C>; state: Partial<S> }) {\n    super({ config, state });\n\n    // config\n\n    this.defaultState = {\n      _currentBlock: { idempotencyKey: \"\" },\n      _isRunning: false,\n    } as S;\n\n    this.defaultConfig = {\n      blockResetDuration: 20 * sec,\n    } as C;\n\n    this.initialize();\n\n    // bind functions for internal use\n    this._onNewListener = this._onNewListener.bind(this);\n    this._onRemoveListener = this._onRemoveListener.bind(this);\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this);\n\n    // listen for handler changes\n    this._setupInternalEvents();\n  }\n\n  isRunning(): boolean {\n    return this.state._isRunning;\n  }\n\n  getCurrentBlock(): T {\n    return this.state._currentBlock;\n  }\n\n  async getLatestBlock(): Promise<T> {\n    // return if available\n    if (this.state._currentBlock) {\n      return this.state._currentBlock;\n    }\n    // wait for a new latest block\n    const latestBlock = await new Promise((resolve: (state: T) => void) =>\n      this.once(\"latest\", (newState: BaseBlockTrackerState<T>) => {\n        if (newState._currentBlock) {\n          resolve(newState._currentBlock);\n        }\n      })\n    );\n    // return newly set current block\n    return latestBlock;\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners(eventName?: string): this {\n    if (eventName) {\n      super.removeAllListeners(eventName);\n    } else {\n      super.removeAllListeners();\n    }\n    // re-add internal events\n    this._setupInternalEvents();\n    // trigger stop check just in case\n    this._onRemoveListener();\n    return this;\n  }\n\n  /**\n   * To be implemented in subclass.\n   */\n  protected _start(): void {\n    // default behavior is noop\n  }\n\n  /**\n   * To be implemented in subclass.\n   */\n  protected _end(): void {\n    // default behavior is noop\n  }\n\n  protected _newPotentialLatest(newBlock: T): void {\n    const currentBlock = this.state._currentBlock;\n    // only update if blok number is higher\n    if (currentBlock && newBlock.idempotencyKey === currentBlock.idempotencyKey) {\n      return;\n    }\n    this._setCurrentBlock(newBlock);\n  }\n\n  private _setupInternalEvents(): void {\n    // first remove listeners for idempotency\n    this.removeListener(\"newListener\", this._onNewListener);\n    this.removeListener(\"removeListener\", this._onRemoveListener);\n    // then add them\n    this.on(\"removeListener\", this._onRemoveListener);\n    this.on(\"newListener\", this._onNewListener);\n  }\n\n  private _onNewListener(): void {\n    this._maybeStart();\n  }\n\n  private _onRemoveListener(): void {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) {\n      return;\n    }\n    this._maybeEnd();\n  }\n\n  private _maybeStart(): void {\n    if (this.state._isRunning) {\n      return;\n    }\n    this.state._isRunning = true;\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout();\n    this._start();\n  }\n\n  private _maybeEnd(): void {\n    if (!this.state._isRunning) {\n      return;\n    }\n    this.state._isRunning = false;\n    this._setupBlockResetTimeout();\n    this._end();\n  }\n\n  private _getBlockTrackerEventCount(): number {\n    return blockTrackerEvents.map((eventName) => this.listenerCount(eventName)).reduce(calculateSum);\n  }\n\n  private _setCurrentBlock(newBlock: T): void {\n    const oldBlock = this.state._currentBlock;\n    this.update({\n      _currentBlock: newBlock,\n    } as S);\n    this.emit(\"latest\", newBlock);\n    this.emit(\"sync\", { oldBlock, newBlock });\n  }\n\n  private _setupBlockResetTimeout(): void {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout();\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this.config.blockResetDuration);\n\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref();\n    }\n  }\n\n  private _cancelBlockResetTimeout(): void {\n    if (this._blockResetTimeout) {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }\n\n  private _resetCurrentBlock(): void {\n    this.update({ _currentBlock: { idempotencyKey: \"\" } } as Partial<S>);\n  }\n}\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nconst filterNoop = () => true;\nconst internalEvents = [\"newListener\", \"removeListener\"];\nconst externalEventFilter = (name: string) => !internalEvents.includes(name);\n\ninterface EventEmitterProxyOpts {\n  eventFilter?: ((name: string) => boolean) | string;\n}\n\nfunction getRawListeners<T extends SafeEventEmitter>(eventEmitter: T, name: string) {\n  // prefer native\n  return eventEmitter.rawListeners(name);\n}\n\nexport default function createEventEmitterProxy<T extends SafeEventEmitter>(initialTarget: T, opts?: EventEmitterProxyOpts): T {\n  // parse options\n  const finalOpts = opts || {};\n  let eventFilter = finalOpts.eventFilter || filterNoop;\n  if (typeof eventFilter === \"string\" && eventFilter === \"skipInternal\") eventFilter = externalEventFilter;\n  if (typeof eventFilter !== \"function\") throw new Error(\"createEventEmitterProxy - Invalid eventFilter\");\n\n  let target = initialTarget;\n\n  let setTarget = (newTarget: T) => {\n    const oldTarget = target;\n    target = newTarget;\n\n    oldTarget\n      .eventNames()\n      .filter(eventFilter as (name: string) => boolean)\n      .forEach((name: string) => {\n        getRawListeners(oldTarget, name).forEach((handler: (...args: any[]) => void) => newTarget.on(name, handler));\n      });\n\n    // remove old listeners\n    oldTarget.removeAllListeners();\n  };\n\n  const proxy = new Proxy<T>({} as T, {\n    get: (_, name) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: (_, name, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n      target[name] = value;\n      return true;\n    },\n  });\n\n  return proxy;\n}\n","export default function createSwappableProxy<T extends object>(initialTarget: T): T {\n  let target = initialTarget;\n\n  let setTarget = (newTarget: T) => {\n    target = newTarget;\n  };\n\n  const proxy = new Proxy<T>({} as T, {\n    get: (_, name) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: (_, name, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n      target[name] = value;\n      return true;\n    },\n  });\n\n  return proxy;\n}\n","import BaseController from \"../BaseController\";\nimport { BaseCurrencyControllerConfig, BaseCurrencyControllerState } from \"./ICurrencyController\";\n\n// every ten minutes\nconst POLLING_INTERVAL = 600_000;\n\nexport class BaseCurrencyController<C extends BaseCurrencyControllerConfig, S extends BaseCurrencyControllerState> extends BaseController<C, S> {\n  constructor({ config = {}, state }: { config: Partial<C>; state?: Partial<S> }) {\n    super({ config, state });\n    this.defaultState = {\n      currentCurrency: \"usd\",\n      conversionRate: 0,\n      conversionDate: \"N/A\",\n      nativeCurrency: \"ETH\",\n    } as S;\n\n    this.defaultConfig = {\n      pollInterval: POLLING_INTERVAL,\n    } as C;\n    this.initialize();\n  }\n\n  //\n  // PUBLIC METHODS\n  //\n\n  public getNativeCurrency(): string {\n    return this.state.nativeCurrency;\n  }\n\n  public setNativeCurrency(nativeCurrency: string): void {\n    this.update({\n      nativeCurrency,\n      ticker: nativeCurrency,\n    } as S);\n  }\n\n  public getCurrentCurrency(): string {\n    return this.state.currentCurrency;\n  }\n\n  public setCurrentCurrency(currentCurrency: string): void {\n    this.update({ currentCurrency } as S);\n  }\n\n  /**\n   * A getter for the conversionRate property\n   *\n   * @returns The conversion rate from ETH to the selected currency.\n   *\n   */\n  public getConversionRate(): number {\n    return this.state.conversionRate;\n  }\n\n  public setConversionRate(conversionRate: number): void {\n    this.update({ conversionRate } as S);\n  }\n\n  /**\n   * A getter for the conversionDate property\n   *\n   * @returns The date at which the conversion rate was set. Expressed in milliseconds since midnight of\n   * January 1, 1970\n   *\n   */\n  public getConversionDate(): string {\n    return this.state.conversionDate;\n  }\n\n  public setConversionDate(conversionDate: string): void {\n    this.update({ conversionDate } as S);\n  }\n}\n","import { JRPCEngine, JRPCMiddleware, JRPCRequest, JRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors, serializeError } from \"eth-rpc-errors\";\nimport getCreateRandomId from \"json-rpc-random-id\";\n\nimport { BaseConfig, BaseState, IController } from \"../interfaces\";\nexport const createRandomId = getCreateRandomId();\n\nexport interface ProviderConfig {\n  /**\n   * Block explorer url for the chain\n   * @example https://ropsten.etherscan.io\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Binance Token', 'Ethereum', 'Matic Network Token'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example BNB, ETH\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://ropsten.infura.io/v3/YOUR_API_KEY\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\n/**\n * Custom network properties\n * @example isEIP1559Compatible: true etc.\n */\nexport interface NetworkProperties {\n  [key: string]: number | string | boolean;\n}\n\n/**\n *\n */\nexport interface NetworkState extends BaseState {\n  /**\n   * Chain Id for the current network\n   */\n  chainId: string;\n  providerConfig: ProviderConfig;\n  properties: NetworkProperties;\n}\n\nexport interface NetworkConfig extends BaseConfig {\n  providerConfig: ProviderConfig;\n}\n\nexport interface INetworkController<C, S> extends IController<C, S> {\n  /**\n   * Gets the chainId of the network\n   */\n  getNetworkIdentifier(): string;\n\n  /**\n   * Sets provider for the current network controller\n   * @param providerConfig - Provider config object\n   */\n  setProviderConfig(providerConfig: ProviderConfig): void;\n  /**\n   * Connects to the rpcUrl for the current selected provider\n   */\n  lookupNetwork(): Promise<void>;\n}\n\nexport type BlockData = string | string[];\n\nexport type Block = Record<string, BlockData>;\n\nexport type SendAsyncCallBack = (err: Error, providerRes: JRPCResponse<Block>) => void;\n\nexport type SendCallBack<U> = (err: any, providerRes: U) => void;\n\nexport type Payload = Partial<JRPCRequest<string[]>>;\n\nexport interface RequestArguments<T> {\n  method: string;\n  params?: T;\n}\nexport type Maybe<T> = T | Partial<T> | null | undefined;\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<U>) => void;\n  request: <T, U>(args: RequestArguments<T>) => Promise<Maybe<U>>;\n}\n\nexport interface ExtendedJsonRpcRequest<T> extends JRPCRequest<T> {\n  skipCache?: boolean;\n}\n\nexport function providerFromEngine(engine: JRPCEngine): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider = new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = async <T, U>(req: JRPCRequest<T>) => {\n    const res = await engine.handle(req);\n    if (res.error) {\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: res.error?.message || res.error.toString(),\n          code: res.error?.code || -32603,\n        },\n      });\n\n      throw ethErrors.rpc.internal(err);\n    }\n    return res.result as U;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  provider.send = <T, U>(req: JRPCRequest<T>, callback: (error: any, providerRes: U) => void) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message: string) => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async <T, U>(args: RequestArguments<T>) => {\n    const req: JRPCRequest<T> = {\n      ...args,\n      id: createRandomId(),\n      jsonrpc: \"2.0\",\n    };\n    const res = await provider.sendAsync(req);\n    return res as U;\n  };\n  return provider;\n}\n\nexport function providerFromMiddleware(middleware: JRPCMiddleware<string[], unknown>): SafeEventEmitterProvider {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider: SafeEventEmitterProvider = providerFromEngine(engine);\n  return provider;\n}\n\nexport function providerAsMiddleware(provider: SafeEventEmitterProvider): JRPCMiddleware<unknown, unknown> {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes: unknown = await provider.sendAsync<unknown, unknown>(req);\n      res.result = providerRes;\n      return end();\n    } catch (error) {\n      return end(error.message);\n    }\n  };\n}\n","export const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 700, width: 450 };\n\nexport const POPUP_LOADED = \"popup_loaded\";\nexport const POPUP_RESULT = \"popup_result\";\n\nexport const SETUP_COMPLETE = \"setup_complete\";\n\nexport const ACTIVITY_ACTION_ALL = \"walletActivity.allTransactions\";\nexport const ACTIVITY_ACTION_SEND = \"walletActivity.send\";\nexport const ACTIVITY_ACTION_BURN = \"walletActivity.burn\";\nexport const ACTIVITY_ACTION_RECEIVE = \"walletActivity.receive\";\nexport const ACTIVITY_ACTION_TOPUP = \"walletActivity.topup\";\n\nexport const ACTIVITY_PERIOD_ALL = \"walletActivity.all\";\nexport const ACTIVITY_PERIOD_WEEK_ONE = \"walletActivity.lastOneWeek\";\nexport const ACTIVITY_PERIOD_MONTH_ONE = \"walletActivity.lastOneMonth\";\nexport const ACTIVITY_PERIOD_MONTH_SIX = \"walletActivity.lastSixMonts\";\n\nexport const ACTIVITY_STATUS_SUCCESSFUL = \"walletActivity.successful\";\nexport const ACTIVITY_STATUS_UNSUCCESSFUL = \"walletActivity.unsuccessful\";\nexport const ACTIVITY_STATUS_PENDING = \"walletActivity.pending\";\nexport const ACTIVITY_STATUS_CANCELLED = \"walletActivity.cancelled\";\nexport const ACTIVITY_STATUS_CANCELLING = \"walletActivity.cancelling\";\n\nexport const COMMUNICATION_NOTIFICATIONS = {\n  IFRAME_STATUS: \"iframe_status\",\n\n  // Tell embed to create the window\n  CREATE_WINDOW: \"create_window\",\n  // Tell embed to close the window\n  CLOSE_WINDOW: \"close_window\",\n\n  USER_LOGGED_IN: \"user_logged_in\",\n  USER_LOGGED_OUT: \"user_logged_out\",\n};\n\nexport const COMMUNICATION_JRPC_METHODS = {\n  LOGOUT: \"logout\",\n  WALLET_INSTANCE_ID: \"wallet_instance_id\",\n  USER_INFO: \"user_info\",\n  SET_PROVIDER: \"set_provider\",\n  TOPUP: \"topup\",\n  IFRAME_STATUS: \"iframe_status\",\n  // embed has opened the window as requested\n  OPENED_WINDOW: \"opened_window\",\n  // user has closed the window from embed's side\n  CLOSED_WINDOW: \"closed_window\",\n  GET_PROVIDER_STATE: \"get_provider_state\",\n  LOGIN_WITH_PRIVATE_KEY: \"login_with_private_key\",\n};\n\nexport const PROVIDER_JRPC_METHODS = {\n  GET_PROVIDER_STATE: \"wallet_get_provider_state\",\n};\n\nexport const PROVIDER_NOTIFICATIONS = {\n  ACCOUNTS_CHANGED: \"wallet_accounts_changed\",\n  CHAIN_CHANGED: \"wallet_chain_changed\",\n  UNLOCK_STATE_CHANGED: \"wallet_unlock_state_changed\",\n};\n\nexport const BROADCAST_CHANNELS = {\n  REDIRECT_CHANNEL: \"redirect_channel\",\n  PROVIDER_CHANGE_CHANNEL: \"torus_provider_change_channel\",\n  TRANSACTION_CHANNEL: \"torus_channel\",\n  MESSAGE_CHANNEL: \"torus_message_channel\",\n  WALLET_LOGOUT_CHANNEL: \"wallet_logout_channel\",\n  WALLET_SELECTED_ADDRESS_CHANNEL: \"wallet_selected_address_channel\",\n  WALLET_NETWORK_CHANGE_CHANNEL: \"wallet_network_change_channel\",\n  WALLET_ACCOUNT_IMPORT_CHANNEL: \"wallet_account_import_channel\",\n  THEME_CHANGE: \"theme_change_channel\",\n};\nexport const BROADCAST_CHANNELS_MSGS = {\n  LOGOUT: \"logout\",\n  ACCOUNT_IMPORTED: \"account_imported\",\n  SELECTED_ADDRESS_CHANGE: \"selected_address_change\",\n  NETWORK_CHANGE: \"network_change\",\n  SET_THEME: \"set_theme\",\n};\n\nexport type BROADCAST_CHANNELS_MSGS_TYPE = typeof BROADCAST_CHANNELS_MSGS[keyof typeof BROADCAST_CHANNELS_MSGS];\n","import { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { COMMUNICATION_JRPC_METHODS } from \"../enums\";\nimport type { ProviderConfig } from \"../Network/INetworkController\";\nimport { ICommunicationProviderHandlers, Ihandler, TopupInput } from \"./IEmbedController\";\n\nexport function createChangeProviderMiddlewareMiddleware({\n  changeProvider,\n}: {\n  changeProvider: ICommunicationProviderHandlers[\"changeProvider\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<ProviderConfig & { windowId: string }, boolean>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== COMMUNICATION_JRPC_METHODS.SET_PROVIDER) return next();\n\n    if (!changeProvider) throw new Error(\"CommunicationMiddleware - opts.changeProvider not provided\");\n    response.result = await changeProvider(request);\n  });\n}\n\nexport function createTopupMiddleware({ topup }: { topup: ICommunicationProviderHandlers[\"topup\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<TopupInput, boolean>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== COMMUNICATION_JRPC_METHODS.TOPUP) return next();\n\n    if (!topup) throw new Error(\"CommunicationMiddleware - opts.topup not provided\");\n    response.result = await topup(request);\n  });\n}\n\nexport function createGenericJRPCMiddleware<T>(\n  targetMethod: string,\n  handler: (req: Ihandler<T>) => Promise<unknown>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`CommunicationMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n    if (!result) {\n      return next();\n    }\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createCommunicationMiddleware(providerHandlers: ICommunicationProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getUserInfo, getWalletInstanceId, topup, logout, changeProvider, setIFrameStatus, handleWindowRpc, getProviderState, loginWithPrivateKey } =\n    providerHandlers;\n  return mergeMiddleware([\n    createChangeProviderMiddlewareMiddleware({ changeProvider }),\n    createTopupMiddleware({ topup }),\n    createScaffoldMiddleware({\n      [COMMUNICATION_JRPC_METHODS.LOGOUT]: logout,\n      [COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID]: getWalletInstanceId,\n      [COMMUNICATION_JRPC_METHODS.USER_INFO]: getUserInfo,\n      [COMMUNICATION_JRPC_METHODS.IFRAME_STATUS]: setIFrameStatus,\n      // Do this in the orchestrator because communicationWindowManager needs to be passed into PopupHandlers\n      [COMMUNICATION_JRPC_METHODS.OPENED_WINDOW]: handleWindowRpc,\n      [COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW]: handleWindowRpc,\n      [COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE]: getProviderState,\n    }),\n    createGenericJRPCMiddleware(COMMUNICATION_JRPC_METHODS.LOGIN_WITH_PRIVATE_KEY, loginWithPrivateKey),\n  ]);\n}\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport BaseController from \"../BaseController\";\nimport createSwappableProxy from \"../createSwappableProxy\";\nimport type { BaseConfig } from \"../interfaces\";\nimport { providerFromEngine, SafeEventEmitterProvider } from \"../Network/INetworkController\";\nimport { createCommunicationMiddleware } from \"./CommunicationMethodMiddleware\";\nimport { BaseEmbedControllerState, ICommunicationProviderHandlers } from \"./IEmbedController\";\n\nexport class BaseEmbedController<C extends BaseConfig, S extends BaseEmbedControllerState> extends BaseController<C, S> {\n  public _communicationProviderProxy: SafeEventEmitterProvider;\n\n  constructor({ config = {}, state }: { config: Partial<C>; state?: Partial<S> }) {\n    super({ config, state });\n    this.defaultState = {\n      buttonPosition: \"bottom-right\",\n      isIFrameFullScreen: true,\n      apiKey: \"torus-default\",\n      oauthModalVisibility: false,\n      loginInProgress: false,\n      dappMetadata: {\n        name: \"\",\n        icon: \"\",\n      },\n    } as S;\n    this.initialize();\n  }\n\n  /**\n   * Called by orchestrator once while initializing the class\n   * @param handlers - JRPC handlers for provider\n   * @returns - provider - Returns the providerProxy\n   */\n  public initializeProvider(handlers: ICommunicationProviderHandlers): void {\n    const engine = new JRPCEngine();\n    const communicationMiddleware = createCommunicationMiddleware(handlers);\n    engine.push(communicationMiddleware);\n    const communicationProvider = providerFromEngine(engine);\n    this.setCommunicationProvider(communicationProvider);\n  }\n\n  private setCommunicationProvider(communicationProvider: SafeEventEmitterProvider): void {\n    if (this._communicationProviderProxy) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this._communicationProviderProxy.setTarget(communicationProvider);\n    } else {\n      this._communicationProviderProxy = createSwappableProxy<SafeEventEmitterProvider>(communicationProvider);\n    }\n  }\n}\n","import { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCRequest, JRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { COMMUNICATION_JRPC_METHODS } from \"../enums\";\n\nclass CommunicationWindowManager extends SafeEventEmitter {\n  handleWindowRpc = (\n    request: JRPCRequest<{ windowId: string }>,\n    response: JRPCResponse<boolean>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ): void => {\n    const { method, params } = request;\n    if (method === COMMUNICATION_JRPC_METHODS.OPENED_WINDOW) {\n      const { windowId } = params;\n      // I've been informed that a window has been opened\n      this.emit(`${windowId}:opened`);\n      response.result = true;\n      end();\n    } else if (method === COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW) {\n      const { windowId } = params;\n      // I've been informed that a window has been closed\n      this.emit(`${windowId}:closed`);\n      response.result = true;\n      end();\n    } else {\n      next();\n    }\n  };\n}\n\nexport default CommunicationWindowManager;\n","import type { EventEmitter } from \"events\";\n\nimport { THEME } from \"./Preferences/IPreferencesController\";\n\n/**\n * State change callbacks\n */\nexport type Listener<T> = (state: T) => void;\n\n/**\n * Base controller configuration\n */\nexport interface BaseConfig {\n  /**\n   *  Determines if this controller is enabled\n   */\n  disabled?: boolean;\n}\n\n/**\n * Base state representation\n */\nexport interface BaseState {\n  /**\n   * Unique name for this controller\n   */\n  name?: string;\n}\n\nexport interface IController<C, S> {\n  defaultConfig: C;\n\n  defaultState: S;\n\n  name: string;\n\n  get state(): S;\n\n  get config(): C;\n\n  update(state: Partial<S>, overwrite?: boolean): void;\n\n  configure(config: Partial<C>, overwrite?: boolean, fullUpdate?: boolean): void;\n}\n\nexport type generic<T> = () => T;\n\nexport type EmailObject = {\n  link: string;\n  from_name: string;\n  to_email: string;\n  total_amount: string;\n  token: string;\n  currency: string;\n  currency_amount: number;\n};\n\nexport interface IWindow {\n  closed: boolean;\n  open(): IWindow | Promise<IWindow>;\n  close(): void;\n}\n\nexport interface IStreamWindow extends IWindow, EventEmitter {}\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n};\n/**\n * {@label loginProviderType}\n */\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * aggregate verifier of the logged in user (google, facebook etc)\n   */\n  aggregateVerifier?: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n\n  typeOfLogin: LOGIN_PROVIDER_TYPE;\n\n  dappShare?: string;\n  /**\n   * Token issued by Web3Auth.\n   */\n  idToken?: string;\n  /**\n   * Token issued by OAuth provider. Will be available only if you are using\n   * custom verifiers.\n   */\n  oAuthIdToken?: string;\n  /**\n   * Access Token issued by OAuth provider. Will be available only if you are using\n   * custom verifiers.\n   */\n  oAuthAccessToken?: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Amount Cryptocurrency to buy\n   */\n  cryptoAmount?: number;\n}\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type InPageWalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n};\n\nexport type CommunicationWalletProviderState = {\n  isLoggedIn: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n};\n\nexport interface PopupWhitelabelData {\n  theme: THEME;\n}\n","import { ACTIVITY_STATUS_CANCELLED, ACTIVITY_STATUS_PENDING, ACTIVITY_STATUS_SUCCESSFUL, ACTIVITY_STATUS_UNSUCCESSFUL } from \"../enums\";\nimport { TransactionStatus } from \"../Transaction/ITransactionController\";\n\nexport const getTxStatusText = (txStatus: TransactionStatus): string => {\n  switch (txStatus) {\n    case \"rejected\":\n    case \"unapproved\":\n    case \"failed\":\n      return ACTIVITY_STATUS_UNSUCCESSFUL;\n    case \"confirmed\":\n      return ACTIVITY_STATUS_SUCCESSFUL;\n    case \"submitted\":\n      return ACTIVITY_STATUS_PENDING;\n    case \"cancelled\":\n      return ACTIVITY_STATUS_CANCELLED;\n    default:\n      return \"\";\n  }\n};\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, bufferToInt, ecsign, fromSigned, hashPersonalMessage, intToBuffer, stripHexPrefix, toUnsigned } from \"ethereumjs-util\";\n\nimport { TransactionMeta } from \"../Transaction/ITransactionController\";\n\n/**\n * General utility functions\n */\n\nexport function intToHex(i: number): string {\n  const hex = i.toString(16);\n  return `0x${hex}`;\n}\n\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\nexport const randomId = (): string => Math.random().toString(36).slice(2);\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== \"\" && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n  }\n\n  if (targetLength < 0) {\n    throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString(\"hex\"), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString(\"hex\"), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\nexport function timeout(duration: number): Promise<void> {\n  return new Promise((resolve) => {\n    const timeoutRef = window.setTimeout(() => {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\n\nexport const getHeaders = (jwt: string) => {\n  return {\n    headers: {\n      Authorization: `Bearer ${jwt}`,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n};\n\n/**\n * Text/number formatting utilities\n */\nexport const formatSmallNumbers = (number: number, currency = \"usd\", noTilde = false): string => {\n  const finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  const value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  const tilde = value > 0 ? \"~ \" : \"\";\n  return `${currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde}${Number(value)} ${currency.toUpperCase()}`;\n};\n\nexport const addressSlicer = (address: string, sliceLength = 5): string => {\n  if (address.length < 11) {\n    return address;\n  }\n  if (typeof address !== \"string\") return \"\";\n  return `${address.slice(0, sliceLength)}...${address.slice(-sliceLength)}`;\n};\n\nexport const significantDigits = (number: number | BigNumber, perc = false, length_ = 2): number | BigNumber => {\n  let input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n  let depth;\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n  const shift = new BigNumber(10).pow(new BigNumber(depth));\n  const roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\nexport const formatDate = (inputDate: string): string => {\n  const monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const date = new Date(inputDate);\n  const day = date.getDate();\n  const month = monthList[date.getMonth()];\n  const year = date.getFullYear();\n  return `${day} ${month} ${year}`;\n};\n\nexport const formatTime = (time: string): string => {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n\n/**\n * Network utilities\n */\nexport const transactionMatchesNetwork = <T>(transaction: TransactionMeta<T>, chainId: string): boolean => {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n  return false;\n};\n\n/**\n * Signing utils\n */\nexport const hashMessage = (message: string): Buffer => {\n  const bufferedMessage = Buffer.from(message, \"utf8\");\n  const el = hashPersonalMessage(bufferedMessage);\n  return el;\n};\n\nexport const signMessage = (privateKey: string, data: string): string => {\n  const privKey = Buffer.from(privateKey, \"hex\");\n  const message = stripHexPrefix(data);\n  const msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  const rawMsgSig = concatSig(intToBuffer(msgSig.v), msgSig.r, msgSig.s);\n  return rawMsgSig;\n};\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\n\nexport function getCustomDeviceInfo(): Record<string, string> | undefined {\n  if ((navigator as any)?.brave) {\n    return {\n      browser: \"Brave\",\n    };\n  }\n}\nexport class UserError extends Error {}\n\nexport const handleRedirectParameters = (\n  hash: string,\n  queryParameters: Record<string, string>\n): { error: string; instanceParameters: Record<string, string>; hashParameters: Record<string, string> } => {\n  const hashParameters: Record<string, string> = {};\n  const hashUrl = new URL(`${window.location.origin}/?${hash.slice(1)}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    hashParameters[key] = value;\n  });\n  let instanceParameters = {};\n  let error = \"\";\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n  return { error, instanceParameters, hashParameters };\n};\n\nexport function sleep<T>(ms: number): Promise<T> {\n  return new Promise<T>((resolve) => setTimeout(resolve, ms));\n}\n","import BaseController from \"../BaseController\";\nimport { BaseConfig } from \"../interfaces\";\nimport { hashMessage, signMessage } from \"../utils\";\nimport { KeyringControllerState } from \"./IKeyringController\";\nexport class BaseKeyringController<C extends BaseConfig, S extends KeyringControllerState> extends BaseController<C, S> {\n  constructor({ config = {}, state }: { config: Partial<C>; state?: Partial<S> }) {\n    super({ config, state });\n    this.defaultState = {\n      wallets: state.wallets ?? [],\n    } as S;\n    this.initialize();\n  }\n\n  // for signing auth message\n  signAuthMessage(address: string, message: string): string {\n    const keyring = this.state.wallets.find((x) => x.address === address);\n    if (!keyring) {\n      throw new Error(\"key does not exist\");\n    }\n    const hashedMessage = hashMessage(message).toString(\"hex\");\n    const rawMessageSig = signMessage(keyring.privateKey, hashedMessage);\n    return rawMessageSig;\n  }\n}\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { Block, Payload } from \"./INetworkController\";\n\nexport interface FetchMiddlewareOptions {\n  rpcTarget: string;\n  originHttpHeaderKey?: string;\n}\n\nexport interface PayloadwithOrgin extends Payload {\n  origin?: string;\n}\nexport interface FetchMiddlewareFromReqOptions extends FetchMiddlewareOptions {\n  req: PayloadwithOrgin;\n}\n\nexport interface FetchConfig {\n  fetchUrl: string;\n  fetchParams: Record<string, unknown>;\n}\n\nconst RETRIABLE_ERRORS: string[] = [\n  // ignore server overload errors\n  \"Gateway timeout\",\n  \"ETIMEDOUT\",\n  // ignore server sent html error pages\n  // or truncated json responses\n  \"failed to parse response body\",\n  // ignore errors where http req failed to establish\n  \"Failed to fetch\",\n];\n\nfunction checkForHttpErrors(fetchRes: Response): void {\n  // check for errors\n  switch (fetchRes.status) {\n    case 405:\n      throw ethErrors.rpc.methodNotFound();\n\n    case 418:\n      throw ethErrors.rpc.internal({ message: `Request is being rate limited.` });\n\n    case 503:\n    case 504:\n      throw ethErrors.rpc.internal({\n        message: `Gateway timeout. The request took too long to process.` + `This can happen when querying over too wide a block range.`,\n      });\n\n    default:\n      break;\n  }\n}\n\nfunction timeout(duration: number): Promise<number> {\n  return new Promise((resolve) => setTimeout(resolve, duration));\n}\n\nfunction parseResponse(fetchRes: Response, body: Record<string, Block>): Block {\n  // check for error code\n  if (fetchRes.status !== 200) {\n    throw ethErrors.rpc.internal({\n      message: `Non-200 status code: '${fetchRes.status}'`,\n      data: body,\n    });\n  }\n  // check for rpc error\n  if (body.error) {\n    throw ethErrors.rpc.internal({\n      data: body.error,\n    });\n  }\n  // return successful result\n  return body.result;\n}\n\nexport function createFetchConfigFromReq({ req, rpcTarget, originHttpHeaderKey }: FetchMiddlewareFromReqOptions): FetchConfig {\n  const parsedUrl: URL = new URL(rpcTarget);\n\n  // prepare payload\n  // copy only canonical json rpc properties\n  const payload: Payload = {\n    id: req.id,\n    jsonrpc: req.jsonrpc,\n    method: req.method,\n    params: req.params,\n  };\n\n  // extract 'origin' parameter from request\n  const originDomain: string | undefined = req.origin;\n\n  // serialize request body\n  const serializedPayload: string = JSON.stringify(payload);\n\n  // configure fetch params\n  const fetchParams = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: serializedPayload,\n  };\n\n  // optional: add request origin as header\n  if (originHttpHeaderKey && originDomain) {\n    fetchParams.headers[originHttpHeaderKey] = originDomain;\n  }\n\n  return { fetchUrl: parsedUrl.href, fetchParams };\n}\n\nexport function createFetchMiddleware({ rpcTarget, originHttpHeaderKey }: FetchMiddlewareOptions): JRPCMiddleware<string[], Block> {\n  return createAsyncMiddleware(async (req: JRPCRequest<string[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const { fetchUrl, fetchParams } = createFetchConfigFromReq({\n      req,\n      rpcTarget,\n      originHttpHeaderKey,\n    });\n\n    // attempt request multiple times\n    const maxAttempts = 5;\n    const retryInterval = 1000;\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      try {\n        const fetchRes: Response = await fetch(fetchUrl, fetchParams);\n        // check for http errrors\n        checkForHttpErrors(fetchRes);\n        // parse response body\n        const fetchBody: Record<string, Block> = await fetchRes.json();\n        const result: Block = parseResponse(fetchRes, fetchBody);\n        // set result and exit retry loop\n        res.result = result;\n        return;\n      } catch (err) {\n        const errMsg: string = err.toString();\n        const isRetriable: boolean = RETRIABLE_ERRORS.some((phrase) => errMsg.includes(phrase));\n        // re-throw error if not retriable\n        if (!isRetriable) {\n          throw err;\n        }\n      }\n      // delay before retrying\n      await timeout(retryInterval);\n    }\n  });\n}\n","import { JRPCEngineNextCallback, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport log from \"loglevel\";\n\nexport interface LoggerMiddlewareOptions {\n  origin: string;\n}\n\nexport function createLoggerMiddleware(options: LoggerMiddlewareOptions) {\n  return function loggerMiddleware(request: JRPCRequest<unknown>, response: JRPCResponse<unknown>, next: JRPCEngineNextCallback): void {\n    next((callback) => {\n      if (response.error) {\n        log.warn(\"Error in RPC response:\\n\", response);\n      }\n      if ((request as unknown as { isTorusInternal: boolean }).isTorusInternal) return;\n      log.info(`RPC (${options.origin}):`, request, \"->\", response);\n      callback();\n    });\n  };\n}\n","import { JRPCEngineNextCallback, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface OriginMiddlewareOptions {\n  origin: string;\n}\nexport function createOriginMiddleware(options: OriginMiddlewareOptions) {\n  return function originMiddleware(request: JRPCRequest<unknown>, _: JRPCResponse<unknown>, next: JRPCEngineNextCallback): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (request as any).origin = options.origin;\n    next();\n  };\n}\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\n\nimport { POPUP_LOADED } from \"../enums\";\nimport { broadcastChannelOptions } from \"../utils\";\nimport { PopupData } from \"./interfaces\";\n\nexport default class BroadcastChannelHandler {\n  public bc: BroadcastChannel<PopupData<unknown>>;\n\n  private channel: string;\n\n  constructor(channelPrefix: string) {\n    const queryParameters = new URLSearchParams(window.location.search);\n    const instanceId = queryParameters.get(\"instanceId\");\n    this.channel = `${channelPrefix}_${instanceId}`;\n    this.bc = new BroadcastChannel(this.channel, broadcastChannelOptions);\n  }\n\n  public getMessageFromChannel<T>(): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.bc.addEventListener(\"message\", async (ev) => {\n        this.bc.close();\n        if (ev.error) {\n          reject(ev.error);\n        } else {\n          resolve(ev.data as T);\n        }\n      });\n      this.bc.postMessage({ data: { type: POPUP_LOADED } });\n    });\n  }\n}\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\nimport log from \"loglevel\";\n\nimport BaseController from \"../BaseController\";\nimport { COMMUNICATION_NOTIFICATIONS, POPUP_LOADED, SETUP_COMPLETE } from \"../enums\";\nimport { IWindow } from \"../interfaces\";\nimport { broadcastChannelOptions, randomId, sleep } from \"../utils\";\nimport { PopupData, StreamWindowConfig, StreamWindowState } from \"./interfaces\";\n\nclass StreamWindow extends BaseController<StreamWindowConfig, StreamWindowState> implements IWindow {\n  // if window has been closed by users\n  closed = false;\n\n  constructor({\n    config,\n    state = {},\n  }: {\n    config: Partial<StreamWindowConfig> & Pick<StreamWindowConfig, \"communicationEngine\" | \"communicationWindowManager\">;\n    state?: Partial<StreamWindowState>;\n  }) {\n    super({ config, state });\n    this.initialize();\n  }\n\n  async open(): Promise<this> {\n    return new Promise((resolve, reject) => {\n      const { communicationEngine, communicationWindowManager } = this.config;\n      let popupSuccess = false;\n\n      communicationWindowManager.once(`${this.state.windowId}:closed`, () => {\n        this.closed = true;\n      });\n\n      // Window is not open yet\n      if (!this.state.windowId) {\n        this.update({ windowId: randomId() });\n\n        communicationWindowManager.once(`${this.state.windowId}:opened`, () => {\n          resolve(this);\n        });\n\n        // Tell the other party to create a window by prompting the user to click on something\n        communicationEngine.emit(\"notification\", {\n          method: COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW,\n          params: {\n            windowId: this.state.windowId,\n            url: this.state.url.href,\n          },\n        });\n      } else {\n        // Send this window with `windowId` the url to open via bc\n        const bc = new BroadcastChannel<PopupData<{ message: string }>>(this.state.windowId, broadcastChannelOptions);\n\n        bc.addEventListener(\"message\", async (ev) => {\n          try {\n            log.info(ev, `receiving data on channel: ${bc.name}`);\n            const { error } = ev;\n            if (error) {\n              // Popup says some error. so, we say it's not really opened\n              reject(new Error(error));\n              return;\n            }\n            const { message } = ev.data;\n            if (message === POPUP_LOADED) {\n              popupSuccess = true;\n              await bc.postMessage({\n                data: {\n                  url: this.state.url.href,\n                  message: \"\", // No need of a msg\n                },\n              } as PopupData<{ message: string }>);\n              resolve(this);\n              bc.close();\n            }\n          } catch (error) {\n            reject(error);\n            bc.close();\n            // Something went wrong. so, we close that window\n            this.close();\n          }\n        });\n\n        // We don't know if the other end is ready to receive this msg. So, we keep writing until it receives and sends back something\n        // we need backoff strategy\n        // we need to wait for first attempt to succeed/fail until the second attempt\n        // If we get 429, we need to wait for a while and then try again\n\n        const postMsg = async () => {\n          // this never throws\n          const localResponse = await bc.postMessage({\n            data: {\n              message: SETUP_COMPLETE,\n            },\n          } as PopupData<{ message: string }>);\n          return localResponse;\n        };\n\n        let currentDelay = bc.type === \"server\" ? 1000 : 200;\n\n        const recursiveFn = async (): Promise<void> => {\n          if (!popupSuccess && !this.closed) {\n            const localResponse = await postMsg();\n            if (bc.type === \"server\") {\n              const serverResponse = localResponse as unknown as Response;\n              if (serverResponse.status >= 400) {\n                // We need to wait for a while and then try again\n                currentDelay = Math.round(currentDelay * 1.5);\n              }\n            }\n            await sleep<void>(currentDelay);\n            await recursiveFn();\n          }\n        };\n        recursiveFn();\n      }\n    });\n  }\n\n  close(): void {\n    const { communicationEngine } = this.config;\n    communicationEngine.emit(\"notification\", {\n      method: COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW,\n      params: {\n        windowId: this.state.windowId,\n      },\n    });\n  }\n}\n\nexport default StreamWindow;\n","import BaseController from \"../BaseController\";\nimport { FEATURES_DEFAULT_POPUP_WINDOW } from \"../enums\";\nimport { IWindow } from \"../interfaces\";\nimport { getPopupFeatures } from \"../utils\";\nimport { PopupHandlerConfig, PopupHandlerState } from \"./interfaces\";\nimport StreamWindow from \"./StreamWindow\";\n/*\nScenarios:\n1. Open a normal popup window and no communication with it - Use PopupHandler\n2. Open a popup window and communicate with it - Use PopupWithBcHandler (can initiate communication by waiting for window to open or not)\n\n3. If window is already opened, pass in windowId to the popup handler. \n   This will establish communication with the popup window and sends it a new url to redirect to\n\n\nIf you're trying to open a window and it gets blocked (happens if you're in iframe or delay b/w click and opening window),\nStreamWindow is invoked and it writes in a channel to display a message to the user\n\nOnce user clicks on that modal/dialog, we pre-open the window and pass in the windowId (goes to 3)\n*/\n\n/**\n * Handles popup window management.\n * For broadcast channel communication, use url with `instanceId` coded into state parameter.\n * This state parameter will be passed across redirects according to OAuth spec.\n */\nclass PopupHandler extends BaseController<PopupHandlerConfig, PopupHandlerState> {\n  constructor({ config, state }: { config: Partial<PopupHandlerConfig>; state: Partial<PopupHandlerState> & Pick<PopupHandlerState, \"url\"> }) {\n    super({ config, state });\n    // this.id = randomId()\n    // Add in dapp storage key to all popups as a hash parameter\n    this.defaultConfig = {\n      dappStorageKey: \"\",\n      features: getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW),\n      target: \"_blank\",\n      communicationEngine: null,\n      communicationWindowManager: null,\n    };\n    this.defaultState = {\n      windowTimer: null,\n      window: null,\n      iClosedWindow: false,\n      windowId: \"\",\n      url: state.url,\n    };\n    this.initialize();\n    this._setupTimer();\n  }\n\n  async open(): Promise<void> {\n    // if window is already open\n    const { target, features, dappStorageKey, communicationEngine, communicationWindowManager } = this.config;\n    const { windowId, url } = this.state;\n    if (dappStorageKey) {\n      const urlHashParams = new URLSearchParams(url.hash.slice(1));\n      urlHashParams.append(\"dappStorageKey\", dappStorageKey);\n      url.hash = urlHashParams.toString();\n      this.update({ url });\n    }\n    // No window has been pre-opened\n    if (!windowId) {\n      // try to open a window first\n      let localWindow: IWindow = window.open(url.href, target, features);\n      if (!localWindow) {\n        // if it's blocked, open StreamWindow\n        localWindow = new StreamWindow({ config: { communicationEngine, communicationWindowManager }, state: { url } });\n        localWindow.open();\n      }\n      this.update({ window: localWindow });\n      return;\n    }\n    // A window has been pre-opened with a query parameter `windowId`\n    const localWindow = new StreamWindow({ config: { communicationEngine, communicationWindowManager }, state: { url, windowId } });\n    this.update({ window: localWindow });\n    await localWindow.open();\n  }\n\n  close(): void {\n    this.update({ iClosedWindow: true });\n    const { window } = this.state;\n    if (window) window.close();\n  }\n\n  private _setupTimer(): void {\n    const timer = window.setInterval(() => {\n      const { window, windowTimer, iClosedWindow } = this.state;\n      if (window && window.closed) {\n        if (windowTimer) clearInterval(windowTimer);\n        if (!iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.update({ iClosedWindow: false, window: null });\n      }\n      if (window === null && windowTimer) clearInterval(windowTimer);\n    }, 500);\n    this.update({ windowTimer: timer });\n  }\n}\n\nexport default PopupHandler;\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\nimport log from \"loglevel\";\n\nimport { BROADCAST_CHANNELS, BROADCAST_CHANNELS_MSGS } from \"../enums\";\nimport { broadcastChannelOptions } from \"../utils\";\nimport {\n  AccountImportedChannelData,\n  BasePopupChannelData,\n  NetworkChangeChannelData,\n  PopupData,\n  PopupStoreChannelHandlers,\n  SelectedAddresssChangeChannelData,\n  ThemeChannelData,\n} from \"./interfaces\";\n\nexport default class PopupStoreChannel {\n  private handleLogout: PopupStoreChannelHandlers[\"handleLogout\"];\n\n  private handleAccountImport: PopupStoreChannelHandlers[\"handleAccountImport\"];\n\n  private handleNetworkChange: PopupStoreChannelHandlers[\"handleNetworkChange\"];\n\n  private handleThemeChange: PopupStoreChannelHandlers[\"handleThemeChange\"];\n\n  private handleSelectedAddressChange: PopupStoreChannelHandlers[\"handleSelectedAddressChange\"];\n\n  private instanceId: string;\n\n  constructor({\n    instanceId,\n    handleLogout,\n    handleAccountImport,\n    handleNetworkChange,\n    handleSelectedAddressChange,\n    handleThemeChange,\n  }: {\n    instanceId: string;\n    handleLogout: PopupStoreChannelHandlers[\"handleLogout\"];\n    handleAccountImport: PopupStoreChannelHandlers[\"handleAccountImport\"];\n    handleNetworkChange: PopupStoreChannelHandlers[\"handleNetworkChange\"];\n    handleSelectedAddressChange: PopupStoreChannelHandlers[\"handleSelectedAddressChange\"];\n    handleThemeChange: PopupStoreChannelHandlers[\"handleThemeChange\"];\n  }) {\n    this.instanceId = instanceId;\n    this.handleLogout = handleLogout;\n    this.handleAccountImport = handleAccountImport;\n    this.handleNetworkChange = handleNetworkChange;\n    this.handleSelectedAddressChange = handleSelectedAddressChange;\n    this.handleThemeChange = handleThemeChange;\n  }\n\n  public setupStoreChannels(): void {\n    this.logoutChannel();\n    this.importAccountChannel();\n    this.networkChangeChannel();\n    this.selectedAddressChangeChannel();\n    this.themeChangedChannel();\n  }\n\n  private logoutChannel(): void {\n    const logoutChannel = new BroadcastChannel<PopupData<BasePopupChannelData>>(\n      `${BROADCAST_CHANNELS.WALLET_LOGOUT_CHANNEL}_${this.instanceId}`,\n      broadcastChannelOptions\n    );\n    logoutChannel.addEventListener(\"message\", (ev) => {\n      log.info(\"received logout message\", ev);\n      if (!ev.error && ev.data?.type === BROADCAST_CHANNELS_MSGS.LOGOUT) {\n        log.info(\"Logging Out\");\n        this.handleLogout();\n      }\n    });\n  }\n\n  private importAccountChannel(): void {\n    const walletAccountImportChannel = new BroadcastChannel<PopupData<AccountImportedChannelData>>(\n      `${BROADCAST_CHANNELS.WALLET_ACCOUNT_IMPORT_CHANNEL}_${this.instanceId}`,\n      broadcastChannelOptions\n    );\n    walletAccountImportChannel.addEventListener(\"message\", (ev) => {\n      if (!ev.error && ev.data?.type === BROADCAST_CHANNELS_MSGS.ACCOUNT_IMPORTED) {\n        this.handleAccountImport(ev.data?.privKey);\n      }\n    });\n  }\n\n  private networkChangeChannel(): void {\n    const walletAccountImportChannel = new BroadcastChannel<PopupData<NetworkChangeChannelData>>(\n      `${BROADCAST_CHANNELS.WALLET_NETWORK_CHANGE_CHANNEL}_${this.instanceId}`,\n      broadcastChannelOptions\n    );\n    walletAccountImportChannel.addEventListener(\"message\", (ev) => {\n      if (!ev.error && ev.data?.type === BROADCAST_CHANNELS_MSGS.NETWORK_CHANGE) {\n        this.handleNetworkChange(ev.data?.network);\n      }\n    });\n  }\n\n  private themeChangedChannel(): void {\n    const walletAccountImportChannel = new BroadcastChannel<PopupData<ThemeChannelData>>(\n      `${BROADCAST_CHANNELS.THEME_CHANGE}_${this.instanceId}`,\n      broadcastChannelOptions\n    );\n    walletAccountImportChannel.addEventListener(\"message\", (ev) => {\n      log.info({ ev });\n      if (!ev.error && ev.data?.type === BROADCAST_CHANNELS_MSGS.SET_THEME) {\n        this.handleThemeChange(ev.data?.theme);\n      }\n    });\n  }\n\n  private selectedAddressChangeChannel(): void {\n    const walletAccountImportChannel = new BroadcastChannel<PopupData<SelectedAddresssChangeChannelData>>(\n      `${BROADCAST_CHANNELS.WALLET_SELECTED_ADDRESS_CHANNEL}_${this.instanceId}`,\n      broadcastChannelOptions\n    );\n    walletAccountImportChannel.addEventListener(\"message\", (ev) => {\n      if (!ev.error && ev.data?.type === BROADCAST_CHANNELS_MSGS.SELECTED_ADDRESS_CHANGE) {\n        this.handleSelectedAddressChange(ev.data?.selectedAddress);\n      }\n    });\n  }\n}\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\nimport log from \"loglevel\";\n\nimport { POPUP_LOADED, POPUP_RESULT } from \"../enums\";\nimport { broadcastChannelOptions, UserError } from \"../utils\";\nimport { PopupData, PopupHandlerConfig, PopupHandlerState, SuccessExtraFn } from \"./interfaces\";\nimport PopupHandler from \"./PopupHandler\";\n/**\n * PopupWithBcHandler is a PopupHandler which uses broadcast channel to communicate with the popup window.\n */\nclass PopupWithBcHandler<ReceiveData, SendData = unknown> extends PopupHandler {\n  bc: BroadcastChannel<PopupData<ReceiveData>>;\n\n  constructor({\n    config,\n    state,\n    instanceId,\n  }: {\n    config: Partial<PopupHandlerConfig>;\n    state: Partial<PopupHandlerState> & Pick<PopupHandlerState, \"url\">;\n    instanceId: string;\n  }) {\n    super({ config, state });\n    this.bc = new BroadcastChannel(instanceId, broadcastChannelOptions);\n  }\n\n  /**\n   * Receives the data from popup window and closes the window\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n  handle(successExtraFn?: SuccessExtraFn<ReceiveData>): Promise<ReceiveData> {\n    return new Promise((resolve, reject) => {\n      const closeListener = () => {\n        this.bc.close();\n        reject(new UserError(\"user closed popup\"));\n        this.removeListener(\"close\", closeListener);\n      };\n      this.on(\"close\", closeListener);\n\n      this.bc.addEventListener(\"message\", async (ev) => {\n        log.info(ev, `receiving data on channel: ${this.bc.name}`);\n        try {\n          const { error, data } = ev;\n          if (error) {\n            reject(new Error(error));\n            return;\n          }\n          if (successExtraFn) await successExtraFn.call(this, data);\n          resolve(data);\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.bc.close();\n          this.close();\n        }\n      });\n      this.open()\n        .then(() => {\n          log.info(`opened window ${this.bc.name}`);\n          // Opened window. yay.  let the bc events do their job\n          return undefined;\n        })\n        .catch((err) => {\n          log.error(err, \"something went wrong while opening window\");\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Use this if we have to send large payloads which don't fit in query/hash params.\n   * Waits for ack that popup window is ready to receive data.\n   * Receives the data from popup window and closes the window\n   * @param payload - The data to be sent to the popup window once we have ack that window is ready to receive data\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n  handleWithHandshake(payload: SendData, successExtraFn?: SuccessExtraFn<ReceiveData>): Promise<ReceiveData> {\n    return new Promise((resolve, reject) => {\n      const closeListener = () => {\n        this.bc.close();\n        reject(new UserError(\"user closed popup\"));\n        this.removeListener(\"close\", closeListener);\n      };\n      this.on(\"close\", closeListener);\n      this.bc.addEventListener(\"message\", async (ev) => {\n        try {\n          log.info(ev, `receiving data on channel: ${this.bc.name}`);\n          const { error, data } = ev;\n          if (error) {\n            reject(new Error(error));\n            return;\n          }\n          // Do handshake\n          const { type = \"\" } = data as { type?: string };\n          if (type === POPUP_LOADED) {\n            // Hack with generic to use the same type for both send and receive\n            await this.bc.postMessage({\n              data: payload,\n            } as unknown as PopupData<ReceiveData>);\n          } else if (type === POPUP_RESULT) {\n            if (successExtraFn) await successExtraFn.call(this, data);\n            resolve(data);\n            // Must only close the bc after result is done\n            this.bc.close();\n            this.close();\n          }\n        } catch (error) {\n          reject(error);\n          this.bc.close();\n          this.close();\n        }\n      });\n      this.open()\n        .then(() => {\n          log.info(`opened window ${this.bc.name}`);\n          // Opened window. yay.  let the bc events do their job\n          return undefined;\n        })\n        .catch((err) => {\n          log.error(err, \"something went wrong while opening window\");\n          reject(err);\n        });\n    });\n  }\n}\nexport default PopupWithBcHandler;\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\nimport log from \"loglevel\";\n\nimport { BROADCAST_CHANNELS, POPUP_LOADED, SETUP_COMPLETE } from \"../enums\";\nimport { PopupData } from \"../Popup\";\nimport { broadcastChannelOptions, handleRedirectParameters } from \"../utils/utils\";\n\nexport default class RedirectHandler {\n  private error: string;\n\n  private finalQueryParams: Record<string, string> = {};\n\n  private instanceParameters: Record<string, string>;\n\n  private hashParameters: Record<string, string>;\n\n  constructor() {\n    const { hash } = window.location;\n    const queryParameters = new URLSearchParams(window.location.search);\n    queryParameters.forEach((value, key) => {\n      this.finalQueryParams[key] = value;\n    });\n    const { error, instanceParameters, hashParameters } = handleRedirectParameters(hash, this.finalQueryParams);\n    this.error = error;\n    this.instanceParameters = instanceParameters;\n    this.hashParameters = hashParameters;\n  }\n\n  public async handle(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const { finalQueryParams, instanceParameters, hashParameters, error } = this;\n      let bc: BroadcastChannel<PopupData<unknown>>;\n      try {\n        if (!finalQueryParams.windowId) {\n          bc = new BroadcastChannel(`${BROADCAST_CHANNELS.REDIRECT_CHANNEL}_${instanceParameters.instanceId}`, broadcastChannelOptions);\n          bc.addEventListener(\"message\", async (ev) => {\n            if (ev.error) {\n              reject(ev.error);\n              window.close();\n            } else {\n              resolve();\n              bc.close();\n              log.info(\"posted\", { finalQueryParams, hashParameters, instanceParameters });\n            }\n          });\n          bc.postMessage({\n            data: {\n              instanceParams: instanceParameters,\n              hashParams: hashParameters,\n              queryParams: finalQueryParams,\n            },\n            error,\n          });\n\n          setTimeout(() => {\n            resolve();\n            window.location.href = window.location.origin + window.location.search + window.location.hash;\n          }, 5000);\n        } else {\n          bc = new BroadcastChannel(`${finalQueryParams.windowId}`, broadcastChannelOptions);\n          bc.addEventListener(\"message\", async (ev) => {\n            const { url, message } = ev.data as { url: string; message: string };\n            if (url) {\n              resolve();\n              window.location.href = url;\n            } else if (message === SETUP_COMPLETE) {\n              await bc.postMessage({\n                data: {\n                  windowId: finalQueryParams.windowId,\n                  message: POPUP_LOADED,\n                },\n              });\n            }\n            if (ev.error && ev.error !== \"\") {\n              log.error(ev.error);\n              resolve();\n              bc.close();\n            }\n          });\n        }\n      } catch (err: unknown) {\n        log.info(err as Error, \"something went wrong\");\n        reject(err);\n        if (bc) bc.close();\n        window.close();\n      }\n    });\n  }\n}\n","import { BaseConfig, BaseState, IController, UserInfo } from \"../interfaces\";\n\nexport const ACTIVITY_ACTION = {\n  ACTIVITY_ACTION_ALL: \"walletActivity.allTransactions\",\n  ACTIVITY_ACTION_SEND: \"walletActivity.send\",\n  ACTIVITY_ACTION_RECEIVE: \"walletActivity.receive\",\n  ACTIVITY_ACTION_TOPUP: \"walletActivity.topup\",\n};\n\nexport type ACTIVITY_ACTION_TYPE = typeof ACTIVITY_ACTION[keyof typeof ACTIVITY_ACTION];\n\nexport const ACCOUNT_CATEGORY = {\n  NORMAL: \"normal\",\n  THRESHOLD: \"threshold\",\n  IMPORTED: \"imported\",\n};\n\nexport type ACCOUNT_TYPE = typeof ACCOUNT_CATEGORY[keyof typeof ACCOUNT_CATEGORY];\n\nexport type THEME = \"light\" | \"dark\";\n\nexport type CustomNft = {\n  id: number;\n  created_at: string;\n  nft_address: string;\n  public_address: string;\n  network: string;\n  nft_contract_standard: string;\n  nft_id: string;\n};\n\nexport type CustomToken = {\n  id: number;\n  created_at: string;\n  token_address: string;\n  public_address: string;\n  network: string;\n  token_symbol: string;\n  token_name: string;\n  decimals: string;\n};\n\nexport type UserVerifierInfo = {\n  verifier: string;\n  verifierId: string;\n};\n\nexport type PaymentTransaction = {\n  id: string;\n  date: string;\n  from: string;\n  slicedFrom: string;\n  action: string;\n  to: string;\n  slicedTo: string;\n  totalAmount: number;\n  totalAmountString: string;\n  currencyAmount: number;\n  currencyAmountString: string;\n  amount: number;\n  ethRate: number;\n  status: string;\n  blockExplorerLink: string;\n  currencyUsed: string;\n};\n\nexport interface RecordLoginPayload {\n  browser: string;\n  os: string;\n  os_version: string;\n  browser_version: string;\n  platform: string;\n  hostname: string;\n  verifier: string;\n  verifier_id: string;\n  metadata?: string;\n  idToken?: string;\n}\n\nexport interface UserPayload {\n  verifier: string;\n  verifier_id: string;\n  theme: string;\n  locale: string;\n  default_currency: string;\n  idToken?: string; // verified by openlogin\n}\nexport interface ContactPayload {\n  contact_verifier: string; // This is the verifier of the contact\n  contact_verifier_id: string; // This is the verifier id of the contact\n  display_name: string;\n}\n\nexport type Contact = {\n  id: number;\n  created_at: string;\n  updated_at: string;\n  contact_verifier: string;\n  contact_verifier_id: string;\n  display_name: string;\n  public_address: string;\n};\n\nexport interface AddressPreferences {\n  selectedCurrency: string;\n  theme: THEME;\n  locale: string;\n  accountType: ACCOUNT_TYPE;\n  contacts: Contact[];\n  crashReport: boolean;\n  userInfo: UserInfo;\n  jwtToken?: string;\n  paymentTx?: PaymentTransaction[];\n  defaultPublicAddress?: string;\n  customTokens?: CustomToken[];\n  customNfts?: CustomNft[];\n}\n\nexport interface User {\n  id: number;\n  public_address: string;\n  default_currency: string;\n  created_at: string;\n  theme: THEME;\n  locale: string;\n  verifier: string;\n  verifier_id: string;\n  account_type: string;\n  default_public_address: string;\n  contacts?: Contact[];\n  customTokens?: CustomToken[];\n  customNfts?: CustomNft[];\n}\n\nexport interface BillboardEvent {\n  eventName: string;\n  imageUrl: string;\n  imageDarkUrl: string;\n  description: string;\n  callToActionLinkTwo: string;\n  callToActionLink: string;\n  callToActionText: string;\n  locale: string;\n}\n\n/**\n * Preferences controller state\n */\nexport interface PreferencesState<P> extends BaseState {\n  /**\n   * Map of addresses to ContactEntry objects\n   */\n  identities: { [address: string]: P };\n  /**\n   * Current coinbase account\n   */\n  selectedAddress: string;\n\n  lastErrorMessage?: string;\n\n  lastSuccessMessage?: string;\n}\n\nexport interface PreferencesConfig extends BaseConfig {\n  pollInterval?: number;\n  api: string;\n  commonApiHost: string;\n  signInPrefix: string;\n}\n\ninterface DappUrl {\n  url: string;\n}\n\nexport interface DiscoverDapp {\n  logo: DappUrl[];\n  title: string;\n  category: string;\n  desc: string;\n  network: string;\n  url: string;\n}\n\nexport interface IPreferencesController<P, C, S> extends IController<C, S> {\n  /**\n   * Init will sync the preferences of specified address with backend and also add the identity in state\n   * the store.\n   * @param address - address of the user\n   * @param jwtToken - if jwt token already exists, it will be used instead of fetching from backend\n   * @param calledFromEmbed - if called from embed\n   * @param userInfo - optional user info\n   * @param rehydrate - Rehydrate the preferences from the local storage\n   *\n   */\n  initPreferences(params: {\n    address: string;\n    jwtToken?: string;\n    calledFromEmbed?: boolean;\n    userInfo?: { verifier: string; verifierId: string };\n    rehydrate?: boolean;\n    locale?: string;\n  }): Promise<void>;\n\n  /**\n   * Gets the preferences state of specified address\n   * @defaultValue - By default it will return selected address preferences\n   */\n  getAddressState(address?: string): P;\n\n  /**\n   * Sets the selected address in state\n   * @param selectedAddress - Sets the provided address as currently selected address\n   */\n  setSelectedAddress(selectedAddress: string): void;\n}\n","import { get, patch, post, remove } from \"@toruslabs/http-helpers\";\nimport bowser from \"bowser\";\nimport { cloneDeep } from \"lodash\";\nimport log from \"loglevel\";\n\nimport BaseController from \"../BaseController\";\nimport { BaseConfig, EmailObject, LOGIN_PROVIDER, UserInfo } from \"../interfaces\";\nimport { BaseKeyringController } from \"../Keyring/BaseKeyringController\";\nimport { KeyringControllerState } from \"../Keyring/IKeyringController\";\nimport { TransactionStatus } from \"../Transaction/ITransactionController\";\nimport { getCustomDeviceInfo, getHeaders } from \"../utils\";\nimport {\n  ACCOUNT_CATEGORY,\n  AddressPreferences,\n  BillboardEvent,\n  Contact,\n  ContactPayload,\n  DiscoverDapp,\n  PreferencesConfig,\n  PreferencesState,\n  RecordLoginPayload,\n  THEME,\n  UserPayload,\n} from \"./IPreferencesController\";\n\n// By default, poll every 3 minutes\nconst DEFAULT_INTERVAL = 180 * 1000;\n\nexport const DEFAULT_PREFERENCES = {\n  selectedCurrency: \"USD\",\n  theme: \"dark\",\n  locale: \"en-US\",\n  accountType: ACCOUNT_CATEGORY.NORMAL,\n  contacts: [],\n  jwtToken: \"\",\n  fetchedPastTx: [],\n  pastTransactions: [],\n  paymentTx: [],\n  defaultPublicAddress: \"\",\n  customTokens: [],\n  customNfts: [],\n  crashReport: true,\n  userInfo: {\n    aggregateVerifier: \"\",\n    email: \"\",\n    name: \"\",\n    profileImage: \"\",\n    typeOfLogin: LOGIN_PROVIDER.GOOGLE,\n    verifier: \"\",\n    verifierId: \"\",\n  },\n} as AddressPreferences;\n\n/**\n * Controller that stores shared settings and exposes convenience methods\n */\nexport abstract class BasePreferencesController<\n  P extends AddressPreferences,\n  C extends PreferencesConfig,\n  S extends PreferencesState<P>\n> extends BaseController<C, S> {\n  /**\n   * Name of this controller used during composition\n   */\n  name = \"PreferencesController\";\n\n  public iframeOrigin: string;\n\n  private signAuthMessage: BaseKeyringController<BaseConfig, KeyringControllerState>[\"signAuthMessage\"];\n\n  private defaultPreferences: Partial<P>;\n\n  /**\n   * Creates a PreferencesController instance\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor({\n    config,\n    state,\n    defaultPreferences,\n    signAuthMessage,\n  }: {\n    config?: Partial<C> & Pick<C, \"api\" | \"commonApiHost\" | \"signInPrefix\">;\n    state?: Partial<S>;\n    defaultPreferences?: Partial<P>;\n    signAuthMessage: BaseKeyringController<BaseConfig, KeyringControllerState>[\"signAuthMessage\"];\n  }) {\n    super({ config, state });\n    if (!config.api) {\n      throw new Error(\"PreferencesController - no api specified in config.\");\n    }\n    this.defaultState = {\n      identities: {},\n      selectedAddress: \"\",\n      lastErrorMessage: \"\",\n      lastSuccessMessage: \"\",\n    } as S;\n    this.defaultConfig = {\n      api: config.api,\n      pollInterval: DEFAULT_INTERVAL,\n    } as C;\n    this.initialize();\n    this.defaultPreferences = {\n      ...DEFAULT_PREFERENCES,\n      ...defaultPreferences,\n    };\n    this.signAuthMessage = signAuthMessage;\n  }\n\n  public setIframeOrigin(origin: string): void {\n    this.iframeOrigin = origin;\n  }\n\n  getAddressState(address?: string): P | undefined {\n    const selectedAddress = address || this.state.selectedAddress;\n    return this.state.identities[selectedAddress];\n  }\n\n  /**\n   * Sets selected address\n   *\n   * @param selectedAddress - casper account hash\n   */\n  setSelectedAddress(selectedAddress: string): void {\n    this.update({ selectedAddress } as Partial<S>);\n  }\n\n  async getUser<U>(address: string): Promise<U> {\n    const user = await get<{ success: boolean; error?: string; data?: U }>(`${this.config.api}/user?fetchTx=false`, this.headers(address), {\n      useAPIKey: true,\n    });\n    return user.data;\n  }\n\n  async createUser(params: {\n    selectedCurrency: string;\n    theme: THEME;\n    verifier: string;\n    verifierId: string;\n    locale: string;\n    address: string;\n    idToken?: string;\n  }): Promise<void> {\n    const { selectedCurrency, theme, verifier, verifierId, locale, address, idToken } = params;\n    const userPayload: UserPayload = {\n      default_currency: selectedCurrency,\n      theme,\n      verifier,\n      verifier_id: verifierId,\n      locale,\n      idToken,\n    };\n    await post(`${this.config.api}/user`, userPayload, this.headers(address), { useAPIKey: true });\n    this.updateState(\n      {\n        theme,\n        defaultPublicAddress: address,\n        selectedCurrency,\n        locale,\n      } as Partial<P>,\n      address\n    );\n  }\n\n  public async storeUserLogin(params: {\n    verifier: string;\n    verifierId: string;\n    address: string;\n    options: { calledFromEmbed: boolean; rehydrate: boolean };\n    idToken?: string;\n  }): Promise<void> {\n    const { verifierId, verifier, options, address, idToken } = params;\n    if (!options.rehydrate) {\n      const browser = bowser.getParser(window.navigator.userAgent);\n      const specialBrowser = getCustomDeviceInfo();\n      const recordLoginPayload: RecordLoginPayload = {\n        os: browser.getOSName(),\n        os_version: browser.getOSVersion() || \"unidentified\",\n        browser: specialBrowser?.browser || browser.getBrowserName() || \"unidentified\",\n        browser_version: browser.getBrowserVersion() || \"unidentified\",\n        platform: browser.getPlatform().type || \"desktop\",\n        hostname: this.iframeOrigin,\n        verifier,\n        verifier_id: verifierId,\n        idToken,\n      };\n      await post<{ success: boolean }>(`${this.config.api}/user/recordLogin`, recordLoginPayload, this.headers(address), { useAPIKey: true });\n    }\n  }\n\n  async setCrashReport(isEnabled: boolean): Promise<boolean> {\n    if (isEnabled === this.getAddressState()?.crashReport) return true;\n    try {\n      await patch(`${this.config.api}/user`, { enable_crash_reporter: isEnabled }, this.headers(), { useAPIKey: true });\n      this.updateState({ crashReport: isEnabled } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserTheme(theme: THEME): Promise<boolean> {\n    if (theme === this.getAddressState()?.theme) return true;\n    try {\n      await patch(`${this.config.api}/user`, { theme }, this.headers(), { useAPIKey: true });\n      this.updateState({ theme } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserLocale(locale: string): Promise<boolean> {\n    if (locale === this.getAddressState()?.locale) return;\n    try {\n      await patch(`${this.config.api}/user`, { locale }, this.headers(), { useAPIKey: true });\n      this.updateState({ locale } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to set locale\", error);\n      return false;\n    }\n  }\n\n  async setSelectedCurrency(payload: { selectedCurrency: string }): Promise<boolean> {\n    if (payload.selectedCurrency === this.getAddressState()?.selectedCurrency) return true;\n    try {\n      await patch(`${this.config.api}/user`, { default_currency: payload.selectedCurrency }, this.headers(), { useAPIKey: true });\n      this.updateState({ selectedCurrency: payload.selectedCurrency } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async addContact(contact: ContactPayload): Promise<boolean> {\n    try {\n      const response = await post<{ success: boolean; data: Contact }>(`${this.config.api}/contact`, contact, this.headers(), { useAPIKey: true });\n      this.updateState({ contacts: [...(this.getAddressState()?.contacts || []), response.data] } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to add contact\", error);\n      return false;\n    }\n  }\n\n  async deleteContact(contactId: number): Promise<boolean> {\n    try {\n      const response = await remove<{ success: boolean; data: { id: number } }>(`${this.config.api}/contact/${contactId}`, {}, this.headers(), {\n        useAPIKey: true,\n      });\n      const finalContacts = this.getAddressState()?.contacts.filter((contact) => contact.id !== response.data.id);\n      if (finalContacts) this.updateState({ contacts: [...finalContacts] } as Partial<P>);\n      return true;\n    } catch (error) {\n      log.error(\"unable to delete contact\", error);\n      return false;\n    }\n  }\n\n  async revokeDiscord(idToken: string): Promise<void> {\n    try {\n      const resp = await post(`${this.config.api}/revoke/discord`, { token: idToken }, this.headers(), { useAPIKey: true });\n      log.info(resp);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  async patchPastTx(body: { id: string; status: TransactionStatus; updated_at: string }, address: string): Promise<void> {\n    try {\n      const response = await patch(`${this.config.api}/transaction`, body, this.headers(address), { useAPIKey: true });\n      log.info(\"successfully patched\", response);\n    } catch (error) {\n      log.error(\"unable to patch tx\", error);\n    }\n  }\n\n  async postPastTx<T>(tx: T, address: string): Promise<{ success: boolean; response: number[] }> {\n    try {\n      const response = await post(`${this.config.api}/transaction`, tx, this.headers(address), {\n        useAPIKey: true,\n      });\n      log.info(\"successfully posted tx\", response);\n      return response as { success: boolean; response: number[] };\n    } catch (error) {\n      log.error(error, \"unable to insert transaction\");\n    }\n  }\n\n  async getWalletOrders<T>(address: string): Promise<T[]> {\n    try {\n      const response = await get<{ success: boolean; data: T[] | null }>(`${this.config.api}/transaction`, this.headers(address), {\n        useAPIKey: true,\n      });\n      return response.success ? (response.data ? response.data : []) : [];\n    } catch (error) {\n      log.error(\"unable to get wallet orders tx\", error);\n      return [];\n    }\n  }\n\n  async getTopUpOrders<T>(address: string): Promise<T[]> {\n    try {\n      const response = await get<{ success: boolean; data: T[] }>(`${this.config.commonApiHost}/transaction`, this.headers(address), {\n        useAPIKey: true,\n      });\n      return response.data || [];\n    } catch (error) {\n      log.error(\"unable to fetch past Top up orders\", error);\n    }\n  }\n\n  async getBillBoardData(): Promise<BillboardEvent[]> {\n    try {\n      const response = await get<{ success: boolean; data: BillboardEvent[] | null }>(`${this.config.api}/billboard`, this.headers(), {\n        useAPIKey: true,\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  async getMessageForSigning(publicAddress: string): Promise<string> {\n    const response = await post<{ success: boolean; message: string }>(\n      `${this.config.api}/auth/message`,\n      {\n        public_address: publicAddress,\n      },\n      {},\n      { useAPIKey: true }\n    );\n    return response.message;\n  }\n\n  async getTwitterId(payload: { nick: string; typeOfLogin: string }): Promise<string> {\n    const res = await get<{ success: boolean; data: string }>(`${this.config.api}/twitter?screen_name=${payload.nick}`, this.headers(), {\n      useAPIKey: true,\n    });\n    return `${payload.typeOfLogin.toLowerCase()}|${res.data.toString()}`;\n  }\n\n  async sendEmail(payload: { emailObject: EmailObject }): Promise<void> {\n    return post(`${this.config.api}/transaction/sendemail`, payload.emailObject, this.headers(), { useAPIKey: true });\n  }\n\n  async refreshJwt(): Promise<void> {\n    const address = this.state.selectedAddress;\n    const messageToSign = await this.getMessageForSigning(address);\n    if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n    const signedMessage = this.signAuthMessage(address, messageToSign);\n    const response: { token: string } = await post(\n      `${this.config.api}/auth/verify`,\n      {\n        public_address: address,\n        signed_message: signedMessage,\n      },\n      {},\n      { useAPIKey: true }\n    );\n    this.updateState({ jwtToken: response.token } as Partial<P>, address);\n  }\n\n  async getDappList(): Promise<DiscoverDapp[]> {\n    try {\n      const response = await get<{ success: boolean; error?: string; data?: DiscoverDapp[] }>(`${this.config.api}/dapps`, this.headers(), {\n        useAPIKey: true,\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  protected async init(address: string, userInfo: UserInfo, jwtToken?: string): Promise<void> {\n    let response = { token: jwtToken };\n    if (this.getAddressState(address)) return;\n    if (!jwtToken) {\n      const messageToSign = await this.getMessageForSigning(address);\n      if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n      const signedMessage = this.signAuthMessage(address, messageToSign);\n      response = await post(\n        `${this.config.api}/auth/verify`,\n        {\n          public_address: address,\n          signed_message: signedMessage,\n        },\n        {},\n        { useAPIKey: true }\n      );\n    }\n    this.updateState({ jwtToken: response.token, userInfo } as Partial<P>, address);\n  }\n\n  protected updateState(preferences?: Partial<P>, address?: string): P {\n    const selectedAddress = address || this.state.selectedAddress;\n    const currentState = this.getAddressState(selectedAddress) || cloneDeep(this.defaultPreferences);\n    const mergedState = { ...currentState, ...preferences } as P;\n    this.update({\n      identities: {\n        ...this.state.identities,\n        [selectedAddress]: mergedState,\n      },\n    } as S);\n    return mergedState;\n  }\n\n  private headers(address?: string): { headers: { Authorization: string; \"Content-Type\": string } } {\n    const selectedAddress = address || this.state.selectedAddress;\n    return getHeaders(this.getAddressState(selectedAddress)?.jwtToken || \"\");\n  }\n\n  abstract sync(address: string): Promise<boolean>;\n}\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport { BaseConfig, BaseState } from \"../interfaces\";\n\n/**\n * The status of the transaction. Each status represents the state of the transaction internally\n * in the wallet. Some of these correspond with the state of the transaction on the network, but\n * some are wallet-specific.\n */\n\nexport enum TransactionStatus {\n  approved = \"approved\",\n  cancelled = \"cancelled\",\n  confirmed = \"confirmed\",\n  failed = \"failed\",\n  finalized = \"finalized\",\n  processed = \"processed\",\n  rejected = \"rejected\",\n  signed = \"signed\",\n  submitted = \"submitted\",\n  unapproved = \"unapproved\",\n  dropped = \"dropped\",\n  expired = \"expired\",\n}\n\nexport const TRANSACTION_TYPES = {\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  WASM_BASED_DEPLOY: \"wasmBasedDeploy\",\n  STANDARD_TRANSACTION: \"transaction\",\n  STANDARD_PAYMENT_TRANSACTION: \"payment_transaction\", // specific to chains like solana and casper\n};\n\nexport type TRANSACTION_TYPE = typeof TRANSACTION_TYPES[keyof typeof TRANSACTION_TYPES];\n\nexport const TX_EVENTS = {\n  TX_WARNING: \"tx:warning\",\n  TX_ERROR: \"tx:error\",\n  TX_FAILED: \"tx:failed\",\n  TX_CONFIRMED: \"tx:confirmed\",\n  TX_DROPPED: \"tx:dropped\",\n  TX_EXPIRED: \"tx:expired\",\n  TX_STATUS_UPDATE: \"tx:status_update\",\n  TX_UNAPPROVED: \"tx:unapproved\",\n};\n\nexport interface TransactionMeta<T> {\n  id: string;\n  transaction: T;\n  transactionType: TRANSACTION_TYPE;\n  dappSuggestedTransaction: Partial<T>;\n  chainId: string;\n  origin: string;\n  time: number;\n  status: TransactionStatus;\n  updated_at?: string; // iso date string\n  transactionHash?: string;\n  rawTransaction?: string;\n  txReceipt?: unknown;\n  error?: Error;\n  warning?: {\n    error?: string;\n    message?: string;\n  };\n}\n\nexport type BASE_TX_EVENT_TYPE = {\n  txId: string;\n};\n\nexport type TX_ERROR_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  error: Error;\n};\n\nexport type TX_FAILED_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  error: Error;\n};\n\nexport type TX_EXPIRED_EVENT_TYPE = BASE_TX_EVENT_TYPE;\n\nexport type TX_WARNING_EVENT_TYPE<T> = BASE_TX_EVENT_TYPE & {\n  txMeta: TransactionMeta<T>;\n};\n\nexport type TX_CONFIRMED_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  txReceipt: unknown;\n};\n\nexport type TX_DROPPED_EVENT_TYPE = BASE_TX_EVENT_TYPE;\n\nexport type TX_STATUS_UPDATE_EVENT_TYPE = BASE_TX_EVENT_TYPE & {\n  status: TransactionStatus;\n};\n\nexport type TX_FINISHED_EVENT_TYPE<T> = BASE_TX_EVENT_TYPE & {\n  txMeta: TransactionMeta<T>;\n};\n\n/**\n * Transaction controller configuration\n */\nexport interface TransactionConfig extends BaseConfig {\n  txHistoryLimit: number;\n}\n\n/**\n * Transaction controller state\n */\nexport interface TransactionState<T> extends BaseState {\n  /**\n   * Transactions by key (id) value (TxMeta)\n   */\n  transactions: Record<string, TransactionMeta<T>>; // all transactions (unapprroved and all others)\n  unapprovedTxs?: Record<string, TransactionMeta<T>>; // only unapproved\n  currentNetworkTxsList?: TransactionMeta<T>[];\n}\n\n/**\n * Result\n *\n * result - Promise resolving to a new transaction hash\n * transactionMeta - Meta information about this new transaction\n */\nexport interface Result<T> {\n  result: Promise<string>;\n  transactionMeta: TransactionMeta<T>;\n}\n\nexport interface ITransactionController<T> {\n  /**\n   * Add a new unapproved transaction to state.\n   * @param transaction - Transaction object to add\n   * @returns - Object containing a promise resolving to the transaction hash if approved\n   */\n  addTransaction(transaction: T, req: JRPCRequest<T & { windowId?: string }> & { origin: string }): Promise<Result<T>>;\n\n  /**\n   * Approves a transaction and updates it's status in state.\n   *\n   * @param transactionID - ID of the transaction to approve\n   * @returns - Promise resolving when this operation completes\n   */\n  approveTransaction(transactionID: string): Promise<void>;\n\n  /**\n   * Cancels a transaction based on its ID by setting its status to \"rejected\"\n   *\n   * @param transactionID - ID of the transaction to cancel\n   */\n  cancelTransaction?(transactionID: string): Promise<void>;\n}\n\nexport interface ITransactionStateManager<T> {\n  addTransactionToState(txMeta: TransactionMeta<T>): TransactionMeta<T>;\n\n  wipeTransactions(address: string): void;\n\n  getTransactions(args: {\n    searchCriteria?: Record<string, (val: unknown) => boolean> | Record<string, unknown>;\n    initialList?: TransactionMeta<T>[];\n    filterToCurrentNetwork?: boolean;\n  }): TransactionMeta<T>[];\n  getApprovedTransactions(address?: string): TransactionMeta<T>[];\n  getPendingTransactions(address?: string): TransactionMeta<T>[];\n  getConfirmedTransactions(address?: string): TransactionMeta<T>[];\n}\n","import { omitBy, pickBy } from \"lodash\";\n\nimport BaseController from \"../BaseController\";\nimport { transactionMatchesNetwork } from \"../utils\";\nimport {\n  TransactionConfig,\n  TransactionMeta,\n  TransactionState,\n  TransactionStatus,\n  TX_EVENTS,\n  TX_STATUS_UPDATE_EVENT_TYPE,\n} from \"./ITransactionController\";\n\nexport class BaseTransactionStateManager<T> extends BaseController<TransactionConfig, TransactionState<T>> {\n  protected getCurrentChainId: () => string;\n\n  constructor({\n    config,\n    state,\n    getCurrentChainId,\n  }: {\n    config?: Partial<TransactionConfig>;\n    state?: Partial<TransactionState<T>>;\n    getCurrentChainId: () => string;\n  }) {\n    super({ config, state });\n    this.defaultConfig = {\n      txHistoryLimit: 40,\n    };\n    this.defaultState = {\n      transactions: {},\n      unapprovedTxs: {},\n      currentNetworkTxsList: [],\n    };\n    this.initialize();\n    this.getCurrentChainId = getCurrentChainId;\n  }\n\n  getUnapprovedTxList(): Record<string, TransactionMeta<T>> {\n    const chainId = this.getCurrentChainId();\n    return pickBy(\n      this.state.transactions,\n      (transaction) => transaction.status === TransactionStatus.unapproved && transactionMatchesNetwork<T>(transaction, chainId)\n    );\n  }\n\n  getTransaction(txId: string): TransactionMeta<T> {\n    const { transactions } = this.state;\n    return transactions[txId];\n  }\n\n  updateTransaction(txMeta: TransactionMeta<T>): void {\n    // commit txMeta to state\n    const txId = txMeta.id;\n    txMeta.updated_at = new Date().toISOString();\n    this.update({\n      transactions: {\n        ...this.state.transactions,\n        [txId]: txMeta,\n      },\n    });\n  }\n\n  setTxStatusRejected(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.rejected);\n    this._deleteTransaction(txId);\n  }\n\n  /**\n   * The implementing controller can override this functionality and add custom logic + call super.()\n   */\n  setTxStatusUnapproved(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.unapproved);\n  }\n\n  setTxStatusApproved(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.approved);\n  }\n\n  setTxStatusSigned(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.signed);\n  }\n\n  setTxStatusSubmitted(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.submitted);\n  }\n\n  setTxStatusDropped(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.dropped);\n  }\n\n  setTxStatusExpired(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.expired);\n  }\n\n  setTxStatusConfirmed(txId: string): void {\n    this._setTransactionStatus(txId, TransactionStatus.confirmed);\n  }\n\n  setTxStatusFailed(txId: string, error_: Error): void {\n    const error = !error_ ? new Error(\"Internal torus failure\") : error_;\n\n    const txMeta = this.getTransaction(txId);\n    txMeta.error = error;\n    this.updateTransaction(txMeta);\n    this._setTransactionStatus(txId, TransactionStatus.failed);\n  }\n\n  /**\n   * Method to determine if the transaction is in a final state\n   * @param status - Transaction status\n   * @returns boolean if the transaction is in a final state\n   */\n  isFinalState(status: TransactionStatus): boolean {\n    return (\n      status === TransactionStatus.rejected ||\n      status === TransactionStatus.submitted ||\n      status === TransactionStatus.confirmed ||\n      status === TransactionStatus.failed ||\n      status === TransactionStatus.cancelled ||\n      status === TransactionStatus.expired\n    );\n  }\n\n  /**\n   * Filters out the unapproved transactions from state\n   */\n  clearUnapprovedTxs(): void {\n    this.update({\n      transactions: omitBy(this.state.transactions, (transaction: TransactionMeta<T>) => transaction.status === TransactionStatus.unapproved),\n    });\n  }\n\n  /**\n   * will append new transactions to old txns.\n   */\n  _addTransactionsToState(transactions: TransactionMeta<T>[]): void {\n    this.update({\n      transactions: transactions.reduce((result: Record<string, TransactionMeta<T>>, newTx: TransactionMeta<T>) => {\n        result[newTx.id] = newTx;\n        return result;\n      }, this.state.transactions),\n    });\n  }\n\n  /**\n   * will set new txns, override existing if any in state.\n   */\n  _setTransactionsToState(transactions: TransactionMeta<T>[]): void {\n    this.update({\n      transactions: transactions.reduce((result: Record<string, TransactionMeta<T>>, newTx: TransactionMeta<T>) => {\n        result[newTx.id] = newTx;\n        return result;\n      }, {}),\n    });\n  }\n\n  _deleteTransaction(targetTransactionId: string): void {\n    const { transactions } = this.state;\n    delete transactions[targetTransactionId];\n    this.update({\n      transactions,\n    });\n  }\n\n  _deleteTransactions(targetTransactionIds: string[]): void {\n    const { transactions } = this.state;\n    targetTransactionIds.forEach((transactionId) => {\n      delete transactions[transactionId];\n    });\n    this.update({\n      transactions,\n    });\n  }\n\n  protected _setTransactionStatus(txId: string, status: TransactionStatus): void {\n    const txMeta = this.getTransaction(txId);\n    if (!txMeta) {\n      return;\n    }\n    txMeta.status = status;\n    // only updating status so no validation required on txn.\n    this.updateTransaction(txMeta);\n    this.emit(TX_EVENTS.TX_STATUS_UPDATE, { txId, status } as TX_STATUS_UPDATE_EVENT_TYPE);\n    if (this.isFinalState(status)) {\n      this.emit(`${txMeta.id}:finished`, txMeta);\n    } else {\n      this.emit(`${txMeta.id}:${status}`, txId);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}