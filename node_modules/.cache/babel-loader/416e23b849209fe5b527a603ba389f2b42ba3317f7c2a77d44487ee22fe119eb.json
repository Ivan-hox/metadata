{"ast":null,"code":"import _objectSpread from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"disabled\", \"onClick\"];\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { Button } from './Button.js';\nimport { WalletIcon } from './WalletIcon.js';\nexport var WalletConnectButton = function WalletConnectButton(_ref) {\n  var children = _ref.children,\n    disabled = _ref.disabled,\n    onClick = _ref.onClick,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useWallet = useWallet(),\n    wallet = _useWallet.wallet,\n    connect = _useWallet.connect,\n    connecting = _useWallet.connecting,\n    connected = _useWallet.connected;\n  var handleClick = useCallback(function (event) {\n    if (onClick) onClick(event);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    if (!event.defaultPrevented) connect().catch(function () {});\n  }, [onClick, connect]);\n  var content = useMemo(function () {\n    if (children) return children;\n    if (connecting) return 'Connecting ...';\n    if (connected) return 'Connected';\n    if (wallet) return 'Connect';\n    return 'Connect Wallet';\n  }, [children, connecting, connected, wallet]);\n  return React.createElement(Button, _objectSpread({\n    className: \"wallet-adapter-button-trigger\",\n    disabled: disabled || !wallet || connecting || connected,\n    startIcon: wallet ? React.createElement(WalletIcon, {\n      wallet: wallet\n    }) : undefined,\n    onClick: handleClick\n  }, props), content);\n};","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAAQ,8BAA8B;AAExD,OAAOC,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAEnD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,OAAO,IAAMC,mBAAmB,GAAoB,SAAvCA,mBAAmB,OAAkE;EAAA,IAA3CC,QAAQ,QAARA,QAAQ;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,OAAO,QAAPA,OAAO;IAAKC,KAAK;EACxF,iBAAmDV,SAAS,EAAE;IAAtDW,MAAM,cAANA,MAAM;IAAEC,OAAO,cAAPA,OAAO;IAAEC,UAAU,cAAVA,UAAU;IAAEC,SAAS,cAATA,SAAS;EAE9C,IAAMC,WAAW,GAAyCb,WAAW,CACjE,UAACc,KAAK,EAAI;IACN,IAAIP,OAAO,EAAEA,OAAO,CAACO,KAAK,CAAC;IAC3B;IACA,IAAI,CAACA,KAAK,CAACC,gBAAgB,EAAEL,OAAO,EAAE,CAACM,KAAK,CAAC,YAAK,CAAE,CAAC,CAAC;EAC1D,CAAC,EACD,CAACT,OAAO,EAAEG,OAAO,CAAC,CACrB;EAED,IAAMO,OAAO,GAAGhB,OAAO,CAAC,YAAK;IACzB,IAAII,QAAQ,EAAE,OAAOA,QAAQ;IAC7B,IAAIM,UAAU,EAAE,OAAO,gBAAgB;IACvC,IAAIC,SAAS,EAAE,OAAO,WAAW;IACjC,IAAIH,MAAM,EAAE,OAAO,SAAS;IAC5B,OAAO,gBAAgB;EAC3B,CAAC,EAAE,CAACJ,QAAQ,EAAEM,UAAU,EAAEC,SAAS,EAAEH,MAAM,CAAC,CAAC;EAE7C,OACIV,oBAACG,MAAM;IACHgB,SAAS,EAAC,+BAA+B;IACzCZ,QAAQ,EAAEA,QAAQ,IAAI,CAACG,MAAM,IAAIE,UAAU,IAAIC,SAAS;IACxDO,SAAS,EAAEV,MAAM,GAAGV,oBAACI,UAAU;MAACM,MAAM,EAAEA;IAAM,EAAI,GAAGW,SAAS;IAC9Db,OAAO,EAAEM;EAAW,GAChBL,KAAK,GAERS,OAAO,CACH;AAEjB,CAAC","names":["useWallet","React","useCallback","useMemo","Button","WalletIcon","WalletConnectButton","children","disabled","onClick","props","wallet","connect","connecting","connected","handleClick","event","defaultPrevented","catch","content","className","startIcon","undefined"],"sources":["/Users/ivan/Metadata/node_modules/@solana/wallet-adapter-react-ui/src/WalletConnectButton.tsx"],"sourcesContent":["import { useWallet } from '@solana/wallet-adapter-react';\nimport type { FC, MouseEventHandler } from 'react';\nimport React, { useCallback, useMemo } from 'react';\nimport type { ButtonProps } from './Button.js';\nimport { Button } from './Button.js';\nimport { WalletIcon } from './WalletIcon.js';\n\nexport const WalletConnectButton: FC<ButtonProps> = ({ children, disabled, onClick, ...props }) => {\n    const { wallet, connect, connecting, connected } = useWallet();\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n        (event) => {\n            if (onClick) onClick(event);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            if (!event.defaultPrevented) connect().catch(() => {});\n        },\n        [onClick, connect]\n    );\n\n    const content = useMemo(() => {\n        if (children) return children;\n        if (connecting) return 'Connecting ...';\n        if (connected) return 'Connected';\n        if (wallet) return 'Connect';\n        return 'Connect Wallet';\n    }, [children, connecting, connected, wallet]);\n\n    return (\n        <Button\n            className=\"wallet-adapter-button-trigger\"\n            disabled={disabled || !wallet || connecting || connected}\n            startIcon={wallet ? <WalletIcon wallet={wallet} /> : undefined}\n            onClick={handleClick}\n            {...props}\n        >\n            {content}\n        </Button>\n    );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}