{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { setAPIKey as _setAPIKey, setEmbedHost as _setEmbedHost, post } from '@toruslabs/http-helpers';\nimport stringify from 'json-stable-stringify';\nimport { ec as ec$1 } from 'elliptic';\nimport createKeccakHash from 'keccak';\nimport { encrypt, getPublic, decrypt } from '@toruslabs/eccrypto';\nfunction keccak256(a) {\n  return createKeccakHash(\"keccak256\").update(a).digest();\n}\nvar ec = new ec$1(\"secp256k1\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar MetadataStorageLayer = /*#__PURE__*/function () {\n  // ms\n  function MetadataStorageLayer() {\n    _classCallCheck(this, MetadataStorageLayer);\n    var metadataHost = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"https://metadata.tor.us\";\n    var serverTimeOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    _defineProperty(this, \"metadataHost\", void 0);\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n    this.metadataHost = metadataHost;\n    this.serverTimeOffset = serverTimeOffset;\n  }\n  _createClass(MetadataStorageLayer, [{\n    key: \"generateMetadataParams\",\n    value: function generateMetadataParams(message, privateKeyHex) {\n      var _ref, _sig$recoveryParam;\n      var key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n      var setData = {\n        data: message,\n        timestamp: Math.floor(this.serverTimeOffset + Date.now() / 1000).toString(16)\n      };\n      var sig = key.sign(keccak256(stringify(setData)));\n      return {\n        pub_key_X: key.getPublic().getX().toString(\"hex\"),\n        pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n        set_data: setData,\n        signature: Buffer.from((_ref = sig.r.toString(16, 64) + sig.s.toString(16, 64) + ((_sig$recoveryParam = sig.recoveryParam) === null || _sig$recoveryParam === void 0 ? void 0 : _sig$recoveryParam.toString(16).padStart(2, \"0\").slice(-2))) !== null && _ref !== void 0 ? _ref : \"00\", \"hex\").toString(\"base64\")\n      };\n    }\n  }, {\n    key: \"generatePubKeyParams\",\n    value: function generatePubKeyParams(privateKeyHex) {\n      var key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n      return {\n        pub_key_X: key.getPublic().getX().toString(\"hex\"),\n        pub_key_Y: key.getPublic().getY().toString(\"hex\")\n      };\n    }\n  }, {\n    key: \"setMetadata\",\n    value: function () {\n      var _setMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, namespace, options) {\n        var params, metadataResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = namespace !== null ? _objectSpread(_objectSpread({}, data), {}, {\n                  namespace: namespace\n                }) : data;\n                _context.next = 3;\n                return post(\"\".concat(this.metadataHost, \"/set\"), params, options, {\n                  useAPIKey: true\n                });\n              case 3:\n                metadataResponse = _context.sent;\n                return _context.abrupt(\"return\", metadataResponse.message);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function setMetadata(_x, _x2, _x3) {\n        return _setMetadata.apply(this, arguments);\n      }\n      return setMetadata;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function () {\n      var _getMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(pubKey, namespace, options) {\n        var params, metadataResponse;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = namespace !== null ? _objectSpread(_objectSpread({}, pubKey), {}, {\n                  namespace: namespace\n                }) : pubKey;\n                _context2.next = 3;\n                return post(\"\".concat(this.metadataHost, \"/get\"), params, options, {\n                  useAPIKey: true\n                });\n              case 3:\n                metadataResponse = _context2.sent;\n                return _context2.abrupt(\"return\", metadataResponse.message);\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function getMetadata(_x4, _x5, _x6) {\n        return _getMetadata.apply(this, arguments);\n      }\n      return getMetadata;\n    }()\n  }], [{\n    key: \"setAPIKey\",\n    value: function setAPIKey(apiKey) {\n      _setAPIKey(apiKey);\n    }\n  }, {\n    key: \"setEmbedHost\",\n    value: function setEmbedHost(embedHost) {\n      _setEmbedHost(embedHost);\n    }\n  }]);\n  return MetadataStorageLayer;\n}();\nvar WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nvar WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\nfunction encParamsHexToBuf(encParamsHex) {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\")\n  };\n}\nfunction encParamsBufToHex(encParams) {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\")\n  };\n}\nfunction encryptData(_x7, _x8) {\n  return _encryptData.apply(this, arguments);\n}\nfunction _encryptData() {\n  _encryptData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(privKeyHex, d) {\n    var serializedDec, serializedBuf, encParams, encParamsHex, sData;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            serializedDec = JSON.stringify(d);\n            serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n            _context3.next = 4;\n            return encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n          case 4:\n            encParams = _context3.sent;\n            encParamsHex = encParamsBufToHex(encParams);\n            sData = JSON.stringify(encParamsHex);\n            return _context3.abrupt(\"return\", sData);\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _encryptData.apply(this, arguments);\n}\nfunction decryptData(_x9, _x10) {\n  return _decryptData.apply(this, arguments);\n}\nfunction _decryptData() {\n  _decryptData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(privKeyHex, d) {\n    var encParamsHex, encParams, keyPair, serializedBuf, serializedDec, data;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            encParamsHex = JSON.parse(d);\n            encParams = encParamsHexToBuf(encParamsHex);\n            keyPair = ec.keyFromPrivate(privKeyHex);\n            _context4.next = 5;\n            return decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n          case 5:\n            serializedBuf = _context4.sent;\n            serializedDec = serializedBuf.toString(\"utf-8\");\n            data = JSON.parse(serializedDec);\n            return _context4.abrupt(\"return\", data);\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _decryptData.apply(this, arguments);\n}\nfunction getAndDecryptData(_x11, _x12, _x13) {\n  return _getAndDecryptData.apply(this, arguments);\n}\nfunction _getAndDecryptData() {\n  _getAndDecryptData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(m, privKeyHex, namespace) {\n    var keyPair, pubKey, serializedData, data;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            keyPair = ec.keyFromPrivate(privKeyHex);\n            pubKey = keyPair.getPublic();\n            _context5.next = 4;\n            return m.getMetadata({\n              pub_key_X: pubKey.getX().toString(16),\n              pub_key_Y: pubKey.getY().toString(16)\n            }, namespace);\n          case 4:\n            serializedData = _context5.sent;\n            if (serializedData) {\n              _context5.next = 7;\n              break;\n            }\n            return _context5.abrupt(\"return\", null);\n          case 7:\n            _context5.next = 9;\n            return decryptData(privKeyHex, serializedData);\n          case 9:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", data);\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getAndDecryptData.apply(this, arguments);\n}\nfunction encryptAndSetData(_x14, _x15, _x16, _x17) {\n  return _encryptAndSetData.apply(this, arguments);\n}\nfunction _encryptAndSetData() {\n  _encryptAndSetData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(m, privKeyHex, d, namespace) {\n    var sData, metadataParams;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return encryptData(privKeyHex, d);\n          case 2:\n            sData = _context6.sent;\n            metadataParams = m.generateMetadataParams(sData, privKeyHex);\n            _context6.next = 6;\n            return m.setMetadata(metadataParams, namespace);\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _encryptAndSetData.apply(this, arguments);\n}\nfunction setTorusShare(_x18, _x19, _x20, _x21, _x22) {\n  return _setTorusShare.apply(this, arguments);\n}\nfunction _setTorusShare() {\n  _setTorusShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(m, webAuthnPubKey, webAuthnRefHex, subspace, subspaceData) {\n    var refKeyPair, privKey, pubKey, data, d, serializedSubspaceData, serializedSubspaceDataBuf, encSubspaceData, encSubspaceDataHex;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n            privKey = refKeyPair.getPrivate();\n            pubKey = ec.keyFromPublic({\n              x: webAuthnPubKey.pub_key_X,\n              y: webAuthnPubKey.pub_key_Y\n            });\n            _context7.next = 5;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n          case 5:\n            data = _context7.sent;\n            d = {};\n            if (data) d = data;\n            serializedSubspaceData = JSON.stringify(subspaceData);\n            serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n            _context7.next = 12;\n            return encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n          case 12:\n            encSubspaceData = _context7.sent;\n            encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n            d[subspace] = encSubspaceDataHex;\n            _context7.next = 17;\n            return encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _setTorusShare.apply(this, arguments);\n}\nfunction setDeviceShare(_x23, _x24, _x25, _x26) {\n  return _setDeviceShare.apply(this, arguments);\n}\nfunction _setDeviceShare() {\n  _setDeviceShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(m, webAuthnRefHex, subspace, subspaceData) {\n    var keyPair, privKey, data, d;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            keyPair = ec.keyFromPrivate(webAuthnRefHex);\n            privKey = keyPair.getPrivate();\n            _context8.next = 4;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n          case 4:\n            data = _context8.sent;\n            d = {};\n            if (data) d = data;\n            d[subspace] = subspaceData;\n            _context8.next = 10;\n            return encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _setDeviceShare.apply(this, arguments);\n}\nfunction getTorusShare(_x27, _x28, _x29, _x30) {\n  return _getTorusShare.apply(this, arguments);\n}\nfunction _getTorusShare() {\n  _getTorusShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(m, webAuthnKeyHex, webAuthnRefHex, subspace) {\n    var data, encParamsHex, encParams, keyPair, privKey, serializedSubspaceDataBuf, serializedSubspaceData, subspaceData;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n          case 2:\n            data = _context9.sent;\n            if (data) {\n              _context9.next = 5;\n              break;\n            }\n            return _context9.abrupt(\"return\", null);\n          case 5:\n            encParamsHex = data[subspace];\n            if (encParamsHex) {\n              _context9.next = 8;\n              break;\n            }\n            return _context9.abrupt(\"return\", null);\n          case 8:\n            encParams = encParamsHexToBuf(encParamsHex);\n            keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n            privKey = keyPair.getPrivate();\n            _context9.next = 13;\n            return decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n          case 13:\n            serializedSubspaceDataBuf = _context9.sent;\n            serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n            subspaceData = JSON.parse(serializedSubspaceData);\n            return _context9.abrupt(\"return\", subspaceData);\n          case 17:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getTorusShare.apply(this, arguments);\n}\nfunction getDeviceShare(_x31, _x32, _x33) {\n  return _getDeviceShare.apply(this, arguments);\n}\nfunction _getDeviceShare() {\n  _getDeviceShare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(m, webAuthnRefHex, subspace) {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n          case 2:\n            data = _context10.sent;\n            if (!data) {\n              _context10.next = 5;\n              break;\n            }\n            return _context10.abrupt(\"return\", data[subspace]);\n          case 5:\n            return _context10.abrupt(\"return\", null);\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getDeviceShare.apply(this, arguments);\n}\nexport { decryptData, MetadataStorageLayer as default, ec, encParamsBufToHex, encParamsHexToBuf, encryptAndSetData, encryptData, getAndDecryptData, getDeviceShare, getTorusShare, keccak256, setDeviceShare, setTorusShare };","map":{"version":3,"mappings":"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","names":["keccak256","a","createKeccakHash","update","digest","ec","EC","MetadataStorageLayer","constructor","metadataHost","serverTimeOffset","_defineProperty","generateMetadataParams","message","privateKeyHex","key","keyFromPrivate","setData","data","timestamp","Math","floor","Date","now","toString","sig","sign","stringify","pub_key_X","getPublic","getX","pub_key_Y","getY","set_data","signature","Buffer","from","r","s","recoveryParam","_sig$recoveryParam","padStart","slice","generatePubKeyParams","namespace","options","params","post","useAPIKey","metadataResponse","pubKey","apiKey","setAPIKey","embedHost","setEmbedHost","WEBAUTHN_TORUS_SHARE","WEBAUTHN_DEVICE_SHARE","encParamsHexToBuf","encParamsHex","iv","ephemPublicKey","ciphertext","mac","encParamsBufToHex","encParams","encryptData","privKeyHex","d","serializedDec","JSON","serializedBuf","encrypt","sData","decryptData","parse","keyPair","decrypt","getPrivate","getAndDecryptData","m","getMetadata","serializedData","encryptAndSetData","metadataParams","setMetadata","setTorusShare","webAuthnPubKey","webAuthnRefHex","subspace","subspaceData","refKeyPair","privKey","keyFromPublic","x","y","serializedSubspaceData","serializedSubspaceDataBuf","encSubspaceData","encSubspaceDataHex","setDeviceShare","getTorusShare","webAuthnKeyHex","getDeviceShare"],"sources":["/Users/ivan/Metadata/node_modules/@toruslabs/metadata-helpers/src/utils.ts","/Users/ivan/Metadata/node_modules/@toruslabs/metadata-helpers/src/MetadataStorageLayer.ts","/Users/ivan/Metadata/node_modules/@toruslabs/metadata-helpers/src/webAuthnShareResolver.ts"],"sourcesContent":["import { ec as EC } from \"elliptic\";\nimport createKeccakHash from \"keccak\";\n\nexport function keccak256(a: string | Buffer): Buffer {\n  return createKeccakHash(\"keccak256\").update(a).digest();\n}\n\nexport const ec = new EC(\"secp256k1\");\n","import { post, setAPIKey, setEmbedHost } from \"@toruslabs/http-helpers\";\nimport stringify from \"json-stable-stringify\";\n\nimport { ec, keccak256 } from \"./utils\";\n\nexport type PubKeyParams = {\n  pub_key_X: string;\n  pub_key_Y: string;\n};\n\nexport type MetadataParams = PubKeyParams & {\n  set_data: {\n    data: string;\n    timestamp: string;\n  };\n  signature: string;\n};\n\nclass MetadataStorageLayer {\n  public metadataHost: string;\n\n  public serverTimeOffset: number; // ms\n\n  constructor(metadataHost = \"https://metadata.tor.us\", serverTimeOffset = 0) {\n    this.metadataHost = metadataHost;\n    this.serverTimeOffset = serverTimeOffset;\n  }\n\n  static setAPIKey(apiKey: string): void {\n    setAPIKey(apiKey);\n  }\n\n  static setEmbedHost(embedHost: string): void {\n    setEmbedHost(embedHost);\n  }\n\n  generateMetadataParams(message: string, privateKeyHex: string): MetadataParams {\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    const setData = {\n      data: message,\n      timestamp: Math.floor(this.serverTimeOffset + Date.now() / 1000).toString(16),\n    };\n    const sig = key.sign(keccak256(stringify(setData)));\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n      set_data: setData,\n      signature: Buffer.from(\n        sig.r.toString(16, 64) + sig.s.toString(16, 64) + sig.recoveryParam?.toString(16).padStart(2, \"0\").slice(-2) ?? \"00\",\n        \"hex\"\n      ).toString(\"base64\"),\n    };\n  }\n\n  generatePubKeyParams(privateKeyHex: string): PubKeyParams {\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n    };\n  }\n\n  async setMetadata(data: MetadataParams, namespace: string | null, options?: RequestInit): Promise<string> {\n    const params = namespace !== null ? { ...data, namespace } : data;\n    const metadataResponse = await post<{ message: string }>(`${this.metadataHost}/set`, params, options, { useAPIKey: true });\n    return metadataResponse.message;\n  }\n\n  async getMetadata(pubKey: PubKeyParams, namespace: string | null, options?: RequestInit): Promise<string> {\n    const params = namespace !== null ? { ...pubKey, namespace } : pubKey;\n    const metadataResponse = await post<{ message: string }>(`${this.metadataHost}/get`, params, options, { useAPIKey: true });\n    return metadataResponse.message;\n  }\n}\n\nexport default MetadataStorageLayer;\n","import { decrypt, Ecies, encrypt, getPublic } from \"@toruslabs/eccrypto\";\n\nimport MetadataStorageLayer, { PubKeyParams } from \"./MetadataStorageLayer\";\nimport { ec } from \"./utils\";\n\nconst WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nconst WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\n\nexport type EciesHex = {\n  iv: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n  mac: string;\n};\n\nexport function encParamsHexToBuf(encParamsHex: EciesHex): Ecies {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\"),\n  };\n}\n\nexport function encParamsBufToHex(encParams: Ecies): EciesHex {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\"),\n  };\n}\n\nexport async function encryptData(privKeyHex: string, d: unknown): Promise<string> {\n  const serializedDec = JSON.stringify(d);\n  const serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n  const encParams = await encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n  const encParamsHex = encParamsBufToHex(encParams);\n  const sData = JSON.stringify(encParamsHex);\n  return sData;\n}\n\nexport async function decryptData<T>(privKeyHex: string, d: string): Promise<T> {\n  const encParamsHex: EciesHex = JSON.parse(d);\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const serializedBuf = await decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedDec = serializedBuf.toString(\"utf-8\");\n  const data: T = JSON.parse(serializedDec);\n  return data;\n}\n\nexport async function getAndDecryptData<T>(m: MetadataStorageLayer, privKeyHex: string, namespace: string): Promise<Record<string, T> | null> {\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const pubKey = keyPair.getPublic();\n  const serializedData = await m.getMetadata({ pub_key_X: pubKey.getX().toString(16), pub_key_Y: pubKey.getY().toString(16) }, namespace);\n  if (!serializedData) {\n    return null;\n  }\n  const data = await decryptData<T>(privKeyHex, serializedData);\n  return data as Record<string, T>;\n}\n\nexport async function encryptAndSetData(m: MetadataStorageLayer, privKeyHex: string, d: Record<string, unknown>, namespace: string): Promise<void> {\n  const sData = await encryptData(privKeyHex, d);\n  const metadataParams = m.generateMetadataParams(sData, privKeyHex);\n  await m.setMetadata(metadataParams, namespace);\n}\n\nexport async function setTorusShare(\n  m: MetadataStorageLayer,\n  webAuthnPubKey: PubKeyParams,\n  webAuthnRefHex: string,\n  subspace: string,\n  subspaceData: unknown\n): Promise<void> {\n  const refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = refKeyPair.getPrivate();\n  const pubKey = ec.keyFromPublic({\n    x: webAuthnPubKey.pub_key_X,\n    y: webAuthnPubKey.pub_key_Y,\n  });\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  let d: Record<string, unknown> = {};\n  if (data) d = data;\n  const serializedSubspaceData = JSON.stringify(subspaceData);\n  const serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n  const encSubspaceData = await encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n  const encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n  d[subspace] = encSubspaceDataHex;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n}\n\nexport async function setDeviceShare(m: MetadataStorageLayer, webAuthnRefHex: string, subspace: string, subspaceData: unknown): Promise<void> {\n  const keyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = keyPair.getPrivate();\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  let d: Record<string, unknown> = {};\n  if (data) d = data;\n  d[subspace] = subspaceData;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n}\n\nexport async function getTorusShare<T>(m: MetadataStorageLayer, webAuthnKeyHex: string, webAuthnRefHex: string, subspace: string): Promise<T | null> {\n  const data = await getAndDecryptData<EciesHex>(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  if (!data) return null;\n  const encParamsHex = data[subspace];\n  if (!encParamsHex) return null;\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n  const privKey = keyPair.getPrivate();\n  const serializedSubspaceDataBuf = await decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n  const subspaceData = JSON.parse(serializedSubspaceData);\n  return subspaceData;\n}\n\nexport async function getDeviceShare<T>(m: MetadataStorageLayer, webAuthnRefHex: string, subspace: string): Promise<T | null> {\n  const data = await getAndDecryptData<T>(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  if (data) return data[subspace];\n  return null;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}