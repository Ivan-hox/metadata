{"ast":null,"code":"import _slicedToArray from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { ConnectionManager } from \"./connection-manager.js\";\nimport { DEFAULT_POPUP_WIDTH_PX, DEFAULT_POPUP_HEIGHT_PX } from \"./core/constants.js\";\nimport { Platform } from \"./core/types.js\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nexport var usePopupConnection = function usePopupConnection() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n    _ref$platform = _ref.platform,\n    platform = _ref$platform === void 0 ? Platform.UNKNOWN : _ref$platform,\n    _ref$widthPx = _ref.widthPx,\n    widthPx = _ref$widthPx === void 0 ? DEFAULT_POPUP_WIDTH_PX : _ref$widthPx,\n    _ref$heightPx = _ref.heightPx,\n    heightPx = _ref$heightPx === void 0 ? DEFAULT_POPUP_HEIGHT_PX : _ref$heightPx;\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    exportedConnection = _useState2[0],\n    setExportedConnection = _useState2[1];\n  var connectionManagerRef = useRef(new ConnectionManager(platform).onConnectionUpdated(function (connection) {\n    setExportedConnection(connection === null || connection === void 0 ? void 0 : connection.export());\n  }));\n  var open = useCallback(function (url) {\n    connectionManagerRef.current.open({\n      heightPx: heightPx,\n      url: url,\n      widthPx: widthPx\n    });\n  }, [connectionManagerRef, widthPx, heightPx]);\n  var close = useCallback(function () {\n    connectionManagerRef.current.close();\n  }, [connectionManagerRef]);\n  useEffect(function () {\n    if (enabled) {\n      connectionManagerRef.current.initialize();\n    } else {\n      connectionManagerRef.current.tearDown();\n    }\n  }, [connectionManagerRef]);\n  return {\n    close: close,\n    connection: exportedConnection,\n    open: open\n  };\n};","map":{"version":3,"mappings":";AAAA,SAASA,iBAAiB,QAAE,yBAA2B;AAEvD,SACEC,sBAAsB,EACtBC,uBAAuB,QACxB,qBAAuB;AACxB,SAASC,QAAQ,QAAmB,iBAAmB;AACvD,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAShE,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,GAKS;EAAA,+EAAN,EAAE;IAAA,oBAJlCC,OAAO;IAAPA,OAAO,6BAAG,IAAI;IAAA,qBACdC,QAAQ;IAARA,QAAQ,8BAAGP,QAAQ,CAACQ,OAAO;IAAA,oBAC3BC,OAAO;IAAPA,OAAO,6BAAGX,sBAAsB;IAAA,qBAChCY,QAAQ;IAARA,QAAQ,8BAAGX,uBAAuB;EAElC,gBAAoDK,QAAQ,CAE1DO,SAAS,CAAC;IAAA;IAFLC,kBAAkB;IAAEC,qBAAqB;EAGhD,IAAMC,oBAAoB,GAAGX,MAAM,CACjC,IAAIN,iBAAiB,CAACU,QAAQ,CAAC,CAACQ,mBAAmB,CACjD,UAACC,UAA6B,EAAI;IAChCH,qBAAqB,CAACG,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEC,MAAM,EAAE,CAAC;EAC7C,CAAC,CACF,CACF;EAED,IAAMC,IAAI,GAAGjB,WAAW,CACtB,UAACkB,GAAW,EAAI;IACdL,oBAAoB,CAACM,OAAO,CAACF,IAAI,CAAC;MAChCR,QAAQ,EAARA,QAAQ;MACRS,GAAG,EAAHA,GAAG;MACHV,OAAO,EAAPA;KACD,CAAC;EACJ,CAAC,EACD,CAACK,oBAAoB,EAAEL,OAAO,EAAEC,QAAQ,CAAC,CAC1C;EAED,IAAMW,KAAK,GAAGpB,WAAW,CAAC,YAAK;IAC7Ba,oBAAoB,CAACM,OAAO,CAACC,KAAK,EAAE;EACtC,CAAC,EAAE,CAACP,oBAAoB,CAAC,CAAC;EAE1BZ,SAAS,CAAC,YAAK;IACb,IAAII,OAAO,EAAE;MACXQ,oBAAoB,CAACM,OAAO,CAACE,UAAU,EAAE;KAC1C,MAAM;MACLR,oBAAoB,CAACM,OAAO,CAACG,QAAQ,EAAE;;EAE3C,CAAC,EAAE,CAACT,oBAAoB,CAAC,CAAC;EAE1B,OAAO;IACLO,KAAK,EAALA,KAAK;IACLL,UAAU,EAAEJ,kBAAkB;IAC9BM,IAAI,EAAJA;GACD;AACH,CAAC","names":["ConnectionManager","DEFAULT_POPUP_WIDTH_PX","DEFAULT_POPUP_HEIGHT_PX","Platform","useCallback","useEffect","useRef","useState","usePopupConnection","enabled","platform","UNKNOWN","widthPx","heightPx","undefined","exportedConnection","setExportedConnection","connectionManagerRef","onConnectionUpdated","connection","export","open","url","current","close","initialize","tearDown"],"sources":["../../src/use-popup-connection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}