{"ast":null,"code":"import { Connection } from '@solana/web3.js';\nimport React, { useMemo } from 'react';\nimport { ConnectionContext } from './useConnection.js';\nexport var ConnectionProvider = function ConnectionProvider(_ref) {\n  var children = _ref.children,\n    endpoint = _ref.endpoint,\n    _ref$config = _ref.config,\n    config = _ref$config === void 0 ? {\n      commitment: 'confirmed'\n    } : _ref$config;\n  var connection = useMemo(function () {\n    return new Connection(endpoint, config);\n  }, [endpoint, config]);\n  return React.createElement(ConnectionContext.Provider, {\n    value: {\n      connection: connection\n    }\n  }, children);\n};","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAA+B,iBAAiB;AACnE,OAAOC,KAAK,IAA6BC,OAAO,QAAQ,OAAO;AAC/D,SAASC,iBAAiB,QAAQ,oBAAoB;AAQtD,OAAO,IAAMC,kBAAkB,GAAgC,SAAlDA,kBAAkB,OAI1B;EAAA,IAHDC,QAAQ,QAARA,QAAQ;IACRC,QAAQ,QAARA,QAAQ;IAAA,mBACRC,MAAM;IAANA,MAAM,4BAAG;MAAEC,UAAU,EAAE;IAAW,CAAE;EAEpC,IAAMC,UAAU,GAAGP,OAAO,CAAC;IAAA,OAAM,IAAIF,UAAU,CAACM,QAAQ,EAAEC,MAAM,CAAC;EAAA,GAAE,CAACD,QAAQ,EAAEC,MAAM,CAAC,CAAC;EAEtF,OAAON,oBAACE,iBAAiB,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEF,UAAU,EAAVA;IAAU;EAAE,GAAGJ,QAAQ,CAA8B;AACrG,CAAC","names":["Connection","React","useMemo","ConnectionContext","ConnectionProvider","children","endpoint","config","commitment","connection","Provider","value"],"sources":["/Users/ivan/Metadata/node_modules/@solana/wallet-adapter-react/src/ConnectionProvider.tsx"],"sourcesContent":["import { Connection, type ConnectionConfig } from '@solana/web3.js';\nimport React, { type FC, type ReactNode, useMemo } from 'react';\nimport { ConnectionContext } from './useConnection.js';\n\nexport interface ConnectionProviderProps {\n    children: ReactNode;\n    endpoint: string;\n    config?: ConnectionConfig;\n}\n\nexport const ConnectionProvider: FC<ConnectionProviderProps> = ({\n    children,\n    endpoint,\n    config = { commitment: 'confirmed' },\n}) => {\n    const connection = useMemo(() => new Connection(endpoint, config), [endpoint, config]);\n\n    return <ConnectionContext.Provider value={{ connection }}>{children}</ConnectionContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}