{"ast":null,"code":"import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport var publicKey = function publicKey(property) {\n  var layout = blob(32, property);\n  var _encodeDecode = encodeDecode(layout),\n    encode = _encodeDecode.encode,\n    decode = _encodeDecode.decode;\n  var publicKeyLayout = layout;\n  publicKeyLayout.decode = function (buffer, offset) {\n    var src = decode(buffer, offset);\n    return new PublicKey(src);\n  };\n  publicKeyLayout.encode = function (publicKey, buffer, offset) {\n    var src = publicKey.toBuffer();\n    return encode(src, buffer, offset);\n  };\n  return publicKeyLayout;\n};","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,QAAgB,uBAAuB;AACpD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,YAAY,QAAQ,YAAS;AAEtC,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,QAAiB,EAAuB;EAC9D,IAAMC,MAAM,GAAGL,IAAI,CAAC,EAAE,EAAEI,QAAQ,CAAC;EACjC,oBAA2BF,YAAY,CAACG,MAAM,CAAC;IAAvCC,MAAM,iBAANA,MAAM;IAAEC,MAAM,iBAANA,MAAM;EAEtB,IAAMC,eAAe,GAAGH,MAA8C;EAEtEG,eAAe,CAACD,MAAM,GAAG,UAACE,MAAc,EAAEC,MAAc,EAAI;IACxD,IAAMC,GAAG,GAAGJ,MAAM,CAACE,MAAM,EAAEC,MAAM,CAAC;IAClC,OAAO,IAAIT,SAAS,CAACU,GAAG,CAAC;EAC7B,CAAC;EAEDH,eAAe,CAACF,MAAM,GAAG,UAACH,SAAoB,EAAEM,MAAc,EAAEC,MAAc,EAAI;IAC9E,IAAMC,GAAG,GAAGR,SAAS,CAACS,QAAQ,EAAE;IAChC,OAAON,MAAM,CAACK,GAAG,EAAEF,MAAM,EAAEC,MAAM,CAAC;EACtC,CAAC;EAED,OAAOF,eAAe;AAC1B,CAAC","names":["blob","PublicKey","encodeDecode","publicKey","property","layout","encode","decode","publicKeyLayout","buffer","offset","src","toBuffer"],"sources":["/Users/ivan/Metadata/node_modules/@solana/buffer-layout-utils/src/web3.ts"],"sourcesContent":["import { blob, Layout } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base';\n\nexport const publicKey = (property?: string): Layout<PublicKey> => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const publicKeyLayout = layout as Layout<unknown> as Layout<PublicKey>;\n\n    publicKeyLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n\n    publicKeyLayout.encode = (publicKey: PublicKey, buffer: Buffer, offset: number) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n\n    return publicKeyLayout;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}