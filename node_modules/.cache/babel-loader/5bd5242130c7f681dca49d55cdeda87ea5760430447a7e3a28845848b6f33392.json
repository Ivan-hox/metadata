{"ast":null,"code":"import _classCallCheck from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RegisterWalletEvent_detail;\n/**\n * Register a {@link \"@wallet-standard/base\".Wallet} as a Standard Wallet with the app.\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to notify the app that the Wallet is\n * ready to be registered.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowAppReadyEvent} to listen for a notification from\n * the app that the app is ready to register the Wallet.\n *\n * This combination of event dispatch and listener guarantees that the Wallet will be registered synchronously as soon\n * as the app is ready whether the Wallet loads before or after the app.\n *\n * @param wallet Wallet to register.\n *\n * @group Wallet\n */\nexport function registerWallet(wallet) {\n  var callback = function callback(_ref) {\n    var register = _ref.register;\n    return register(wallet);\n  };\n  try {\n    window.dispatchEvent(new RegisterWalletEvent(callback));\n  } catch (error) {\n    console.error('wallet-standard:register-wallet event could not be dispatched\\n', error);\n  }\n  try {\n    window.addEventListener('wallet-standard:app-ready', function (_ref2) {\n      var api = _ref2.detail;\n      return callback(api);\n    });\n  } catch (error) {\n    console.error('wallet-standard:app-ready event listener could not be added\\n', error);\n  }\n}\nvar RegisterWalletEvent = /*#__PURE__*/function (_Event) {\n  _inherits(RegisterWalletEvent, _Event);\n  var _super = _createSuper(RegisterWalletEvent);\n  function RegisterWalletEvent(callback) {\n    var _this;\n    _classCallCheck(this, RegisterWalletEvent);\n    _this = _super.call(this, 'wallet-standard:register-wallet', {\n      bubbles: false,\n      cancelable: false,\n      composed: false\n    });\n    _RegisterWalletEvent_detail.set(_assertThisInitialized(_this), void 0);\n    __classPrivateFieldSet(_assertThisInitialized(_this), _RegisterWalletEvent_detail, callback, \"f\");\n    return _this;\n  }\n  _createClass(RegisterWalletEvent, [{\n    key: \"detail\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _RegisterWalletEvent_detail, \"f\");\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'wallet-standard:register-wallet';\n    }\n    /** @deprecated */\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      throw new Error('preventDefault cannot be called');\n    }\n    /** @deprecated */\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      throw new Error('stopImmediatePropagation cannot be called');\n    }\n    /** @deprecated */\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      throw new Error('stopPropagation cannot be called');\n    }\n  }]);\n  return RegisterWalletEvent;\n}( /*#__PURE__*/_wrapNativeSuper(Event));\n_RegisterWalletEvent_detail = new WeakMap();\n/**\n * @deprecated Use {@link registerWallet} instead.\n *\n * @group Deprecated\n */\nexport function DEPRECATED_registerWallet(wallet) {\n  var _a;\n  registerWallet(wallet);\n  try {\n    ((_a = window.navigator).wallets || (_a.wallets = [])).push(function (_ref3) {\n      var register = _ref3.register;\n      return register(wallet);\n    });\n  } catch (error) {\n    console.error('window.navigator.wallets could not be pushed\\n', error);\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAQA;;;;;;;;;;;;;;;;AAgBA,OAAM,SAAUA,cAAc,CAACC,MAAc;EACzC,IAAMC,QAAQ,GAAsC,SAA9CA,QAAQ;IAAA,IAAyCC,QAAQ,QAARA,QAAQ;IAAA,OAAOA,QAAQ,CAACF,MAAM,CAAC;EAAA;EACtF,IAAI;IACCG,MAA6B,CAACC,aAAa,CAAC,IAAIC,mBAAmB,CAACJ,QAAQ,CAAC,CAAC;GAClF,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iEAAiE,EAAEA,KAAK,CAAC;;EAE3F,IAAI;IACCH,MAA6B,CAACK,gBAAgB,CAAC,2BAA2B,EAAE;MAAA,IAAWC,GAAG,SAAXC,MAAM;MAAA,OAClFT,QAAQ,CAACQ,GAAG,CAAC;IAAA,EAChB;GACJ,CAAC,OAAOH,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+DAA+D,EAAEA,KAAK,CAAC;;AAE7F;AAAC,IAEKD,mBAAoB;EAAA;EAAA;EAWtB,6BAAYJ,QAA2C;IAAA;IAAA;IACnD,0BAAM,iCAAiC,EAAE;MACrCU,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE;KACb;IAfLC;IAgBIC,sDAAID,6BAAWb,QAAQ;IAAC;EAC5B;EAAC;IAAA;IAAA,KAfD,eAAU;MACN,OAAOe,2BAAI,mCAAQ;IACvB;EAAC;IAAA;IAAA,KAED,eAAQ;MACJ,OAAO,iCAA0C;IACrD;IAWA;EAAA;IAAA;IAAA,OACA,0BAAc;MACV,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;IACtD;IAEA;EAAA;IAAA;IAAA,OACA,oCAAwB;MACpB,MAAM,IAAIA,KAAK,CAAC,2CAA2C,CAAC;IAChE;IAEA;EAAA;IAAA;IAAA,OACA,2BAAe;MACX,MAAM,IAAIA,KAAK,CAAC,kCAAkC,CAAC;IACvD;EAAC;EAAA;AAAA,iCAjC6BC,KAAK;;AAoCvC;;;;;AAKA,OAAM,SAAUC,yBAAyB,CAACnB,MAAc;;EACpDD,cAAc,CAACC,MAAM,CAAC;EACtB,IAAI;IACA,OAAEG,MAAmC,CAACiB,SAAS,EAACC,OAAO,QAAPA,OAAO,GAAK,EAAE,GAAEC,IAAI,CAAC;MAAA,IAAGpB,QAAQ,SAARA,QAAQ;MAAA,OAAOA,QAAQ,CAACF,MAAM,CAAC;IAAA,EAAC;GAC3G,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;;AAE9E","names":["registerWallet","wallet","callback","register","window","dispatchEvent","RegisterWalletEvent","error","console","addEventListener","api","detail","bubbles","cancelable","composed","_RegisterWalletEvent_detail","__classPrivateFieldSet","__classPrivateFieldGet","Error","Event","DEPRECATED_registerWallet","navigator","wallets","push"],"sources":["/Users/ivan/Metadata/node_modules/@wallet-standard/wallet/src/register.ts"],"sourcesContent":["import type {\n    DEPRECATED_WalletsWindow,\n    Wallet,\n    WalletEventsWindow,\n    WindowRegisterWalletEvent,\n    WindowRegisterWalletEventCallback,\n} from '@wallet-standard/base';\n\n/**\n * Register a {@link \"@wallet-standard/base\".Wallet} as a Standard Wallet with the app.\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to notify the app that the Wallet is\n * ready to be registered.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowAppReadyEvent} to listen for a notification from\n * the app that the app is ready to register the Wallet.\n *\n * This combination of event dispatch and listener guarantees that the Wallet will be registered synchronously as soon\n * as the app is ready whether the Wallet loads before or after the app.\n *\n * @param wallet Wallet to register.\n *\n * @group Wallet\n */\nexport function registerWallet(wallet: Wallet): void {\n    const callback: WindowRegisterWalletEventCallback = ({ register }) => register(wallet);\n    try {\n        (window as WalletEventsWindow).dispatchEvent(new RegisterWalletEvent(callback));\n    } catch (error) {\n        console.error('wallet-standard:register-wallet event could not be dispatched\\n', error);\n    }\n    try {\n        (window as WalletEventsWindow).addEventListener('wallet-standard:app-ready', ({ detail: api }) =>\n            callback(api)\n        );\n    } catch (error) {\n        console.error('wallet-standard:app-ready event listener could not be added\\n', error);\n    }\n}\n\nclass RegisterWalletEvent extends Event implements WindowRegisterWalletEvent {\n    readonly #detail: WindowRegisterWalletEventCallback;\n\n    get detail() {\n        return this.#detail;\n    }\n\n    get type() {\n        return 'wallet-standard:register-wallet' as const;\n    }\n\n    constructor(callback: WindowRegisterWalletEventCallback) {\n        super('wallet-standard:register-wallet', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n        this.#detail = callback;\n    }\n\n    /** @deprecated */\n    preventDefault(): never {\n        throw new Error('preventDefault cannot be called');\n    }\n\n    /** @deprecated */\n    stopImmediatePropagation(): never {\n        throw new Error('stopImmediatePropagation cannot be called');\n    }\n\n    /** @deprecated */\n    stopPropagation(): never {\n        throw new Error('stopPropagation cannot be called');\n    }\n}\n\n/**\n * @deprecated Use {@link registerWallet} instead.\n *\n * @group Deprecated\n */\nexport function DEPRECATED_registerWallet(wallet: Wallet): void {\n    registerWallet(wallet);\n    try {\n        ((window as DEPRECATED_WalletsWindow).navigator.wallets ||= []).push(({ register }) => register(wallet));\n    } catch (error) {\n        console.error('window.navigator.wallets could not be pushed\\n', error);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}