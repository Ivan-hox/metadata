{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keysTypeMap = exports.publicKey = void 0;\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar beet_1 = require(\"@metaplex-foundation/beet\");\nvar BEET_SOLANA_PACKAGE = '@metaplex-foundation/beet-solana';\nvar SOLANA_WEB3_PACKAGE = '@solana/web3.js';\nvar uint8Array32 = (0, beet_1.fixedSizeUint8Array)(32);\n/**\n * De/Serializer for solana {@link PublicKey}s aka `publicKey`.\n *\n *\n * ## Using PublicKey Directly\n *\n * ```ts\n * import { publicKey } from '@metaplex-foundation/beet-solana'\n *\n * const generatedKey  = Keypair.generate().publicKey\n * const buf = Buffer.alloc(publicKey.byteSize)\n * beet.write(buf, 0, generatedKey)\n * beet.read(buf, 0) // same as generatedKey\n * ```\n *\n * ## PublicKey as part of a Struct Configuration\n *\n * ```ts\n * import { publicKey } from '@metaplex-foundation/beet-solana'\n *\n * type InstructionArgs = {\n *   authority: web3.PublicKey\n * }\n *\n * const createStruct = new beet.BeetArgsStruct<InstructionArgs>(\n *   [\n *     ['authority', publicKey]\n *   ],\n *   'InstructionArgs'\n * )\n * ```\n *\n * @category beet/solana\n */\nexports.publicKey = {\n  write: function write(buf, offset, value) {\n    var arr = value.toBytes();\n    uint8Array32.write(buf, offset, arr);\n  },\n  read: function read(buf, offset) {\n    var bytes = uint8Array32.read(buf, offset);\n    return new web3_js_1.PublicKey(bytes);\n  },\n  byteSize: uint8Array32.byteSize,\n  description: 'PublicKey'\n};\n/**\n * Maps solana keys beet exports to metadata which describes in which package it\n * is defined as well as which TypeScript type is used to represent the\n * deserialized value in JavaScript.\n *\n * @category TypeDefinition\n */\nexports.keysTypeMap = {\n  publicKey: {\n    beet: 'publicKey',\n    isFixable: false,\n    sourcePack: BEET_SOLANA_PACKAGE,\n    ts: 'PublicKey',\n    pack: SOLANA_WEB3_PACKAGE\n  }\n};","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAKA,IAAMA,mBAAmB,GAAG,kCAAkC;AAC9D,IAAMC,mBAAmB,GAAG,iBAAiB;AAE7C,IAAMC,YAAY,GAAG,8BAAmB,EAAC,EAAE,CAAC;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCaC,iBAAS,GAA6B;EACjDC,KAAK,EAAE,eAAUC,GAAW,EAAEC,MAAc,EAAEC,KAAgB;IAC5D,IAAMC,GAAG,GAAGD,KAAK,CAACE,OAAO,EAAE;IAC3BP,YAAY,CAACE,KAAK,CAACC,GAAG,EAAEC,MAAM,EAAEE,GAAG,CAAC;EACtC,CAAC;EACDE,IAAI,EAAE,cAAUL,GAAW,EAAEC,MAAc;IACzC,IAAMK,KAAK,GAAGT,YAAY,CAACQ,IAAI,CAACL,GAAG,EAAEC,MAAM,CAAC;IAC5C,OAAO,IAAIM,mBAAS,CAACD,KAAK,CAAC;EAC7B,CAAC;EAEDE,QAAQ,EAAEX,YAAY,CAACW,QAAQ;EAC/BC,WAAW,EAAE;CACd;AAkBD;;;;;;;AAOaX,mBAAW,GAAgB;EACtCY,SAAS,EAAE;IACTC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAElB,mBAAmB;IAC/BmB,EAAE,EAAE,WAAW;IACfC,IAAI,EAAEnB;;CAET","names":["BEET_SOLANA_PACKAGE","SOLANA_WEB3_PACKAGE","uint8Array32","exports","write","buf","offset","value","arr","toBytes","read","bytes","web3_js_1","byteSize","description","publicKey","beet","isFixable","sourcePack","ts","pack"],"sources":["../../../src/keys.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}