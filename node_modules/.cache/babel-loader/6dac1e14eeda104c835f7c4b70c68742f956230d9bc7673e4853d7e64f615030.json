{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"./utils\");\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar jsbi_1 = __importDefault(require(\"jsbi\"));\nvar MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nvar rotl = function rotl(x, k) {\n  return jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k))))));\n};\nvar Xoshiro = /*#__PURE__*/function () {\n  function Xoshiro(seed) {\n    var _this = this;\n    _classCallCheck(this, Xoshiro);\n    this.next = function () {\n      return new bignumber_js_1.default(_this.roll().toString());\n    };\n    this.nextDouble = function () {\n      return new bignumber_js_1.default(_this.roll().toString()).div(MAX_UINT64 + 1);\n    };\n    this.nextInt = function (low, high) {\n      return Math.floor(_this.nextDouble().toNumber() * (high - low + 1) + low);\n    };\n    this.nextByte = function () {\n      return _this.nextInt(0, 255);\n    };\n    this.nextData = function (count) {\n      return _toConsumableArray(new Array(count)).map(function () {\n        return _this.nextByte();\n      });\n    };\n    var digest = utils_1.sha256Hash(seed);\n    this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n    this.setS(digest);\n  }\n  _createClass(Xoshiro, [{\n    key: \"setS\",\n    value: function setS(digest) {\n      for (var i = 0; i < 4; i++) {\n        var o = i * 8;\n        var v = jsbi_1.default.BigInt(0);\n        for (var n = 0; n < 8; n++) {\n          v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n          v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n        }\n        this.s[i] = jsbi_1.default.asUintN(64, v);\n      }\n    }\n  }, {\n    key: \"roll\",\n    value: function roll() {\n      var result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n      var t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n      this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n      this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n      this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n      this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n      this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n      this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n      return result;\n    }\n  }]);\n  return Xoshiro;\n}();\nexports.default = Xoshiro;","map":{"version":3,"mappings":"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","names":["MAX_UINT64","rotl","x","k","jsbi_1","bitwiseXor","asUintN","leftShift","BigInt","signedRightShift","subtract","Xoshiro","seed","bignumber_js_1","roll","toString","div","low","high","Math","floor","nextDouble","toNumber","nextInt","count","Array","map","nextByte","digest","utils_1","s","setS","i","o","v","n","bitwiseOr","result","multiply","t","exports"],"sources":["/Users/ivan/Metadata/node_modules/@ngraveio/bc-ur/src/xoshiro.ts"],"sourcesContent":["import { sha256Hash } from \"./utils\";\nimport BigNumber from 'bignumber.js'\nimport JSBI from 'jsbi'\n\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nconst rotl = (x: JSBI, k: number): JSBI => JSBI.bitwiseXor(\n  JSBI.asUintN(64, JSBI.leftShift(x, JSBI.BigInt(k))),\n  JSBI.BigInt(\n    JSBI.asUintN(\n      64,\n      JSBI.signedRightShift(x, (JSBI.subtract(JSBI.BigInt(64), JSBI.BigInt(k))))\n    )\n  )\n);\n\nexport default class Xoshiro {\n  private s: JSBI[];\n\n  constructor(seed: Buffer) {\n    const digest = sha256Hash(seed);\n\n    this.s = [JSBI.BigInt(0), JSBI.BigInt(0), JSBI.BigInt(0), JSBI.BigInt(0)];\n    this.setS(digest);\n  }\n\n  private setS(digest: Buffer) {\n    for (let i = 0; i < 4; i++) {\n      let o = i * 8;\n      let v = JSBI.BigInt(0);\n      for (let n = 0; n < 8; n++) {\n        v = JSBI.asUintN(64, JSBI.leftShift(v, JSBI.BigInt(8)));\n        v = JSBI.asUintN(64, JSBI.bitwiseOr(v, JSBI.BigInt(digest[o + n])));\n      }\n      this.s[i] = JSBI.asUintN(64, v);\n    }\n  }\n\n  private roll(): JSBI {\n    const result = JSBI.asUintN(\n      64,\n      JSBI.multiply(\n        rotl(\n          JSBI.asUintN(64, JSBI.multiply(this.s[1], JSBI.BigInt(5))),\n          7\n        ),\n        JSBI.BigInt(9)\n      )\n    );\n\n    const t = JSBI.asUintN(64, JSBI.leftShift(this.s[1], JSBI.BigInt(17)));\n\n    this.s[2] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[2], JSBI.BigInt(this.s[0])));\n    this.s[3] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[3], JSBI.BigInt(this.s[1])));\n    this.s[1] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[1], JSBI.BigInt(this.s[2])));\n    this.s[0] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[0], JSBI.BigInt(this.s[3])));\n\n    this.s[2] = JSBI.asUintN(64, JSBI.bitwiseXor(this.s[2], JSBI.BigInt(t)));\n\n    this.s[3] = JSBI.asUintN(64, rotl(this.s[3], 45));\n\n    return result;\n  }\n\n  next = (): BigNumber => {\n    return new BigNumber(this.roll().toString())\n  }\n\n  nextDouble = (): BigNumber => {\n    return new BigNumber(this.roll().toString()).div(MAX_UINT64 + 1)\n  }\n\n  nextInt = (low: number, high: number): number => {\n    return Math.floor((this.nextDouble().toNumber() * (high - low + 1)) + low);\n  }\n\n  nextByte = () => this.nextInt(0, 255);\n\n  nextData = (count: number) => (\n    [...new Array(count)].map(() => this.nextByte())\n  )\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}