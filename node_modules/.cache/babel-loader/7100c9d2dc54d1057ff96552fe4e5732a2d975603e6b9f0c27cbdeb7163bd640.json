{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.publicKey = void 0;\nvar buffer_layout_1 = require(\"@solana/buffer-layout\");\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar base_1 = require(\"./base\");\nvar publicKey = function publicKey(property) {\n  var layout = (0, buffer_layout_1.blob)(32, property);\n  var _ref = (0, base_1.encodeDecode)(layout),\n    encode = _ref.encode,\n    decode = _ref.decode;\n  var publicKeyLayout = layout;\n  publicKeyLayout.decode = function (buffer, offset) {\n    var src = decode(buffer, offset);\n    return new web3_js_1.PublicKey(src);\n  };\n  publicKeyLayout.encode = function (publicKey, buffer, offset) {\n    var src = publicKey.toBuffer();\n    return encode(src, buffer, offset);\n  };\n  return publicKeyLayout;\n};\nexports.publicKey = publicKey;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEO,IAAMA,SAAS,GAAG,SAAZA,SAAS,CAAIC,QAAiB,EAAuB;EAC9D,IAAMC,MAAM,GAAG,wBAAI,EAAC,EAAE,EAAED,QAAQ,CAAC;EACjC,WAA2B,uBAAY,EAACC,MAAM,CAAC;IAAvCC,MAAM,QAANA,MAAM;IAAEC,MAAM,QAANA,MAAM;EAEtB,IAAMC,eAAe,GAAGH,MAA8C;EAEtEG,eAAe,CAACD,MAAM,GAAG,UAACE,MAAc,EAAEC,MAAc,EAAI;IACxD,IAAMC,GAAG,GAAGJ,MAAM,CAACE,MAAM,EAAEC,MAAM,CAAC;IAClC,OAAO,IAAIE,mBAAS,CAACD,GAAG,CAAC;EAC7B,CAAC;EAEDH,eAAe,CAACF,MAAM,GAAG,UAACH,SAAoB,EAAEM,MAAc,EAAEC,MAAc,EAAI;IAC9E,IAAMC,GAAG,GAAGR,SAAS,CAACU,QAAQ,EAAE;IAChC,OAAOP,MAAM,CAACK,GAAG,EAAEF,MAAM,EAAEC,MAAM,CAAC;EACtC,CAAC;EAED,OAAOF,eAAe;AAC1B,CAAC;AAjBYM,iBAAS","names":["publicKey","property","layout","encode","decode","publicKeyLayout","buffer","offset","src","web3_js_1","toBuffer","exports"],"sources":["/Users/ivan/Metadata/node_modules/@solana/buffer-layout-utils/src/web3.ts"],"sourcesContent":["import { blob, Layout } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base';\n\nexport const publicKey = (property?: string): Layout<PublicKey> => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const publicKeyLayout = layout as Layout<unknown> as Layout<PublicKey>;\n\n    publicKeyLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n\n    publicKeyLayout.encode = (publicKey: PublicKey, buffer: Buffer, offset: number) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n\n    return publicKeyLayout;\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}