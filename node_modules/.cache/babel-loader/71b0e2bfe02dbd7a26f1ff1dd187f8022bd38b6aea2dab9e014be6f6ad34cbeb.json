{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNonTransferable = exports.NON_TRANSFERABLE_SIZE = exports.NonTransferableLayout = void 0;\nvar buffer_layout_1 = require(\"@solana/buffer-layout\");\nvar extensionType_js_1 = require(\"./extensionType.js\");\n/** Buffer layout for de/serializing an account */\nexports.NonTransferableLayout = (0, buffer_layout_1.struct)([]);\nexports.NON_TRANSFERABLE_SIZE = exports.NonTransferableLayout.span;\nfunction getNonTransferable(mint) {\n  var extensionData = (0, extensionType_js_1.getExtensionData)(extensionType_js_1.ExtensionType.NonTransferable, mint.tlvData);\n  if (extensionData !== null) {\n    return exports.NonTransferableLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}\nexports.getNonTransferable = getNonTransferable;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;AAKA;AACaA,6BAAqB,GAAG,0BAAM,EAAkB,EAAE,CAAC;AAEnDA,6BAAqB,GAAGA,6BAAqB,CAACC,IAAI;AAE/D,SAAgBC,kBAAkB,CAACC,IAAU;EACzC,IAAMC,aAAa,GAAG,uCAAgB,EAACC,gCAAa,CAACC,eAAe,EAAEH,IAAI,CAACI,OAAO,CAAC;EACnF,IAAIH,aAAa,KAAK,IAAI,EAAE;IACxB,OAAOJ,6BAAqB,CAACQ,MAAM,CAACJ,aAAa,CAAC;GACrD,MAAM;IACH,OAAO,IAAI;;AAEnB;AAPAJ","names":["exports","span","getNonTransferable","mint","extensionData","extensionType_js_1","NonTransferable","tlvData","decode"],"sources":["/Users/ivan/Metadata/node_modules/@solana/spl-token/src/extensions/nonTransferable.ts"],"sourcesContent":["import { struct } from '@solana/buffer-layout';\nimport type { Mint } from '../state/mint.js';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n\n/** Non-transferable state as stored by the program */\nexport interface NonTransferable {} // eslint-disable-line\n\n/** Buffer layout for de/serializing an account */\nexport const NonTransferableLayout = struct<NonTransferable>([]);\n\nexport const NON_TRANSFERABLE_SIZE = NonTransferableLayout.span;\n\nexport function getNonTransferable(mint: Mint): NonTransferable | null {\n    const extensionData = getExtensionData(ExtensionType.NonTransferable, mint.tlvData);\n    if (extensionData !== null) {\n        return NonTransferableLayout.decode(extensionData);\n    } else {\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}