{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patchTags = void 0;\nvar lib_1 = require(\"./lib\");\nvar alreadyPatchedTag = [];\nvar patchTags = function patchTags(tags) {\n  tags.forEach(function (tag) {\n    if (alreadyPatchedTag.find(function (i) {\n      return i === tag;\n    })) return;\n    (0, lib_1.addSemanticEncode)(tag, function (data) {\n      if (data instanceof lib_1.DataItem) {\n        if (data.getTag() === tag) {\n          return data.getData();\n        }\n      }\n    });\n    (0, lib_1.addSemanticDecode)(tag, function (data) {\n      return new lib_1.DataItem(data, tag);\n    });\n    alreadyPatchedTag.push(tag);\n  });\n};\nexports.patchTags = patchTags;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA,IAAMA,iBAAiB,GAAa,EAAE;AAC/B,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,IAAc,EAAU;EAChDA,IAAI,CAACC,OAAO,CAAC,UAACC,GAAG,EAAI;IACnB,IAAIJ,iBAAiB,CAACK,IAAI,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,KAAKF,GAAG;IAAA,EAAC,EAAE;IAC9C,2BAAiB,EAACA,GAAG,EAAE,UAACG,IAAS,EAAI;MACnC,IAAIA,IAAI,YAAYC,cAAQ,EAAE;QAC5B,IAAID,IAAI,CAACE,MAAM,EAAE,KAAKL,GAAG,EAAE;UACzB,OAAOG,IAAI,CAACG,OAAO,EAAE;;;IAG3B,CAAC,CAAC;IACF,2BAAiB,EAACN,GAAG,EAAE,UAACG,IAAS,EAAI;MACnC,OAAO,IAAIC,cAAQ,CAACD,IAAI,EAAEH,GAAG,CAAC;IAChC,CAAC,CAAC;IACFJ,iBAAiB,CAACW,IAAI,CAACP,GAAG,CAAC;EAC7B,CAAC,CAAC;AACJ,CAAC;AAfYQ,iBAAS","names":["alreadyPatchedTag","patchTags","tags","forEach","tag","find","i","data","lib_1","getTag","getData","push","exports"],"sources":["/Users/ivan/Metadata/node_modules/@keystonehq/bc-ur-registry/src/utils.ts"],"sourcesContent":["import { addSemanticDecode, addSemanticEncode, DataItem } from './lib';\n\nconst alreadyPatchedTag: number[] = [];\nexport const patchTags = (tags: number[]): void => {\n  tags.forEach((tag) => {\n    if (alreadyPatchedTag.find((i) => i === tag)) return;\n    addSemanticEncode(tag, (data: any) => {\n      if (data instanceof DataItem) {\n        if (data.getTag() === tag) {\n          return data.getData();\n        }\n      }\n    });\n    addSemanticDecode(tag, (data: any) => {\n      return new DataItem(data, tag);\n    });\n    alreadyPatchedTag.push(tag);\n  });\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}