{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar errors_1 = require(\"./errors\");\nvar utils_1 = require(\"./utils\");\nvar cbor_1 = require(\"./cbor\");\nvar UR = /*#__PURE__*/function () {\n  function UR(_cborPayload) {\n    var _type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'bytes';\n    _classCallCheck(this, UR);\n    this._cborPayload = _cborPayload;\n    this._type = _type;\n    if (!utils_1.isURType(this._type)) {\n      throw new errors_1.InvalidTypeError();\n    }\n  }\n  _createClass(UR, [{\n    key: \"decodeCBOR\",\n    value: function decodeCBOR() {\n      return cbor_1.cborDecode(this._cborPayload);\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"cbor\",\n    get: function get() {\n      return this._cborPayload;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(ur2) {\n      return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n    }\n  }], [{\n    key: \"fromBuffer\",\n    value: function fromBuffer(buf) {\n      return new UR(cbor_1.cborEncode(buf));\n    }\n  }, {\n    key: \"from\",\n    value: function from(value, encoding) {\n      return UR.fromBuffer(Buffer.from(value, encoding));\n    }\n  }]);\n  return UR;\n}();\nexports.default = UR;","map":{"version":3,"mappings":";;;;;;;AAAA;AACA;AACA;AAAgD,IAE3BA,EAAE;EACrB,YACUC,YAAoB,EACG;IAAA,IAAvBC,4EAAgB,OAAO;IAAA;IADvB,iBAAY,GAAZD,YAAY;IACZ,UAAK,GAALC,KAAK;IAEb,IAAI,CAACC,gBAAQ,CAAC,IAAI,CAACD,KAAK,CAAC,EAAE;MACzB,MAAM,IAAIE,yBAAgB,EAAE;;EAEhC;EAAC;IAAA;IAAA,OAUM,sBAAU;MACf,OAAOC,iBAAU,CAAC,IAAI,CAACJ,YAAY,CAAC;IACtC;EAAC;IAAA;IAAA,KAED,eAAQ;MAAK,OAAO,IAAI,CAACC,KAAK;IAAE;EAAC;IAAA;IAAA,KACjC,eAAQ;MAAK,OAAO,IAAI,CAACD,YAAY;IAAE;EAAC;IAAA;IAAA,OAEjC,gBAAOK,GAAO;MACnB,OAAO,IAAI,CAACC,IAAI,KAAKD,GAAG,CAACC,IAAI,IAAI,IAAI,CAACC,IAAI,CAACC,MAAM,CAACH,GAAG,CAACE,IAAI,CAAC;IAC7D;EAAC;IAAA;IAAA,OAjBM,oBAAkBE,GAAW;MAClC,OAAO,IAAIV,EAAE,CAACK,iBAAU,CAACK,GAAG,CAAC,CAAC;IAChC;EAAC;IAAA;IAAA,OAEM,cAAYC,KAAU,EAAEC,QAAyB;MACtD,OAAOZ,EAAE,CAACa,UAAU,CAACC,MAAM,CAACC,IAAI,CAACJ,KAAK,EAAEC,QAAQ,CAAC,CAAC;IACpD;EAAC;EAAA;AAAA;AAhBHI","names":["UR","_cborPayload","_type","utils_1","errors_1","cbor_1","ur2","type","cbor","equals","buf","value","encoding","fromBuffer","Buffer","from","exports"],"sources":["/Users/ivan/Metadata/node_modules/@ngraveio/bc-ur/src/ur.ts"],"sourcesContent":["import { InvalidTypeError } from \"./errors\";\nimport { isURType } from \"./utils\";\nimport { cborEncode, cborDecode } from './cbor';\n\nexport default class UR {\n  constructor(\n    private _cborPayload: Buffer,\n    private _type: string = 'bytes'\n  ) {\n    if (!isURType(this._type)) {\n      throw new InvalidTypeError();\n    }\n  }\n\n  public static fromBuffer(buf: Buffer) {\n    return new UR(cborEncode(buf));\n  }\n\n  public static from(value: any, encoding?: BufferEncoding) {\n    return UR.fromBuffer(Buffer.from(value, encoding));\n  }\n\n  public decodeCBOR(): Buffer {\n    return cborDecode(this._cborPayload);\n  }\n\n  get type() { return this._type; }\n  get cbor() { return this._cborPayload; }\n\n  public equals(ur2: UR) {\n    return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n  }\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}