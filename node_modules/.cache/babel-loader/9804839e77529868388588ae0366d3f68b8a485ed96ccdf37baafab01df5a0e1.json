{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSigners = void 0;\nvar web3_js_1 = require(\"@solana/web3.js\");\n/** @internal */\nfunction getSigners(signerOrMultisig, multiSigners) {\n  return signerOrMultisig instanceof web3_js_1.PublicKey ? [signerOrMultisig, multiSigners] : [signerOrMultisig.publicKey, [signerOrMultisig]];\n}\nexports.getSigners = getSigners;","map":{"version":3,"mappings":";;;;;;AACA;AAEA;AACA,SAAgBA,UAAU,CAACC,gBAAoC,EAAEC,YAAsB;EACnF,OAAOD,gBAAgB,YAAYE,mBAAS,GACtC,CAACF,gBAAgB,EAAEC,YAAY,CAAC,GAChC,CAACD,gBAAgB,CAACG,SAAS,EAAE,CAACH,gBAAgB,CAAC,CAAC;AAC1D;AAJAI","names":["getSigners","signerOrMultisig","multiSigners","web3_js_1","publicKey","exports"],"sources":["/Users/ivan/Metadata/node_modules/@solana/spl-token/src/actions/internal.ts"],"sourcesContent":["import type { Signer } from '@solana/web3.js';\nimport { PublicKey } from '@solana/web3.js';\n\n/** @internal */\nexport function getSigners(signerOrMultisig: Signer | PublicKey, multiSigners: Signer[]): [PublicKey, Signer[]] {\n    return signerOrMultisig instanceof PublicKey\n        ? [signerOrMultisig, multiSigners]\n        : [signerOrMultisig.publicKey, [signerOrMultisig]];\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}