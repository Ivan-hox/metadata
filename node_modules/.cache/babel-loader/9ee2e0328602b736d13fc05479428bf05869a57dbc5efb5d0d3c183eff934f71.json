{"ast":null,"code":"import _toConsumableArray from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { isWalletAdapterCompatibleWallet, StandardWalletAdapter } from '@solana/wallet-standard-wallet-adapter-base';\nimport { DEPRECATED_getWallets } from '@wallet-standard/app';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nexport function useStandardWalletAdapters(adapters) {\n  var _useConstant = useConstant(function () {\n      return DEPRECATED_getWallets();\n    }),\n    get = _useConstant.get,\n    on = _useConstant.on;\n  var _useState = useState(function () {\n      return wrapWalletsWithAdapters(get());\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    standardAdapters = _useState2[0],\n    setStandardAdapters = _useState2[1];\n  var warnings = useConstant(function () {\n    return new Set();\n  });\n  useEffect(function () {\n    var listeners = [on('register', function () {\n      for (var _len = arguments.length, wallets = new Array(_len), _key = 0; _key < _len; _key++) {\n        wallets[_key] = arguments[_key];\n      }\n      return setStandardAdapters(function (standardAdapters) {\n        return [].concat(_toConsumableArray(standardAdapters), _toConsumableArray(wrapWalletsWithAdapters(wallets)));\n      });\n    }), on('unregister', function () {\n      for (var _len2 = arguments.length, wallets = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        wallets[_key2] = arguments[_key2];\n      }\n      return setStandardAdapters(function (standardAdapters) {\n        return standardAdapters.filter(function (standardAdapter) {\n          return wallets.some(function (wallet) {\n            return wallet === standardAdapter.wallet;\n          });\n        });\n      });\n    })];\n    return function () {\n      return listeners.forEach(function (destroy) {\n        return destroy();\n      });\n    };\n  }, [on]);\n  return useMemo(function () {\n    return [].concat(_toConsumableArray(standardAdapters), _toConsumableArray(adapters.filter(function (_ref) {\n      var name = _ref.name;\n      if (standardAdapters.some(function (standardAdapter) {\n        return standardAdapter.name === name;\n      })) {\n        if (!warnings.has(name)) {\n          warnings.add(name);\n          console.warn(\"\".concat(name, \" was registered as a Standard Wallet. The Wallet Adapter for \").concat(name, \" can be removed from your app.\"));\n        }\n        return false;\n      }\n      return true;\n    })));\n  }, [standardAdapters, adapters, warnings]);\n}\nfunction useConstant(fn) {\n  var ref = useRef();\n  if (!ref.current) {\n    ref.current = {\n      value: fn()\n    };\n  }\n  return ref.current.value;\n}\nfunction wrapWalletsWithAdapters(wallets) {\n  return wallets.filter(isWalletAdapterCompatibleWallet).map(function (wallet) {\n    return new StandardWalletAdapter({\n      wallet: wallet\n    });\n  });\n}","map":{"version":3,"mappings":";;AACA,SAASA,+BAA+B,EAAEC,qBAAqB,QAAQ,6CAA6C;AACpH,SAASC,qBAAqB,QAAQ,sBAAsB;AAE5D,SAASC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE5D,OAAM,SAAUC,yBAAyB,CAACC,QAAmB;EACzD,mBAAoBC,WAAW,CAAC;MAAA,OAAMP,qBAAqB,EAAE;IAAA,EAAC;IAAtDQ,GAAG,gBAAHA,GAAG;IAAEC,EAAE,gBAAFA,EAAE;EACf,gBAAgDL,QAAQ,CAAC;MAAA,OAAMM,uBAAuB,CAACF,GAAG,EAAE,CAAC;IAAA,EAAC;IAAA;IAAvFG,gBAAgB;IAAEC,mBAAmB;EAC5C,IAAMC,QAAQ,GAAGN,WAAW,CAAC;IAAA,OAAM,IAAIO,GAAG,EAAc;EAAA,EAAC;EAEzDb,SAAS,CAAC,YAAK;IACX,IAAMc,SAAS,GAAG,CACdN,EAAE,CAAC,UAAU,EAAE;MAAA,kCAAIO,OAAO;QAAPA,OAAO;MAAA;MAAA,OACtBJ,mBAAmB,CAAC,UAACD,gBAAgB;QAAA,oCAASA,gBAAgB,sBAAKD,uBAAuB,CAACM,OAAO,CAAC;MAAA,CAAC,CAAC;IAAA,EACxG,EACDP,EAAE,CAAC,YAAY,EAAE;MAAA,mCAAIO,OAAO;QAAPA,OAAO;MAAA;MAAA,OACxBJ,mBAAmB,CAAC,UAACD,gBAAgB;QAAA,OACjCA,gBAAgB,CAACM,MAAM,CAAC,UAACC,eAAe;UAAA,OACpCF,OAAO,CAACG,IAAI,CAAC,UAACC,MAAM;YAAA,OAAKA,MAAM,KAAKF,eAAe,CAACE,MAAM;UAAA,EAAC;QAAA,EAC9D;MAAA,EACJ;IAAA,EACJ,CACJ;IACD,OAAO;MAAA,OAAML,SAAS,CAACM,OAAO,CAAC,UAACC,OAAO;QAAA,OAAKA,OAAO,EAAE;MAAA,EAAC;IAAA;EAC1D,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAER,OAAOP,OAAO,CACV;IAAA,oCACOS,gBAAgB,sBAChBL,QAAQ,CAACW,MAAM,CAAC,gBAAa;MAAA,IAAVM,IAAI,QAAJA,IAAI;MACtB,IAAIZ,gBAAgB,CAACQ,IAAI,CAAC,UAACD,eAAe;QAAA,OAAKA,eAAe,CAACK,IAAI,KAAKA,IAAI;MAAA,EAAC,EAAE;QAC3E,IAAI,CAACV,QAAQ,CAACW,GAAG,CAACD,IAAI,CAAC,EAAE;UACrBV,QAAQ,CAACY,GAAG,CAACF,IAAI,CAAC;UAClBG,OAAO,CAACC,IAAI,WACLJ,IAAI,0EAAgEA,IAAI,oCAC9E;;QAEL,OAAO,KAAK;;MAEhB,OAAO,IAAI;IACf,CAAC,CAAC;EAAA,CACL,EACD,CAACZ,gBAAgB,EAAEL,QAAQ,EAAEO,QAAQ,CAAC,CACzC;AACL;AAEA,SAASN,WAAW,CAAIqB,EAAW;EAC/B,IAAMC,GAAG,GAAG1B,MAAM,EAAgB;EAClC,IAAI,CAAC0B,GAAG,CAACC,OAAO,EAAE;IACdD,GAAG,CAACC,OAAO,GAAG;MAAEC,KAAK,EAAEH,EAAE;IAAE,CAAE;;EAEjC,OAAOC,GAAG,CAACC,OAAO,CAACC,KAAK;AAC5B;AAEA,SAASrB,uBAAuB,CAACM,OAA8B;EAC3D,OAAOA,OAAO,CAACC,MAAM,CAACnB,+BAA+B,CAAC,CAACkC,GAAG,CAAC,UAACZ,MAAM;IAAA,OAAK,IAAIrB,qBAAqB,CAAC;MAAEqB,MAAM,EAANA;IAAM,CAAE,CAAC;EAAA,EAAC;AACjH","names":["isWalletAdapterCompatibleWallet","StandardWalletAdapter","DEPRECATED_getWallets","useEffect","useMemo","useRef","useState","useStandardWalletAdapters","adapters","useConstant","get","on","wrapWalletsWithAdapters","standardAdapters","setStandardAdapters","warnings","Set","listeners","wallets","filter","standardAdapter","some","wallet","forEach","destroy","name","has","add","console","warn","fn","ref","current","value","map"],"sources":["/Users/ivan/Metadata/node_modules/@solana/wallet-standard-wallet-adapter-react/src/useStandardWalletAdapters.ts"],"sourcesContent":["import type { Adapter, WalletName } from '@solana/wallet-adapter-base';\nimport { isWalletAdapterCompatibleWallet, StandardWalletAdapter } from '@solana/wallet-standard-wallet-adapter-base';\nimport { DEPRECATED_getWallets } from '@wallet-standard/app';\nimport type { Wallet } from '@wallet-standard/base';\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nexport function useStandardWalletAdapters(adapters: Adapter[]): Adapter[] {\n    const { get, on } = useConstant(() => DEPRECATED_getWallets());\n    const [standardAdapters, setStandardAdapters] = useState(() => wrapWalletsWithAdapters(get()));\n    const warnings = useConstant(() => new Set<WalletName>());\n\n    useEffect(() => {\n        const listeners = [\n            on('register', (...wallets) =>\n                setStandardAdapters((standardAdapters) => [...standardAdapters, ...wrapWalletsWithAdapters(wallets)])\n            ),\n            on('unregister', (...wallets) =>\n                setStandardAdapters((standardAdapters) =>\n                    standardAdapters.filter((standardAdapter) =>\n                        wallets.some((wallet) => wallet === standardAdapter.wallet)\n                    )\n                )\n            ),\n        ];\n        return () => listeners.forEach((destroy) => destroy());\n    }, [on]);\n\n    return useMemo(\n        () => [\n            ...standardAdapters,\n            ...adapters.filter(({ name }) => {\n                if (standardAdapters.some((standardAdapter) => standardAdapter.name === name)) {\n                    if (!warnings.has(name)) {\n                        warnings.add(name);\n                        console.warn(\n                            `${name} was registered as a Standard Wallet. The Wallet Adapter for ${name} can be removed from your app.`\n                        );\n                    }\n                    return false;\n                }\n                return true;\n            }),\n        ],\n        [standardAdapters, adapters, warnings]\n    );\n}\n\nfunction useConstant<T>(fn: () => T): T {\n    const ref = useRef<{ value: T }>();\n    if (!ref.current) {\n        ref.current = { value: fn() };\n    }\n    return ref.current.value;\n}\n\nfunction wrapWalletsWithAdapters(wallets: ReadonlyArray<Wallet>): ReadonlyArray<StandardWalletAdapter> {\n    return wallets.filter(isWalletAdapterCompatibleWallet).map((wallet) => new StandardWalletAdapter({ wallet }));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}