{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { encodeDecode } from './base.mjs';\nimport { u128 } from './bigint.mjs';\nexport var WAD = new BigNumber('1e+18');\nexport var decimal = function decimal(property) {\n  var layout = u128(property);\n  var _encodeDecode = encodeDecode(layout),\n    encode = _encodeDecode.encode,\n    decode = _encodeDecode.decode;\n  var decimalLayout = layout;\n  decimalLayout.decode = function (buffer, offset) {\n    var src = decode(buffer, offset).toString();\n    return new BigNumber(src).div(WAD);\n  };\n  decimalLayout.encode = function (decimal, buffer, offset) {\n    var src = BigInt(decimal.times(WAD).integerValue().toString());\n    return encode(src, buffer, offset);\n  };\n  return decimalLayout;\n};","map":{"version":3,"mappings":"AACA,OAAOA,SAAS,MAAM,cAAc;AACpC,SAASC,YAAY,QAAQ,YAAS;AACtC,SAASC,IAAI,QAAQ,cAAW;AAEhC,OAAO,IAAMC,GAAG,GAAG,IAAIH,SAAS,CAAC,OAAO,CAAC;AAEzC,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAO,CAAIC,QAAiB,EAAuB;EAC5D,IAAMC,MAAM,GAAGJ,IAAI,CAACG,QAAQ,CAAC;EAC7B,oBAA2BJ,YAAY,CAACK,MAAM,CAAC;IAAvCC,MAAM,iBAANA,MAAM;IAAEC,MAAM,iBAANA,MAAM;EAEtB,IAAMC,aAAa,GAAGH,MAA8C;EAEpEG,aAAa,CAACD,MAAM,GAAG,UAACE,MAAc,EAAEC,MAAc,EAAI;IACtD,IAAMC,GAAG,GAAGJ,MAAM,CAACE,MAAM,EAAEC,MAAM,CAAC,CAACE,QAAQ,EAAE;IAC7C,OAAO,IAAIb,SAAS,CAACY,GAAG,CAAC,CAACE,GAAG,CAACX,GAAG,CAAC;EACtC,CAAC;EAEDM,aAAa,CAACF,MAAM,GAAG,UAACH,OAAkB,EAAEM,MAAc,EAAEC,MAAc,EAAI;IAC1E,IAAMC,GAAG,GAAGG,MAAM,CAACX,OAAO,CAACY,KAAK,CAACb,GAAG,CAAC,CAACc,YAAY,EAAE,CAACJ,QAAQ,EAAE,CAAC;IAChE,OAAON,MAAM,CAACK,GAAG,EAAEF,MAAM,EAAEC,MAAM,CAAC;EACtC,CAAC;EAED,OAAOF,aAAa;AACxB,CAAC","names":["BigNumber","encodeDecode","u128","WAD","decimal","property","layout","encode","decode","decimalLayout","buffer","offset","src","toString","div","BigInt","times","integerValue"],"sources":["/Users/ivan/Metadata/node_modules/@solana/buffer-layout-utils/src/decimal.ts"],"sourcesContent":["import { Layout } from '@solana/buffer-layout';\nimport BigNumber from 'bignumber.js';\nimport { encodeDecode } from './base';\nimport { u128 } from './bigint';\n\nexport const WAD = new BigNumber('1e+18');\n\nexport const decimal = (property?: string): Layout<BigNumber> => {\n    const layout = u128(property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const decimalLayout = layout as Layout<unknown> as Layout<BigNumber>;\n\n    decimalLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset).toString();\n        return new BigNumber(src).div(WAD);\n    };\n\n    decimalLayout.encode = (decimal: BigNumber, buffer: Buffer, offset: number) => {\n        const src = BigInt(decimal.times(WAD).integerValue().toString());\n        return encode(src, buffer, offset);\n    };\n\n    return decimalLayout;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}