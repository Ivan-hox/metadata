{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBurnEditionNftInstruction = exports.burnEditionNftInstructionDiscriminator = exports.BurnEditionNftStruct = void 0;\nvar beet = __importStar(require(\"@metaplex-foundation/beet\"));\nvar web3 = __importStar(require(\"@solana/web3.js\"));\nexports.BurnEditionNftStruct = new beet.BeetArgsStruct([['instructionDiscriminator', beet.u8]], 'BurnEditionNftInstructionArgs');\nexports.burnEditionNftInstructionDiscriminator = 37;\nfunction createBurnEditionNftInstruction(accounts) {\n  var programId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\n  var _exports$BurnEditionN = exports.BurnEditionNftStruct.serialize({\n      instructionDiscriminator: exports.burnEditionNftInstructionDiscriminator\n    }),\n    _exports$BurnEditionN2 = _slicedToArray(_exports$BurnEditionN, 1),\n    data = _exports$BurnEditionN2[0];\n  var keys = [{\n    pubkey: accounts.metadata,\n    isWritable: true,\n    isSigner: false\n  }, {\n    pubkey: accounts.owner,\n    isWritable: true,\n    isSigner: true\n  }, {\n    pubkey: accounts.printEditionMint,\n    isWritable: true,\n    isSigner: false\n  }, {\n    pubkey: accounts.masterEditionMint,\n    isWritable: false,\n    isSigner: false\n  }, {\n    pubkey: accounts.printEditionTokenAccount,\n    isWritable: true,\n    isSigner: false\n  }, {\n    pubkey: accounts.masterEditionTokenAccount,\n    isWritable: false,\n    isSigner: false\n  }, {\n    pubkey: accounts.masterEditionAccount,\n    isWritable: true,\n    isSigner: false\n  }, {\n    pubkey: accounts.printEditionAccount,\n    isWritable: true,\n    isSigner: false\n  }, {\n    pubkey: accounts.editionMarkerAccount,\n    isWritable: true,\n    isSigner: false\n  }, {\n    pubkey: accounts.splTokenProgram,\n    isWritable: false,\n    isSigner: false\n  }];\n  var ix = new web3.TransactionInstruction({\n    programId: programId,\n    keys: keys,\n    data: data\n  });\n  return ix;\n}\nexports.createBurnEditionNftInstruction = createBurnEditionNftInstruction;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;AAOaA,4BAAoB,GAAG,IAAIC,IAAI,CAACC,cAAc,CACzD,CAAC,CAAC,0BAA0B,EAAED,IAAI,CAACE,EAAE,CAAC,CAAC,EACvC,+BAA+B,CAChC;AA+BYH,8CAAsC,GAAG,EAAE;AAUxD,SAAgBI,+BAA+B,CAC7CC,QAA2C,EACkC;EAAA,IAA7EC,SAAS,uEAAG,IAAIC,IAAI,CAACC,SAAS,CAAC,6CAA6C,CAAC;EAE7E,4BAAeR,4BAAoB,CAACS,SAAS,CAAC;MAC5CC,wBAAwB,EAAEV;KAC3B,CAAC;IAAA;IAFKW,IAAI;EAGX,IAAMC,IAAI,GAAuB,CAC/B;IACEC,MAAM,EAAER,QAAQ,CAACS,QAAQ;IACzBC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACY,KAAK;IACtBF,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACa,gBAAgB;IACjCH,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACc,iBAAiB;IAClCJ,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACe,wBAAwB;IACzCL,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACgB,yBAAyB;IAC1CN,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACiB,oBAAoB;IACrCP,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACkB,mBAAmB;IACpCR,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACmB,oBAAoB;IACrCT,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX,EACD;IACEH,MAAM,EAAER,QAAQ,CAACoB,eAAe;IAChCV,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;GACX,CACF;EAED,IAAMU,EAAE,GAAG,IAAInB,IAAI,CAACoB,sBAAsB,CAAC;IACzCrB,SAAS,EAATA,SAAS;IACTM,IAAI,EAAJA,IAAI;IACJD,IAAI,EAAJA;GACD,CAAC;EACF,OAAOe,EAAE;AACX;AAlEA1B","names":["exports","beet","BeetArgsStruct","u8","createBurnEditionNftInstruction","accounts","programId","web3","PublicKey","serialize","instructionDiscriminator","data","keys","pubkey","metadata","isWritable","isSigner","owner","printEditionMint","masterEditionMint","printEditionTokenAccount","masterEditionTokenAccount","masterEditionAccount","printEditionAccount","editionMarkerAccount","splTokenProgram","ix","TransactionInstruction"],"sources":["../../../../src/generated/instructions/BurnEditionNft.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}