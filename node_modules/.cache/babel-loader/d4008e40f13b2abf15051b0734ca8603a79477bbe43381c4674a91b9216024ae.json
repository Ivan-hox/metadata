{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nvar Wallet = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Wallet, _EventEmitter);\n  var _super = _createSuper(Wallet);\n  function Wallet(provider, _network) {\n    var _this;\n    _classCallCheck(this, Wallet);\n    _this = _super.call(this);\n    _this._network = _network;\n    _this._publicKey = null;\n    _this._popup = null;\n    _this._handlerAdded = false;\n    _this._nextRequestId = 1;\n    _this._autoApprove = false;\n    _this._responsePromises = new Map();\n    _this.handleMessage = function (e) {\n      var _a;\n      if (_this._injectedProvider && e.source === window || e.origin === ((_a = _this._providerUrl) === null || _a === void 0 ? void 0 : _a.origin) && e.source === _this._popup) {\n        if (e.data.method === 'connected') {\n          var newPublicKey = new PublicKey(e.data.params.publicKey);\n          if (!_this._publicKey || !_this._publicKey.equals(newPublicKey)) {\n            if (_this._publicKey && !_this._publicKey.equals(newPublicKey)) {\n              _this.handleDisconnect();\n            }\n            _this._publicKey = newPublicKey;\n            _this._autoApprove = !!e.data.params.autoApprove;\n            _this.emit('connect', _this._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          _this.handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          var promises = _this._responsePromises.get(e.data.id);\n          if (promises) {\n            var _promises = _slicedToArray(promises, 2),\n              resolve = _promises[0],\n              reject = _promises[1];\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n    _this._beforeUnload = function () {\n      void _this.disconnect();\n    };\n    if (isInjectedProvider(provider)) {\n      _this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      _this._providerUrl = new URL(provider);\n      _this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: _this._network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n    return _this;\n  }\n  _createClass(Wallet, [{\n    key: \"handleConnect\",\n    value: function handleConnect() {\n      var _this2 = this;\n      var _a;\n      if (!this._handlerAdded) {\n        this._handlerAdded = true;\n        window.addEventListener('message', this.handleMessage);\n        window.addEventListener('beforeunload', this._beforeUnload);\n      }\n      if (this._injectedProvider) {\n        return new Promise(function (resolve) {\n          void _this2.sendRequest('connect', {});\n          resolve();\n        });\n      } else {\n        window.name = 'parent';\n        this._popup = window.open((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.toString(), '_blank', 'location,resizable,width=460,height=675');\n        return new Promise(function (resolve) {\n          _this2.once('connect', resolve);\n        });\n      }\n    }\n  }, {\n    key: \"handleDisconnect\",\n    value: function handleDisconnect() {\n      var _this3 = this;\n      if (this._handlerAdded) {\n        this._handlerAdded = false;\n        window.removeEventListener('message', this.handleMessage);\n        window.removeEventListener('beforeunload', this._beforeUnload);\n      }\n      if (this._publicKey) {\n        this._publicKey = null;\n        this.emit('disconnect');\n      }\n      this._responsePromises.forEach(function (_ref, id) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          reject = _ref2[1];\n        _this3._responsePromises.delete(id);\n        reject(new Error('Wallet disconnected'));\n      });\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(method, params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this4 = this;\n        var requestId;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(method !== 'connect' && !this.connected)) {\n                  _context.next = 2;\n                  break;\n                }\n                throw new Error('Wallet not connected');\n              case 2:\n                requestId = this._nextRequestId;\n                ++this._nextRequestId;\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var _a, _b, _c, _d;\n                  _this4._responsePromises.set(requestId, [resolve, reject]);\n                  if (_this4._injectedProvider) {\n                    _this4._injectedProvider.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: Object.assign({\n                        network: _this4._network\n                      }, params)\n                    });\n                  } else {\n                    (_a = _this4._popup) === null || _a === void 0 ? void 0 : _a.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: params\n                    }, (_c = (_b = _this4._providerUrl) === null || _b === void 0 ? void 0 : _b.origin) !== null && _c !== void 0 ? _c : '');\n                    if (!_this4.autoApprove) {\n                      (_d = _this4._popup) === null || _d === void 0 ? void 0 : _d.focus();\n                    }\n                  }\n                }));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._publicKey !== null;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return this._autoApprove;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this._popup) {\n                  this._popup.close();\n                }\n                _context2.next = 3;\n                return this.handleConnect();\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._injectedProvider) {\n                  _context3.next = 3;\n                  break;\n                }\n                _context3.next = 3;\n                return this.sendRequest('disconnect', {});\n              case 3:\n                if (this._popup) {\n                  this._popup.close();\n                }\n                this.handleDisconnect();\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(data, display) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, signature, publicKey;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (data instanceof Uint8Array) {\n                  _context4.next = 2;\n                  break;\n                }\n                throw new Error('Data must be an instance of Uint8Array');\n              case 2:\n                _context4.next = 4;\n                return this.sendRequest('sign', {\n                  data: data,\n                  display: display\n                });\n              case 4:\n                response = _context4.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                return _context4.abrupt(\"return\", {\n                  signature: signature,\n                  publicKey: publicKey\n                });\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, signature, publicKey;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.sendRequest('signTransaction', {\n                  message: bs58.encode(transaction.serializeMessage())\n                });\n              case 2:\n                response = _context5.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                transaction.addSignature(publicKey, signature);\n                return _context5.abrupt(\"return\", transaction);\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response, signatures, publicKey;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.sendRequest('signAllTransactions', {\n                  messages: transactions.map(function (tx) {\n                    return bs58.encode(tx.serializeMessage());\n                  })\n                });\n              case 2:\n                response = _context6.sent;\n                signatures = response.signatures.map(function (s) {\n                  return bs58.decode(s);\n                });\n                publicKey = new PublicKey(response.publicKey);\n                transactions = transactions.map(function (tx, idx) {\n                  tx.addSignature(publicKey, signatures[idx]);\n                  return tx;\n                });\n                return _context6.abrupt(\"return\", transactions);\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"diffieHellman\",\n    value: function diffieHellman(publicKey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (publicKey instanceof Uint8Array) {\n                  _context7.next = 2;\n                  break;\n                }\n                throw new Error('Data must be an instance of Uint8Array');\n              case 2:\n                _context7.next = 4;\n                return this.sendRequest('diffieHellman', {\n                  publicKey: publicKey\n                });\n              case 4:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response);\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }]);\n  return Wallet;\n}(EventEmitter);\nexport { Wallet as default };\nfunction isString(a) {\n  return typeof a === 'string';\n}\nfunction isInjectedProvider(a) {\n  return isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function';\n}\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","PublicKey","bs58","Wallet","provider","_network","Map","e","_injectedProvider","source","window","origin","_providerUrl","_popup","data","method","newPublicKey","params","publicKey","_publicKey","equals","handleDisconnect","_autoApprove","autoApprove","emit","result","error","promises","_responsePromises","get","id","resolve","reject","Error","disconnect","isInjectedProvider","isString","URL","hash","URLSearchParams","location","network","toString","_handlerAdded","addEventListener","handleMessage","_beforeUnload","Promise","sendRequest","name","open","once","removeEventListener","forEach","delete","connected","requestId","_nextRequestId","set","postMessage","jsonrpc","focus","close","handleConnect","display","Uint8Array","response","signature","decode","transaction","message","encode","serializeMessage","addSignature","transactions","messages","map","tx","signatures","s","idx","a","isObject"],"sources":["/Users/ivan/Metadata/node_modules/@project-serum/sol-wallet-adapter/src/index.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\ntype InjectedProvider = { postMessage: (params: unknown) => void };\n\nexport default class Wallet extends EventEmitter {\n  private _providerUrl: URL | undefined;\n  private _injectedProvider?: InjectedProvider;\n  private _publicKey: PublicKey | null = null;\n  private _popup: Window | null = null;\n  private _handlerAdded = false;\n  private _nextRequestId = 1;\n  private _autoApprove = false;\n  private _responsePromises: Map<\n    number,\n    [(value: string) => void, (reason: Error) => void]\n  > = new Map();\n\n  constructor(provider: unknown, private _network: string) {\n    super();\n    if (isInjectedProvider(provider)) {\n      this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      this._providerUrl = new URL(provider);\n      this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: this._network,\n      }).toString();\n    } else {\n      throw new Error(\n        'provider parameter must be an injected provider or a URL string.',\n      );\n    }\n  }\n\n  handleMessage = (\n    e: MessageEvent<{\n      id: number;\n      method: string;\n      params: {\n        autoApprove: boolean;\n        publicKey: string;\n      };\n      result?: string;\n      error?: string;\n    }>,\n  ): void => {\n    if (\n      (this._injectedProvider && e.source === window) ||\n      (e.origin === this._providerUrl?.origin && e.source === this._popup)\n    ) {\n      if (e.data.method === 'connected') {\n        const newPublicKey = new PublicKey(e.data.params.publicKey);\n        if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n          if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n            this.handleDisconnect();\n          }\n          this._publicKey = newPublicKey;\n          this._autoApprove = !!e.data.params.autoApprove;\n          this.emit('connect', this._publicKey);\n        }\n      } else if (e.data.method === 'disconnected') {\n        this.handleDisconnect();\n      } else if (e.data.result || e.data.error) {\n        const promises = this._responsePromises.get(e.data.id);\n        if (promises) {\n          const [resolve, reject] = promises;\n          if (e.data.result) {\n            resolve(e.data.result);\n          } else {\n            reject(new Error(e.data.error));\n          }\n        }\n      }\n    }\n  };\n\n  private handleConnect() {\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this.handleMessage);\n      window.addEventListener('beforeunload', this._beforeUnload);\n    }\n    if (this._injectedProvider) {\n      return new Promise<void>((resolve) => {\n        void this.sendRequest('connect', {});\n        resolve();\n      });\n    } else {\n      window.name = 'parent';\n      this._popup = window.open(\n        this._providerUrl?.toString(),\n        '_blank',\n        'location,resizable,width=460,height=675',\n      );\n      return new Promise((resolve) => {\n        this.once('connect', resolve);\n      });\n    }\n  }\n\n  private handleDisconnect() {\n    if (this._handlerAdded) {\n      this._handlerAdded = false;\n      window.removeEventListener('message', this.handleMessage);\n      window.removeEventListener('beforeunload', this._beforeUnload);\n    }\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n    this._responsePromises.forEach(([, reject], id) => {\n      this._responsePromises.delete(id);\n      reject(new Error('Wallet disconnected'));\n    });\n  }\n\n  private async sendRequest(method: string, params: Record<string, unknown>) {\n    if (method !== 'connect' && !this.connected) {\n      throw new Error('Wallet not connected');\n    }\n    const requestId = this._nextRequestId;\n    ++this._nextRequestId;\n    return new Promise((resolve, reject) => {\n      this._responsePromises.set(requestId, [resolve, reject]);\n      if (this._injectedProvider) {\n        this._injectedProvider.postMessage({\n          jsonrpc: '2.0',\n          id: requestId,\n          method,\n          params: {\n            network: this._network,\n            ...params,\n          },\n        });\n      } else {\n        this._popup?.postMessage(\n          {\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params,\n          },\n          this._providerUrl?.origin ?? '',\n        );\n\n        if (!this.autoApprove) {\n          this._popup?.focus();\n        }\n      }\n    });\n  }\n\n  get publicKey(): PublicKey | null {\n    return this._publicKey;\n  }\n\n  get connected(): boolean {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove(): boolean {\n    return this._autoApprove;\n  }\n\n  async connect(): Promise<void> {\n    if (this._popup) {\n      this._popup.close();\n    }\n    await this.handleConnect();\n  }\n\n  async disconnect(): Promise<void> {\n    if (this._injectedProvider) {\n      await this.sendRequest('disconnect', {});\n    }\n    if (this._popup) {\n      this._popup.close();\n    }\n    this.handleDisconnect();\n  }\n\n  private _beforeUnload = (): void => {\n    void this.disconnect();\n  };\n\n  async sign(\n    data: Uint8Array,\n    display: unknown,\n  ): Promise<{\n    signature: Buffer;\n    publicKey: PublicKey;\n  }> {\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n\n    const response = (await this.sendRequest('sign', {\n      data,\n      display,\n    })) as { publicKey: string; signature: string };\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    return {\n      signature,\n      publicKey,\n    };\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response = (await this.sendRequest('signTransaction', {\n      message: bs58.encode(transaction.serializeMessage()),\n    })) as { publicKey: string; signature: string };\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    transaction.addSignature(publicKey, signature);\n    return transaction;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const response = (await this.sendRequest('signAllTransactions', {\n      messages: transactions.map((tx) => bs58.encode(tx.serializeMessage())),\n    })) as { publicKey: string; signatures: string[] };\n    const signatures = response.signatures.map((s) => bs58.decode(s));\n    const publicKey = new PublicKey(response.publicKey);\n    transactions = transactions.map((tx, idx) => {\n      tx.addSignature(publicKey, signatures[idx]);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async diffieHellman(\n    publicKey: Uint8Array,\n  ): Promise<{ publicKey: Uint8Array; secretKey: Uint8Array }> {\n    if (!(publicKey instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n    const response = (await this.sendRequest('diffieHellman', {\n      publicKey,\n    })) as {\n      publicKey: Uint8Array;\n      secretKey: Uint8Array;\n    };\n    return response;\n  }\n}\n\nfunction isString(a: unknown): a is string {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a: unknown): a is InjectedProvider {\n  return (\n    isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function'\n  );\n}\n\nfunction isObject(a: unknown): a is Record<string, unknown> {\n  return typeof a === 'object' && a !== null;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}