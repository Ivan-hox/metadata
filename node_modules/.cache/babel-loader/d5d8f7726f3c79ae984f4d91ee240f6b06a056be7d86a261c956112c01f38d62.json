{"ast":null,"code":"import _classCallCheck from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _toConsumableArray from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AppReadyEvent_detail;\nvar wallets = undefined;\nvar registered = new Set();\nvar listeners = {};\n/**\n * Get an API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\n *\n * When called for the first time --\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowAppReadyEvent} to notify each Wallet that the app is ready\n * to register it.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to listen for a notification\n * from each Wallet that the Wallet is ready to be registered by the app.\n *\n * This combination of event dispatch and listener guarantees that each Wallet will be registered synchronously as soon\n * as the app is ready whether the app loads before or after each Wallet.\n *\n * @return API for getting, listening for, and registering Wallets.\n *\n * @group App\n */\nexport function getWallets() {\n  if (wallets) return wallets;\n  wallets = Object.freeze({\n    register: register,\n    get: get,\n    on: on\n  });\n  if (typeof window === 'undefined') return wallets;\n  var api = Object.freeze({\n    register: register\n  });\n  try {\n    window.addEventListener('wallet-standard:register-wallet', function (_ref) {\n      var callback = _ref.detail;\n      return callback(api);\n    });\n  } catch (error) {\n    console.error('wallet-standard:register-wallet event listener could not be added\\n', error);\n  }\n  try {\n    window.dispatchEvent(new AppReadyEvent(api));\n  } catch (error) {\n    console.error('wallet-standard:app-ready event could not be dispatched\\n', error);\n  }\n  return wallets;\n}\nfunction register() {\n  var _listeners$register;\n  for (var _len = arguments.length, wallets = new Array(_len), _key = 0; _key < _len; _key++) {\n    wallets[_key] = arguments[_key];\n  }\n  // Filter out wallets that have already been registered.\n  // This prevents the same wallet from being registered twice, but it also prevents wallets from being\n  // unregistered by reusing a reference to the wallet to obtain the unregister function for it.\n  wallets = wallets.filter(function (wallet) {\n    return !registered.has(wallet);\n  });\n  // If there are no new wallets to register, just return a no-op unregister function.\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  if (!wallets.length) return function () {};\n  wallets.forEach(function (wallet) {\n    return registered.add(wallet);\n  });\n  (_listeners$register = listeners['register']) === null || _listeners$register === void 0 ? void 0 : _listeners$register.forEach(function (listener) {\n    return guard(function () {\n      return listener.apply(void 0, _toConsumableArray(wallets));\n    });\n  });\n  // Return a function that unregisters the registered wallets.\n  return function unregister() {\n    var _listeners$unregister;\n    wallets.forEach(function (wallet) {\n      return registered.delete(wallet);\n    });\n    (_listeners$unregister = listeners['unregister']) === null || _listeners$unregister === void 0 ? void 0 : _listeners$unregister.forEach(function (listener) {\n      return guard(function () {\n        return listener.apply(void 0, _toConsumableArray(wallets));\n      });\n    });\n  };\n}\nfunction get() {\n  return _toConsumableArray(registered);\n}\nfunction on(event, listener) {\n  var _listeners$event;\n  ((_listeners$event = listeners[event]) === null || _listeners$event === void 0 ? void 0 : _listeners$event.push(listener)) || (listeners[event] = [listener]);\n  // Return a function that removes the event listener.\n  return function off() {\n    var _listeners$event2;\n    listeners[event] = (_listeners$event2 = listeners[event]) === null || _listeners$event2 === void 0 ? void 0 : _listeners$event2.filter(function (existingListener) {\n      return listener !== existingListener;\n    });\n  };\n}\nfunction guard(callback) {\n  try {\n    callback();\n  } catch (error) {\n    console.error(error);\n  }\n}\nvar AppReadyEvent = /*#__PURE__*/function (_Event) {\n  _inherits(AppReadyEvent, _Event);\n  var _super = _createSuper(AppReadyEvent);\n  function AppReadyEvent(api) {\n    var _this;\n    _classCallCheck(this, AppReadyEvent);\n    _this = _super.call(this, 'wallet-standard:app-ready', {\n      bubbles: false,\n      cancelable: false,\n      composed: false\n    });\n    _AppReadyEvent_detail.set(_assertThisInitialized(_this), void 0);\n    __classPrivateFieldSet(_assertThisInitialized(_this), _AppReadyEvent_detail, api, \"f\");\n    return _this;\n  }\n  _createClass(AppReadyEvent, [{\n    key: \"detail\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _AppReadyEvent_detail, \"f\");\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'wallet-standard:app-ready';\n    }\n    /** @deprecated */\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      throw new Error('preventDefault cannot be called');\n    }\n    /** @deprecated */\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      throw new Error('stopImmediatePropagation cannot be called');\n    }\n    /** @deprecated */\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      throw new Error('stopPropagation cannot be called');\n    }\n  }]);\n  return AppReadyEvent;\n}( /*#__PURE__*/_wrapNativeSuper(Event));\n_AppReadyEvent_detail = new WeakMap();\n/**\n * @deprecated Use {@link getWallets} instead.\n *\n * @group Deprecated\n */\nexport function DEPRECATED_getWallets() {\n  if (wallets) return wallets;\n  wallets = getWallets();\n  if (typeof window === 'undefined') return wallets;\n  var callbacks = window.navigator.wallets || [];\n  if (!Array.isArray(callbacks)) {\n    console.error('window.navigator.wallets is not an array');\n    return wallets;\n  }\n  var _wallets = wallets,\n    register = _wallets.register;\n  var push = function push() {\n    for (var _len2 = arguments.length, callbacks = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      callbacks[_key2] = arguments[_key2];\n    }\n    return callbacks.forEach(function (callback) {\n      return guard(function () {\n        return callback({\n          register: register\n        });\n      });\n    });\n  };\n  try {\n    Object.defineProperty(window.navigator, 'wallets', {\n      value: Object.freeze({\n        push: push\n      })\n    });\n  } catch (error) {\n    console.error('window.navigator.wallets could not be set');\n    return wallets;\n  }\n  push.apply(void 0, _toConsumableArray(callbacks));\n  return wallets;\n}","map":{"version":3,"mappings":"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","names":["wallets","undefined","registered","Set","listeners","getWallets","Object","freeze","register","get","on","window","api","addEventListener","callback","detail","error","console","dispatchEvent","AppReadyEvent","filter","wallet","has","length","forEach","add","listener","guard","unregister","delete","event","push","off","existingListener","bubbles","cancelable","composed","_AppReadyEvent_detail","__classPrivateFieldSet","__classPrivateFieldGet","Error","Event","DEPRECATED_getWallets","callbacks","navigator","Array","isArray","defineProperty","value"],"sources":["/Users/ivan/Metadata/node_modules/@wallet-standard/app/src/wallets.ts"],"sourcesContent":["import type {\n    DEPRECATED_WalletsCallback,\n    DEPRECATED_WalletsWindow,\n    Wallet,\n    WalletEventsWindow,\n    WindowAppReadyEvent,\n    WindowAppReadyEventAPI,\n} from '@wallet-standard/base';\n\nlet wallets: Wallets | undefined = undefined;\nconst registered = new Set<Wallet>();\nconst listeners: { [E in WalletsEventNames]?: WalletsEventsListeners[E][] } = {};\n\n/**\n * Get an API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\n *\n * When called for the first time --\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowAppReadyEvent} to notify each Wallet that the app is ready\n * to register it.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to listen for a notification\n * from each Wallet that the Wallet is ready to be registered by the app.\n *\n * This combination of event dispatch and listener guarantees that each Wallet will be registered synchronously as soon\n * as the app is ready whether the app loads before or after each Wallet.\n *\n * @return API for getting, listening for, and registering Wallets.\n *\n * @group App\n */\nexport function getWallets(): Wallets {\n    if (wallets) return wallets;\n    wallets = Object.freeze({ register, get, on });\n    if (typeof window === 'undefined') return wallets;\n\n    const api = Object.freeze({ register });\n    try {\n        (window as WalletEventsWindow).addEventListener('wallet-standard:register-wallet', ({ detail: callback }) =>\n            callback(api)\n        );\n    } catch (error) {\n        console.error('wallet-standard:register-wallet event listener could not be added\\n', error);\n    }\n    try {\n        (window as WalletEventsWindow).dispatchEvent(new AppReadyEvent(api));\n    } catch (error) {\n        console.error('wallet-standard:app-ready event could not be dispatched\\n', error);\n    }\n\n    return wallets;\n}\n\n/**\n * API for {@link Wallets.get | getting}, {@link Wallets.on | listening for}, and\n * {@link Wallets.register | registering} {@link \"@wallet-standard/base\".Wallet | Wallets}.\n *\n * @group App\n */\nexport interface Wallets {\n    /**\n     * Get all Wallets that have been registered.\n     *\n     * @return Registered Wallets.\n     */\n    get(): readonly Wallet[];\n\n    /**\n     * Add an event listener and subscribe to events for Wallets that are\n     * {@link WalletsEventsListeners.register | registered} and\n     * {@link WalletsEventsListeners.unregister | unregistered}.\n     *\n     * @param event    Event type to listen for. {@link WalletsEventsListeners.register | `register`} and\n     * {@link WalletsEventsListeners.unregister | `unregister`} are the only event types.\n     * @param listener Function that will be called when an event of the type is emitted.\n     *\n     * @return\n     * `off` function which may be called to remove the event listener and unsubscribe from events.\n     *\n     * As with all event listeners, be careful to avoid memory leaks.\n     */\n    on<E extends WalletsEventNames>(event: E, listener: WalletsEventsListeners[E]): () => void;\n\n    /**\n     * Register Wallets. This can be used to programmatically wrap non-standard wallets as Standard Wallets.\n     *\n     * Apps generally do not need to, and should not, call this.\n     *\n     * @param wallets Wallets to register.\n     *\n     * @return\n     * `unregister` function which may be called to programmatically unregister the registered Wallets.\n     *\n     * Apps generally do not need to, and should not, call this.\n     */\n    register(...wallets: Wallet[]): () => void;\n}\n\n/**\n * Types of event listeners of the {@link Wallets} API.\n *\n * @group App\n */\nexport interface WalletsEventsListeners {\n    /**\n     * Emitted when Wallets are registered.\n     *\n     * @param wallets Wallets that were registered.\n     */\n    register(...wallets: Wallet[]): void;\n\n    /**\n     * Emitted when Wallets are unregistered.\n     *\n     * @param wallets Wallets that were unregistered.\n     */\n    unregister(...wallets: Wallet[]): void;\n}\n\n/**\n * Names of {@link WalletsEventsListeners} that can be listened for.\n *\n * @group App\n */\nexport type WalletsEventNames = keyof WalletsEventsListeners;\n\n/**\n * @deprecated Use {@link WalletsEventsListeners} instead.\n *\n * @group Deprecated\n */\nexport type WalletsEvents = WalletsEventsListeners;\n\nfunction register(...wallets: Wallet[]): () => void {\n    // Filter out wallets that have already been registered.\n    // This prevents the same wallet from being registered twice, but it also prevents wallets from being\n    // unregistered by reusing a reference to the wallet to obtain the unregister function for it.\n    wallets = wallets.filter((wallet) => !registered.has(wallet));\n    // If there are no new wallets to register, just return a no-op unregister function.\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    if (!wallets.length) return () => {};\n\n    wallets.forEach((wallet) => registered.add(wallet));\n    listeners['register']?.forEach((listener) => guard(() => listener(...wallets)));\n    // Return a function that unregisters the registered wallets.\n    return function unregister(): void {\n        wallets.forEach((wallet) => registered.delete(wallet));\n        listeners['unregister']?.forEach((listener) => guard(() => listener(...wallets)));\n    };\n}\n\nfunction get(): readonly Wallet[] {\n    return [...registered];\n}\n\nfunction on<E extends WalletsEventNames>(event: E, listener: WalletsEventsListeners[E]): () => void {\n    listeners[event]?.push(listener) || (listeners[event] = [listener]);\n    // Return a function that removes the event listener.\n    return function off(): void {\n        listeners[event] = listeners[event]?.filter((existingListener) => listener !== existingListener);\n    };\n}\n\nfunction guard(callback: () => void) {\n    try {\n        callback();\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nclass AppReadyEvent extends Event implements WindowAppReadyEvent {\n    readonly #detail: WindowAppReadyEventAPI;\n\n    get detail() {\n        return this.#detail;\n    }\n\n    get type() {\n        return 'wallet-standard:app-ready' as const;\n    }\n\n    constructor(api: WindowAppReadyEventAPI) {\n        super('wallet-standard:app-ready', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n        this.#detail = api;\n    }\n\n    /** @deprecated */\n    preventDefault(): never {\n        throw new Error('preventDefault cannot be called');\n    }\n\n    /** @deprecated */\n    stopImmediatePropagation(): never {\n        throw new Error('stopImmediatePropagation cannot be called');\n    }\n\n    /** @deprecated */\n    stopPropagation(): never {\n        throw new Error('stopPropagation cannot be called');\n    }\n}\n\n/**\n * @deprecated Use {@link getWallets} instead.\n *\n * @group Deprecated\n */\nexport function DEPRECATED_getWallets(): Wallets {\n    if (wallets) return wallets;\n    wallets = getWallets();\n    if (typeof window === 'undefined') return wallets;\n\n    const callbacks = (window as DEPRECATED_WalletsWindow).navigator.wallets || [];\n    if (!Array.isArray(callbacks)) {\n        console.error('window.navigator.wallets is not an array');\n        return wallets;\n    }\n\n    const { register } = wallets;\n    const push = (...callbacks: DEPRECATED_WalletsCallback[]): void =>\n        callbacks.forEach((callback) => guard(() => callback({ register })));\n    try {\n        Object.defineProperty((window as DEPRECATED_WalletsWindow).navigator, 'wallets', {\n            value: Object.freeze({ push }),\n        });\n    } catch (error) {\n        console.error('window.navigator.wallets could not be set');\n        return wallets;\n    }\n\n    push(...callbacks);\n    return wallets;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}