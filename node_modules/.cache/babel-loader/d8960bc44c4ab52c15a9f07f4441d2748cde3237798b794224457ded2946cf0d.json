{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ivan/Metadata/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nvar Wallet = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Wallet, _EventEmitter);\n  var _super = _createSuper(Wallet);\n  function Wallet(provider, network) {\n    var _this2;\n    _classCallCheck(this, Wallet);\n    var _this;\n    _this2 = _super.call(this);\n    _this = _assertThisInitialized(_this2);\n    _this2._handleMessage = function (e) {\n      if (_this2._injectedProvider && e.source === window || e.origin === _this2._providerUrl.origin && e.source === _this2._popup) {\n        if (e.data.method === 'connected') {\n          var newPublicKey = new PublicKey(e.data.params.publicKey);\n          if (!_this2._publicKey || !_this2._publicKey.equals(newPublicKey)) {\n            if (_this2._publicKey && !_this2._publicKey.equals(newPublicKey)) {\n              _this2._handleDisconnect();\n            }\n            _this2._publicKey = newPublicKey;\n            _this2._autoApprove = !!e.data.params.autoApprove;\n            _this2.emit('connect', _this2._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          _this2._handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          if (_this2._responsePromises.has(e.data.id)) {\n            var _this2$_responsePromi = _this2._responsePromises.get(e.data.id),\n              _this2$_responsePromi2 = _slicedToArray(_this2$_responsePromi, 2),\n              resolve = _this2$_responsePromi2[0],\n              reject = _this2$_responsePromi2[1];\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n    _this2._handleConnect = function () {\n      if (!_this2._handlerAdded) {\n        _this2._handlerAdded = true;\n        window.addEventListener('message', _this2._handleMessage);\n        window.addEventListener('beforeunload', _this2.disconnect);\n      }\n      if (_this2._injectedProvider) {\n        return new Promise(function (resolve) {\n          _this2._sendRequest('connect', {});\n          resolve();\n        });\n      } else {\n        window.name = 'parent';\n        _this2._popup = window.open(_this2._providerUrl.toString(), '_blank', 'location,resizable,width=460,height=675');\n        return new Promise(function (resolve) {\n          _this2.once('connect', resolve);\n        });\n      }\n    };\n    _this2._handleDisconnect = function () {\n      if (_this2._handlerAdded) {\n        _this2._handlerAdded = false;\n        window.removeEventListener('message', _this2._handleMessage);\n        window.removeEventListener('beforeunload', _this2.disconnect);\n      }\n      if (_this2._publicKey) {\n        _this2._publicKey = null;\n        _this2.emit('disconnect');\n      }\n      _this2._responsePromises.forEach(function (_ref, id) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          resolve = _ref2[0],\n          reject = _ref2[1];\n        _this2._responsePromises.delete(id);\n        reject('Wallet disconnected');\n      });\n    };\n    _this2._sendRequest = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(method, params) {\n        var requestId;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(method !== 'connect' && !_this.connected)) {\n                  _context.next = 2;\n                  break;\n                }\n                throw new Error('Wallet not connected');\n              case 2:\n                requestId = _this._nextRequestId;\n                ++_this._nextRequestId;\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this._responsePromises.set(requestId, [resolve, reject]);\n                  if (_this._injectedProvider) {\n                    _this._injectedProvider.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: _objectSpread({\n                        network: _this._network\n                      }, params)\n                    });\n                  } else {\n                    _this._popup.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: params\n                    }, _this._providerUrl.origin);\n                    if (!_this.autoApprove) {\n                      _this._popup.focus();\n                    }\n                  }\n                }));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    _this2.connect = function () {\n      if (_this2._popup) {\n        _this2._popup.close();\n      }\n      return _this2._handleConnect();\n    };\n    _this2.disconnect = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this._injectedProvider) {\n                _context2.next = 3;\n                break;\n              }\n              _context2.next = 3;\n              return _this._sendRequest('disconnect', {});\n            case 3:\n              if (_this._popup) {\n                _this._popup.close();\n              }\n              _this._handleDisconnect();\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this2.sign = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data, display) {\n        var response, signature, publicKey;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (data instanceof Uint8Array) {\n                  _context3.next = 2;\n                  break;\n                }\n                throw new Error('Data must be an instance of Uint8Array');\n              case 2:\n                _context3.next = 4;\n                return _this._sendRequest('sign', {\n                  data: data,\n                  display: display\n                });\n              case 4:\n                response = _context3.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                return _context3.abrupt(\"return\", {\n                  signature: signature,\n                  publicKey: publicKey\n                });\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return function (_x3, _x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    _this2.signTransaction = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(transaction) {\n        var response, signature, publicKey;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this._sendRequest('signTransaction', {\n                  message: bs58.encode(transaction.serializeMessage())\n                });\n              case 2:\n                response = _context4.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                transaction.addSignature(publicKey, signature);\n                return _context4.abrupt(\"return\", transaction);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    _this2.signAllTransactions = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(transactions) {\n        var response, signatures, publicKey;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this._sendRequest('signAllTransactions', {\n                  messages: transactions.map(function (tx) {\n                    return bs58.encode(tx.serializeMessage());\n                  })\n                });\n              case 2:\n                response = _context5.sent;\n                signatures = response.signatures.map(function (s) {\n                  return bs58.decode(s);\n                });\n                publicKey = new PublicKey(response.publicKey);\n                transactions = transactions.map(function (tx, idx) {\n                  tx.addSignature(publicKey, signatures[idx]);\n                  return tx;\n                });\n                return _context5.abrupt(\"return\", transactions);\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    if (isInjectedProvider(provider)) {\n      _this2._injectedProvider = provider;\n    } else if (isString(provider)) {\n      _this2._providerUrl = new URL(provider);\n      _this2._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n    _this2._network = network;\n    _this2._publicKey = null;\n    _this2._autoApprove = false;\n    _this2._popup = null;\n    _this2._handlerAdded = false;\n    _this2._nextRequestId = 1;\n    _this2._responsePromises = new Map();\n    return _this2;\n  }\n  _createClass(Wallet, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._publicKey !== null;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return this._autoApprove;\n    }\n  }]);\n  return Wallet;\n}(EventEmitter);\nfunction isString(a) {\n  return typeof a === 'string';\n}\nfunction isInjectedProvider(a) {\n  return isObject(a) && isFunction(a.postMessage);\n}\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}\nfunction isFunction(a) {\n  return typeof a === 'function';\n}\nexport default Wallet;","map":{"version":3,"mappings":";;;;;;;;;;;;IAIqBA,MAAN;EAAA;EAAA;EACbC,gBAAYC,QAAD,EAAWC,OAAX,EAAoB;IAAA;IAAA;IAAA;IAC7B;IAD6BC;IAAA,OAwB/BC,cAxB+B,GAwBbC,WAAD,EAAO;MACtB,IACG,OAAKC,iBAAL,IAA0BD,CAAC,CAACE,MAAF,KAAaC,MAAxC,IACCH,CAAC,CAACI,MAAF,KAAa,OAAKC,YAAL,CAAkBD,MAA/B,IAAyCJ,CAAC,CAACE,MAAF,KAAa,OAAKI,MAF9D,EAGE;QACA,IAAIN,CAAC,CAACO,IAAF,CAAOC,MAAP,KAAkB,WAAtB,EAAmC;UACjC,IAAMC,YAAY,GAAG,IAAIC,SAAJ,CAAcV,CAAC,CAACO,IAAF,CAAOI,MAAP,CAAcC,SAA5B,CAArB;UACA,IAAI,CAAC,OAAKC,UAAN,IAAoB,CAAC,OAAKA,UAAL,CAAgBC,MAAhB,CAAuBL,YAAvB,CAAzB,EAA+D;YAC7D,IAAI,OAAKI,UAAL,IAAmB,CAAC,OAAKA,UAAL,CAAgBC,MAAhB,CAAuBL,YAAvB,CAAxB,EAA8D;cAC5D,OAAKM,iBAAL;YACD;YACD,OAAKF,UAAL,GAAkBJ,YAAlB;YACA,OAAKO,YAAL,GAAoB,CAAC,CAAChB,CAAC,CAACO,IAAF,CAAOI,MAAP,CAAcM,WAApC;YACA,OAAKC,IAAL,CAAU,SAAV,EAAqB,OAAKL,UAA1B;UACD;QACF,CAVD,MAUO,IAAIb,CAAC,CAACO,IAAF,CAAOC,MAAP,KAAkB,cAAtB,EAAsC;UAC3C,OAAKO,iBAAL;QACD,CAFM,MAEA,IAAIf,CAAC,CAACO,IAAF,CAAOY,MAAP,IAAiBnB,CAAC,CAACO,IAAF,CAAOa,KAA5B,EAAmC;UACxC,IAAI,OAAKC,iBAAL,CAAuBC,GAAvB,CAA2BtB,CAAC,CAACO,IAAF,CAAOgB,EAAlC,CAAJ,EAA2C;YACzC,4BAA0B,OAAKF,iBAAL,CAAuBG,GAAvB,CAA2BxB,CAAC,CAACO,IAAF,CAAOgB,EAAlC,CAA1B;cAAA;cAAOE,OAAD;cAAUC,MAAV;YACN,IAAI1B,CAAC,CAACO,IAAF,CAAOY,MAAX,EAAmB;cACjBM,OAAO,CAACzB,CAAC,CAACO,IAAF,CAAOY,MAAR,CAAP;YACD,CAFD,MAEO;cACLO,MAAM,CAAC,IAAIC,KAAJ,CAAU3B,CAAC,CAACO,IAAF,CAAOa,KAAjB,CAAD,CAAN;YACD;UACF;QACF;MACF;IACF,CApD8B;IAAA,OAsD/BQ,cAtD+B,GAsDd,YAAM;MACrB,IAAI,CAAC,OAAKC,aAAV,EAAyB;QACvB,OAAKA,aAAL,GAAqB,IAArB;QACA1B,MAAM,CAAC2B,gBAAP,CAAwB,SAAxB,EAAmC,OAAK/B,cAAxC;QACAI,MAAM,CAAC2B,gBAAP,CAAwB,cAAxB,EAAwC,OAAKC,UAA7C;MACD;MACD,IAAI,OAAK9B,iBAAT,EAA4B;QAC1B,OAAO,IAAI+B,OAAJ,CAAaP,iBAAD,EAAa;UAC9B,OAAKQ,YAAL,CAAkB,SAAlB,EAA6B,EAA7B;UACAR,OAAO;QACR,CAHM,CAAP;MAID,CALD,MAKO;QACLtB,MAAM,CAAC+B,IAAP,GAAc,QAAd;QACA,OAAK5B,MAAL,GAAcH,MAAM,CAACgC,IAAP,CACZ,OAAK9B,YAAL,CAAkB+B,QAAlB,EADY,EAEZ,QAFY,EAGZ,yCAHY,CAAd;QAKA,OAAO,IAAIJ,OAAJ,CAAaP,iBAAD,EAAa;UAC9B,OAAKY,IAAL,CAAU,SAAV,EAAqBZ,OAArB;QACD,CAFM,CAAP;MAGD;IACF,CA5E8B;IAAA,OA8E/BV,iBA9E+B,GA8EX,YAAM;MACxB,IAAI,OAAKc,aAAT,EAAwB;QACtB,OAAKA,aAAL,GAAqB,KAArB;QACA1B,MAAM,CAACmC,mBAAP,CAA2B,SAA3B,EAAsC,OAAKvC,cAA3C;QACAI,MAAM,CAACmC,mBAAP,CAA2B,cAA3B,EAA2C,OAAKP,UAAhD;MACD;MACD,IAAI,OAAKlB,UAAT,EAAqB;QACnB,OAAKA,UAAL,GAAkB,IAAlB;QACA,OAAKK,IAAL,CAAU,YAAV;MACD;MACD,OAAKG,iBAAL,CAAuBkB,OAAvB,CAA+B,gBAAoBhB,EAApB,EAA2B;QAAA;UAAzBE,OAAD;UAAUC,MAAV;QAC9B,OAAKL,iBAAL,CAAuBmB,MAAvB,CAA8BjB,EAA9B;QACAG,MAAM,CAAC,qBAAD,CAAN;MACD,CAHD;IAID,CA5F8B;IAAA,OA8F/BO,YA9F+B;MAAA,uEA8FhB,iBAAOzB,MAAP,EAAeG,MAAf;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MACTH,MAAM,KAAK,SAAX,IAAwB,CAACV,KAAI,CAAC2C,SAAlC;kBAAA;kBAAA;gBAAA;gBAAA,MACQ,IAAId,KAAJ,CAAU,sBAAV,CAAN;cAAA;gBAEIe,SAAS,GAAG5C,KAAI,CAAC6C,cAAvB;gBACA,EAAE7C,KAAI,CAAC6C,cAAP;gBAAA,iCACO,IAAIX,OAAJ,CAAY,UAACP,OAAD,EAAUC,MAAV,EAAqB;kBACtC5B,KAAI,CAACuB,iBAAL,CAAuBuB,GAAvB,CAA2BF,SAA3B,EAAsC,CAACjB,OAAD,EAAUC,MAAV,CAAtC;kBACA,IAAI5B,KAAI,CAACG,iBAAT,EAA4B;oBAC1BH,KAAI,CAACG,iBAAL,CAAuB4C,WAAvB,CAAmC;sBACjCC,OAAO,EAAE,KADwB;sBAEjCvB,EAAE,EAAEmB,SAF6B;sBAGjClC,MAHiC,EAGjCA,MAHiC;sBAIjCG,MAAM;wBACJd,OAAO,EAAEC,KAAI,CAACiD;sBADR,GAEHpC;oBAN4B,CAAnC;kBASD,CAVD,MAUO;oBACLb,KAAI,CAACQ,MAAL,CAAYuC,WAAZ,CACE;sBACEC,OAAO,EAAE,KADX;sBAEEvB,EAAE,EAAEmB,SAFN;sBAGElC,MAHF,EAGEA,MAHF;sBAIEG;oBAJF,CADF,EAOEb,KAAI,CAACO,YAAL,CAAkBD,MAPpB;oBAUA,IAAI,CAACN,KAAI,CAACmB,WAAV,EAAuB;sBACrBnB,KAAI,CAACQ,MAAL,CAAY0C,KAAZ;oBACD;kBACF;gBACF,CA3BM,CAAP;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CApG6B;MAAA;QAAA;MAAA;IAAA;IAAA,OA8I/BC,OA9I+B,GA8IrB,YAAM;MACd,IAAI,OAAK3C,MAAT,EAAiB;QACf,OAAKA,MAAL,CAAY4C,KAAZ;MACD;MACD,OAAO,OAAKtB,cAAL,EAAP;IACD,CAnJ8B;IAAA,OAqJ/BG,UArJ+B,2EAqJlB;MAAA;QAAA;UAAA;YAAA;cAAA,KACPjC,KAAI,CAACG,iBAAT;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACQH,KAAI,CAACmC,YAAL,CAAkB,YAAlB,EAAgC,EAAhC,CAAN;YAAA;cAEF,IAAInC,KAAI,CAACQ,MAAT,EAAiB;gBACfR,KAAI,CAACQ,MAAL,CAAY4C,KAAZ;cACD;cACDpD,KAAI,CAACiB,iBAAL;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CA5J6B;IAAA,OA+J/BoC,IA/J+B;MAAA,uEA+JxB,kBAAO5C,IAAP,EAAa6C,OAAb;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,IACC7C,IAAI,YAAY8C,UAAlB;kBAAA;kBAAA;gBAAA;gBAAA,MACI,IAAI1B,KAAJ,CAAU,wCAAV,CAAN;cAAA;gBAAA;gBAAA,OAGqB7B,KAAI,CAACmC,YAAL,CAAkB,MAAlB,EAA0B;kBAC/C1B,IAD+C,EAC/CA,IAD+C;kBAE/C6C;gBAF+C,CAA1B,CAAvB;cAAA;gBAAME,QAAQ;gBAIRC,SAAS,GAAGC,IAAI,CAACC,MAAL,CAAYH,QAAQ,CAACC,SAArB,CAAlB;gBACM3C,SAAS,GAAG,IAAIF,SAAJ,CAAc4C,QAAQ,CAAC1C,SAAvB,CAAlB;gBAAA,kCACO;kBACL2C,SADK,EACLA,SADK;kBAEL3C;gBAFK,CAAP;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CA1K6B;MAAA;QAAA;MAAA;IAAA;IAAA,OAgL/B8C,eAhL+B;MAAA,uEAgLb,kBAAOC,WAAP;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACO7D,KAAI,CAACmC,YAAL,CAAkB,iBAAlB,EAAqC;kBAC1D2B,OAAO,EAAEJ,IAAI,CAACK,MAAL,CAAYF,WAAW,CAACG,gBAAZ,EAAZ;gBADiD,CAArC,CAAvB;cAAA;gBAAMR,QAAQ;gBAGRC,SAAS,GAAGC,IAAI,CAACC,MAAL,CAAYH,QAAQ,CAACC,SAArB,CAAlB;gBACM3C,SAAS,GAAG,IAAIF,SAAJ,CAAc4C,QAAQ,CAAC1C,SAAvB,CAAlB;gBACA+C,WAAW,CAACI,YAAZ,CAAyBnD,SAAzB,EAAoC2C,SAApC;gBAAA,kCACOI,WAAP;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAvL6B;MAAA;QAAA;MAAA;IAAA;IAAA,OA0L/BK,mBA1L+B;MAAA,uEA0LT,kBAAOC,YAAP;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACGnE,KAAI,CAACmC,YAAL,CAAkB,qBAAlB,EAAyC;kBAC9DiC,QAAQ,EAAED,YAAY,CAACE,GAAb,CAAkBC,YAAD;oBAAA,OAAQZ,IAAI,CAACK,MAAL,CAAYO,EAAE,CAACN,gBAAH,EAAZ,CAAzB;kBAAA;gBADoD,CAAzC,CAAvB;cAAA;gBAAMR,QAAQ;gBAGRe,UAAU,GAAGf,QAAQ,CAACe,UAAT,CAAoBF,GAApB,CAAyBG,WAAD;kBAAA,OAAOd,IAAI,CAACC,MAAL,CAAYa,CAAZ,CAA/B;gBAAA,EAAnB;gBACM1D,SAAS,GAAG,IAAIF,SAAJ,CAAc4C,QAAQ,CAAC1C,SAAvB,CAAlB;gBACAqD,YAAY,GAAGA,YAAY,CAACE,GAAb,CAAiB,UAACC,EAAD,EAAKG,GAAL,EAAa;kBAC3CH,EAAE,CAACL,YAAH,CAAgBnD,SAAhB,EAA2ByD,UAAU,CAACE,GAAD,CAArC;kBACA,OAAOH,EAAP;gBACD,CAHc,CAAf;gBAAA,kCAIOH,YAAP;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CApM6B;MAAA;QAAA;MAAA;IAAA;IAE7B,IAAIO,kBAAkB,CAAC5E,QAAD,CAAtB,EAAkC;MAChC,OAAKK,iBAAL,GAAyBL,QAAzB;IACD,CAFD,MAEO,IAAI6E,QAAQ,CAAC7E,QAAD,CAAZ,EAAwB;MAC7B,OAAKS,YAAL,GAAoB,IAAIqE,GAAJ,CAAQ9E,QAAR,CAApB;MACA,OAAKS,YAAL,CAAkBsE,IAAlB,GAAyB,IAAIC,eAAJ,CAAoB;QAC3CxE,MAAM,EAAED,MAAM,CAAC0E,QAAP,CAAgBzE,MADmB;QAE3CP;MAF2C,CAApB,EAGtBuC,QAHsB,EAAzB;IAID,CANM,MAMA;MACL,MAAM,IAAIT,KAAJ,CACJ,kEADI,CAAN;IAGD;IACD,OAAKoB,QAAL,GAAgBlD,OAAhB;IACA,OAAKgB,UAAL,GAAkB,IAAlB;IACA,OAAKG,YAAL,GAAoB,KAApB;IACA,OAAKV,MAAL,GAAc,IAAd;IACA,OAAKuB,aAAL,GAAqB,KAArB;IACA,OAAKc,cAAL,GAAsB,CAAtB;IACA,OAAKtB,iBAAL,GAAyB,IAAIyD,GAAJ,EAAzB;IAAA;EACD;EAAA;IAAA;IAAA,KA4GD,eAAgB;MACd,OAAO,KAAKjE,UAAZ;IACD;EAAA;IAAA;IAAA,KAED,eAAgB;MACd,OAAO,KAAKA,UAAL,KAAoB,IAA3B;IACD;EAAA;IAAA;IAAA,KAED,eAAkB;MAChB,OAAO,KAAKG,YAAZ;IACD;EAAA;EAAA;AAAA,EA7IiC+D,YAArB;AAyMf,SAASN,QAAT,CAAkBO,CAAlB,EAAqB;EACnB,OAAO,OAAOA,CAAP,KAAa,QAApB;AACD;AAED,SAASR,kBAAT,CAA4BQ,CAA5B,EAA+B;EAC7B,OAAOC,QAAQ,CAACD,CAAD,CAAR,IAAeE,UAAU,CAACF,CAAC,CAACnC,WAAH,CAAhC;AACD;AAED,SAASoC,QAAT,CAAkBD,CAAlB,EAAqB;EACnB,OAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAAtC;AACD;AAED,SAASE,UAAT,CAAoBF,CAApB,EAAuB;EACrB,OAAO,OAAOA,CAAP,KAAa,UAApB;AACD","names":["Wallet","constructor","provider","network","_this","_handleMessage","e","_injectedProvider","source","window","origin","_providerUrl","_popup","data","method","newPublicKey","PublicKey","params","publicKey","_publicKey","equals","_handleDisconnect","_autoApprove","autoApprove","emit","result","error","_responsePromises","has","id","get","resolve","reject","Error","_handleConnect","_handlerAdded","addEventListener","disconnect","Promise","_sendRequest","name","open","toString","once","removeEventListener","forEach","delete","connected","requestId","_nextRequestId","set","postMessage","jsonrpc","_network","focus","connect","close","sign","display","Uint8Array","response","signature","bs58","decode","signTransaction","transaction","message","encode","serializeMessage","addSignature","signAllTransactions","transactions","messages","map","tx","signatures","s","idx","isInjectedProvider","isString","URL","hash","URLSearchParams","location","Map","EventEmitter","a","isObject","isFunction"],"sources":["/Users/ivan/Metadata/node_modules/@solflare-wallet/sdk/node_modules/@project-serum/sol-wallet-adapter/src/index.js"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\nexport default class Wallet extends EventEmitter {\n  constructor(provider, network) {\n    super();\n    if (isInjectedProvider(provider)) {\n      this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      this._providerUrl = new URL(provider);\n      this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network,\n      }).toString();\n    } else {\n      throw new Error(\n        'provider parameter must be an injected provider or a URL string.',\n      );\n    }\n    this._network = network;\n    this._publicKey = null;\n    this._autoApprove = false;\n    this._popup = null;\n    this._handlerAdded = false;\n    this._nextRequestId = 1;\n    this._responsePromises = new Map();\n  }\n\n  _handleMessage = (e) => {\n    if (\n      (this._injectedProvider && e.source === window) ||\n      (e.origin === this._providerUrl.origin && e.source === this._popup)\n    ) {\n      if (e.data.method === 'connected') {\n        const newPublicKey = new PublicKey(e.data.params.publicKey);\n        if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n          if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n            this._handleDisconnect();\n          }\n          this._publicKey = newPublicKey;\n          this._autoApprove = !!e.data.params.autoApprove;\n          this.emit('connect', this._publicKey);\n        }\n      } else if (e.data.method === 'disconnected') {\n        this._handleDisconnect();\n      } else if (e.data.result || e.data.error) {\n        if (this._responsePromises.has(e.data.id)) {\n          const [resolve, reject] = this._responsePromises.get(e.data.id);\n          if (e.data.result) {\n            resolve(e.data.result);\n          } else {\n            reject(new Error(e.data.error));\n          }\n        }\n      }\n    }\n  };\n\n  _handleConnect = () => {\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this._handleMessage);\n      window.addEventListener('beforeunload', this.disconnect);\n    }\n    if (this._injectedProvider) {\n      return new Promise((resolve) => {\n        this._sendRequest('connect', {});\n        resolve();\n      });\n    } else {\n      window.name = 'parent';\n      this._popup = window.open(\n        this._providerUrl.toString(),\n        '_blank',\n        'location,resizable,width=460,height=675',\n      );\n      return new Promise((resolve) => {\n        this.once('connect', resolve);\n      });\n    }\n  };\n\n  _handleDisconnect = () => {\n    if (this._handlerAdded) {\n      this._handlerAdded = false;\n      window.removeEventListener('message', this._handleMessage);\n      window.removeEventListener('beforeunload', this.disconnect);\n    }\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n    this._responsePromises.forEach(([resolve, reject], id) => {\n      this._responsePromises.delete(id);\n      reject('Wallet disconnected');\n    });\n  };\n\n  _sendRequest = async (method, params) => {\n    if (method !== 'connect' && !this.connected) {\n      throw new Error('Wallet not connected');\n    }\n    const requestId = this._nextRequestId;\n    ++this._nextRequestId;\n    return new Promise((resolve, reject) => {\n      this._responsePromises.set(requestId, [resolve, reject]);\n      if (this._injectedProvider) {\n        this._injectedProvider.postMessage({\n          jsonrpc: '2.0',\n          id: requestId,\n          method,\n          params: {\n            network: this._network,\n            ...params,\n          },\n        });\n      } else {\n        this._popup.postMessage(\n          {\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params,\n          },\n          this._providerUrl.origin,\n        );\n\n        if (!this.autoApprove) {\n          this._popup.focus();\n        }\n      }\n    });\n  };\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return this._autoApprove;\n  }\n\n  connect = () => {\n    if (this._popup) {\n      this._popup.close();\n    }\n    return this._handleConnect();\n  };\n\n  disconnect = async () => {\n    if (this._injectedProvider) {\n      await this._sendRequest('disconnect', {});\n    }\n    if (this._popup) {\n      this._popup.close();\n    }\n    this._handleDisconnect();\n  };\n\n  sign = async (data, display) => {\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n\n    const response = await this._sendRequest('sign', {\n      data,\n      display,\n    });\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    return {\n      signature,\n      publicKey,\n    };\n  };\n\n  signTransaction = async (transaction) => {\n    const response = await this._sendRequest('signTransaction', {\n      message: bs58.encode(transaction.serializeMessage()),\n    });\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    transaction.addSignature(publicKey, signature);\n    return transaction;\n  };\n\n  signAllTransactions = async (transactions) => {\n    const response = await this._sendRequest('signAllTransactions', {\n      messages: transactions.map((tx) => bs58.encode(tx.serializeMessage())),\n    });\n    const signatures = response.signatures.map((s) => bs58.decode(s));\n    const publicKey = new PublicKey(response.publicKey);\n    transactions = transactions.map((tx, idx) => {\n      tx.addSignature(publicKey, signatures[idx]);\n      return tx;\n    });\n    return transactions;\n  };\n}\n\nfunction isString(a) {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a) {\n  return isObject(a) && isFunction(a.postMessage);\n}\n\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}\n\nfunction isFunction(a) {\n  return typeof a === 'function';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}