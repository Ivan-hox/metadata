{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMemoTransfer = exports.MEMO_TRANSFER_SIZE = exports.MemoTransferLayout = void 0;\nvar buffer_layout_1 = require(\"@solana/buffer-layout\");\nvar buffer_layout_utils_1 = require(\"@solana/buffer-layout-utils\");\nvar extensionType_js_1 = require(\"../extensionType.js\");\n/** Buffer layout for de/serializing a transfer fee config extension */\nexports.MemoTransferLayout = (0, buffer_layout_1.struct)([(0, buffer_layout_utils_1.bool)('requireIncomingTransferMemos')]);\nexports.MEMO_TRANSFER_SIZE = exports.MemoTransferLayout.span;\nfunction getMemoTransfer(account) {\n  var extensionData = (0, extensionType_js_1.getExtensionData)(extensionType_js_1.ExtensionType.MemoTransfer, account.tlvData);\n  if (extensionData !== null) {\n    return exports.MemoTransferLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}\nexports.getMemoTransfer = getMemoTransfer;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAEA;AAQA;AACaA,0BAAkB,GAAG,0BAAM,EAAe,CAAC,8BAAI,EAAC,8BAA8B,CAAC,CAAC,CAAC;AAEjFA,0BAAkB,GAAGA,0BAAkB,CAACC,IAAI;AAEzD,SAAgBC,eAAe,CAACC,OAAgB;EAC5C,IAAMC,aAAa,GAAG,uCAAgB,EAACC,gCAAa,CAACC,YAAY,EAAEH,OAAO,CAACI,OAAO,CAAC;EACnF,IAAIH,aAAa,KAAK,IAAI,EAAE;IACxB,OAAOJ,0BAAkB,CAACQ,MAAM,CAACJ,aAAa,CAAC;GAClD,MAAM;IACH,OAAO,IAAI;;AAEnB;AAPAJ","names":["exports","span","getMemoTransfer","account","extensionData","extensionType_js_1","MemoTransfer","tlvData","decode"],"sources":["/Users/ivan/Metadata/node_modules/@solana/spl-token/src/extensions/memoTransfer/state.ts"],"sourcesContent":["import { struct } from '@solana/buffer-layout';\nimport { bool } from '@solana/buffer-layout-utils';\nimport type { Account } from '../../state/account.js';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n\n/** MemoTransfer as stored by the program */\nexport interface MemoTransfer {\n    /** Require transfers into this account to be accompanied by a memo */\n    requireIncomingTransferMemos: boolean;\n}\n\n/** Buffer layout for de/serializing a transfer fee config extension */\nexport const MemoTransferLayout = struct<MemoTransfer>([bool('requireIncomingTransferMemos')]);\n\nexport const MEMO_TRANSFER_SIZE = MemoTransferLayout.span;\n\nexport function getMemoTransfer(account: Account): MemoTransfer | null {\n    const extensionData = getExtensionData(ExtensionType.MemoTransfer, account.tlvData);\n    if (extensionData !== null) {\n        return MemoTransferLayout.decode(extensionData);\n    } else {\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}